/*
 * Copyright 2012-2014 VMware, Inc.  All rights reserved.
 */
package vmodl.test.uber.generics;

import vmodl.test.uber.UberResources;
import vmodl.test.uber.shared.SharedEmptyStruct;
import vmodl.test.uber.shared.SharedSimpleStruct;
import vmodl.test.uber.shared.SharedComplexStruct;

import vmodl.lang.*;

/**
 * Specifies a test interface for VMODL2 {@literal Map<K,V>} types,
 * where the value ({@code V}) is a structure type.
 * <p>
 * The key ({@code K}) MUST be a primitive type for equals/hash reasons,
 * as constrained by the VMODL2 spec.  The VMODL2 spec further constrains
 * the primitive type to one of the following:
 * <ul>
 *  <li> {@code String}
 *  <li> {@code Long}
 *  <li> {@code ID}
 * </ul>
 */
@Resource(UberResources.FOO)
interface UberStructureMaps {

    /**
     * Test for complex map as argument and as return value.
     *
     * @param input test input
     * @return same as {@param.name input}
     */
    Map<String, SharedEmptyStruct> echoStringToSharedEmptyStructMap(
            Map<String, SharedEmptyStruct> input);

    /**
     * Test for complex map as argument and as return value.
     *
     * @param input test input
     * @return same as {@param.name input}
     */
    Map<String, SharedSimpleStruct> echoStringToSharedSimpleStructMap(
            Map<String, SharedSimpleStruct> input);

    /**
     * Test for complex map as argument and as return value.
     *
     * @param input test input
     * @return same as {@param.name input}
     */
    Map<String, SharedComplexStruct> echoStringToSharedComplexStructMap(
            Map<String, SharedComplexStruct> input);

    //TODO: consider extensive coverage of K/V combos:
    // Map<Long, Shared*Struct>
    // Map<ID, Shared*Struct>


    /**
     * Test for complex map as argument and as return value.
     *
     * @param input test input
     * @return same as {@param.name input}
     */
    Map<Long, LocalSimpleStruct> echoLongToLocalSimpleStructMap(
            Map<Long, LocalSimpleStruct> input);

    /**
     * Test for complex map as argument and as return value.
     *
     * @param input test input
     * @return same as {@param.name input}
     */
    Map<Long, LocalComplexStruct> echoLongToLocalComplexStructMap(
            Map<Long, LocalComplexStruct> input);

    //TODO: consider extensive coverage of K/V combos:
    // Map<String, Local*Struct>
    // Map<ID, Local*Struct>

    /**
     * Test for complex map as argument and as return value.
     *
     * @param input test input
     * @return same as {@param.name input}
     */
    Map<ID, NestedSimpleStruct> echoIdToNestedSimpleStructMap(
            Map<ID, NestedSimpleStruct> input);

    //TODO: consider extensive coverage of K/V combos:
    // Map<String, Nested*Struct>
    // Map<Long, Nested*Struct>

    /**
     * Nested simple structure used to test generics.
     */
    class NestedSimpleStruct {
        /** name property */
        String name;
    }
}
