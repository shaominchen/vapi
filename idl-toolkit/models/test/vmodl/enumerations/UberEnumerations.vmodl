/*
 * Copyright 2012-2014 VMware, Inc.  All rights reserved.
 */
package vmodl.test.uber.enumerations;

import vmodl.test.uber.shared.SharedEnglishEnum;
//import vmodl.test.uber.shared.SharedGreekEnum;

import vmodl.lang.*;


/** Specifies a test interface for VMODL2 enumeration types. */
interface UberEnumerations {

    /** test nested enumumeration within an interface */
    enum NestedInServiceEnum {
        /** const one */
        ONE,

        /** const two */
        TWO,

        /** const three */
        THREE,
    }

    /** Provides a test class that holds a VMODL2 enumeration type. */
    class NestedInServiceStruct {

        /** test nested enumumeration within a class */
        enum NestedInStructInServiceEnum {
            /** const foo */
            FOO,

            /** const bar */
            BAR,
        }

        /** enum ref */
        NestedInStructInServiceEnum fubar;
    }

    /**
     * echo an enumeration value
     *
     * @param input test value
     * @return same as {@param.name input}
     */
    NestedInServiceEnum echoEnum(NestedInServiceEnum input);

    /**
     * echo optional enum value
     *
     * @param input test value
     * @param.optional input reason
     *
     * @return same as {@param.name input}
     * @return.optional reason
     */
    Optional<NestedInServiceEnum> echoEnumOptional(
            Optional<NestedInServiceEnum> input);

    /**
     * echo List of enum
     *
     * @param input test value
     * @return same as {@param.name input}
     */
    List<NestedInServiceEnum> echoEnumList(
            List<NestedInServiceEnum> input);

    /**
     * echo an enumeration value
     *
     * @param input test value
     * @return same as {@param.name input}
     */
    SharedEnglishEnum echoSharedEnum(SharedEnglishEnum input);
}
