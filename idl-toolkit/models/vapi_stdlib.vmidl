<?xml version="1.0" encoding="UTF-8"?>
<model name="com.vmware.vapi" fingerprint="c3ae5a15dbb8fd9cd10b7d63ab0e944a76871ebf">
  <author>
    <name>com.vmware.vapi.idl.model.tools.XmlIdlWriter</name>
    <version>2.6.0.4750157</version>
  </author>
  <exports>
    <package name="com.vmware.vapi.std">
      <structure name="AuthenticationScheme">
        <constant name="NO_AUTHENTICATION"/>
        <constant name="SAML_BEARER_TOKEN"/>
        <constant name="SAML_HOK_TOKEN"/>
        <constant name="SESSION_ID"/>
        <constant name="USER_PASSWORD"/>
        <constant name="OAUTH_ACCESS_TOKEN"/>
      </structure>
      <structure name="DynamicID"/>
      <structure name="LocalizableMessage"/>
    </package>
    <package name="com.vmware.vapi.std.errors">
      <structure name="ArgumentLocations"/>
      <structure name="FileLocations"/>
      <structure name="TransientIndication"/>
      <error name="AlreadyExists" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="AlreadyInDesiredState" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="Canceled" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="ConcurrentChange" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="Error" parent="Exception"/>
      <error name="FeatureInUse" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="InternalServerError" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="InvalidArgument" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="InvalidElementConfiguration" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="InvalidElementType" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="InvalidRequest" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="NotAllowedInCurrentState" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="NotFound" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="OperationNotFound" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="ResourceBusy" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="ResourceInUse" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="ResourceInaccessible" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="ServiceUnavailable" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="TimedOut" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="UnableToAllocateResource" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="Unauthenticated" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="Unauthorized" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="UnexpectedInput" parent="com.vmware.vapi.std.errors.Error"/>
      <error name="Unsupported" parent="com.vmware.vapi.std.errors.Error"/>
    </package>
    <package name="com.vmware.vapi.std.interposition">
      <structure name="InvocationRequest"/>
      <structure name="InvocationResult"/>
      <structure name="SecurityPrincipal"/>
    </package>
  </exports>
  <package name="com.vmware.vapi.metadata" fingerprint="88cb92a915c920501e4942bdedfbf1d322deadd0">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atLink resolved="com.vmware.vapi.metadata" pkg="true">com.vmware.vapi.metadata</atLink>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides metadata </text>
          <atTerm>services</atTerm>
          <text>. These are </text>
          <atTerm>services</atTerm>
          <text> that provide different facets of API information. Clients can use these </text>
          <atTerm>services</atTerm>
          <text> to: </text>
          <ul>
            <text> </text>
            <li>
              <text> Discover APIs available in the infrastructure. </text>
            </li>
            <text> </text>
            <li>
              <text> Fetch metadata that can be used to build presentation layers like CLI, REST, etc.</text>
            </li>
            <text> </text>
            <li>
              <text> Fetch authentication and authorization metadata. </text>
            </li>
            <text> </text>
          </ul>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@link com.vmware.vapi.metadata} {@term package} provides metadata {@term services}. These</text>
        <text>are {@term services} that provide different facets of API information. Clients can</text>
        <text>use these {@term services} to:</text>
        <text>&lt;ul&gt;</text>
        <text>&lt;li&gt; Discover APIs available in the infrastructure. &lt;/li&gt;</text>
        <text>&lt;li&gt; Fetch metadata that can be used to build presentation layers like CLI, REST, etc.&lt;/li&gt;</text>
        <text>&lt;li&gt; Fetch authentication and authorization metadata. &lt;/li&gt;</text>
        <text>&lt;/ul&gt;</text>
      </description>
    </doc>
    <enumeration name="SourceType" namespace="com.vmware.vapi.metadata" fingerprint="4da3053f1f4c51eaf606ebbdb5112081c70a8c88">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.SourceType" type="true" tag="name">SourceType</atName>
            <text> </text>
            <atTerm>enumerated type</atTerm>
            <text> defines the types of sources for API metadata. You specify the type of source when adding a metadata source to a metadata service.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name SourceType} {@term enumerated type} defines the types of sources</text>
          <text>for API metadata. You specify the type of source when adding a metadata</text>
          <text>source to a metadata service.</text>
        </description>
      </doc>
      <constant name="FILE">
        <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates the metadata source is a JSON file.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates the metadata source is a JSON file.</text>
          </description>
        </doc>
        <value/>
      </constant>
      <constant name="REMOTE">
        <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates the metadata source is a remote server.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates the metadata source is a remote server.</text>
          </description>
        </doc>
        <value/>
      </constant>
    </enumeration>
    <structure name="SourceCreateSpec" namespace="com.vmware.vapi.metadata" fingerprint="65f669c1c1abb2971bbf9773ab78853068fbfa7f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.SourceCreateSpec" type="true" tag="name">SourceCreateSpec</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the registration information for a metadata source.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name SourceCreateSpec} {@term structure} contains</text>
          <text>the registration information for a metadata source.</text>
        </description>
      </doc>
      <metadata>
        <property name="Includable" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="description">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language human readable description of the source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language human readable description of the source.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="type">
        <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the metadata source.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="filepath">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Absolute file path of the metamodel metadata file that has the metamodel information about one component element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.SourceCreateSpec.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.SourceType.FILE" member="true">SourceType#FILE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Absolute file path of the metamodel metadata file that has</text>
            <text>the metamodel information about one component element.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">FILE</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="address">
        <type primitive="URI"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Connection information of the remote server. This should be of the format http(s)://IP:port/namespace. </text>
              <paragraph>
                <text> The remote server should contain the </text>
                <atTerm>services</atTerm>
                <text> in </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel" pkg="true">com.vmware.vapi.metadata.metamodel</atLink>
                <text> </text>
                <atTerm>package</atTerm>
                <text>. It could expose metamodel information of one or more components.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.SourceCreateSpec.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.SourceType.REMOTE" member="true">SourceType#REMOTE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Connection information of the remote server. This should be</text>
            <text>of the format http(s)://IP:port/namespace.</text>
            <text>&lt;p&gt;</text>
            <text>The remote server should contain the {@term services} in</text>
            <text>{@link com.vmware.vapi.metadata.metamodel} {@term package}.</text>
            <text>It could expose metamodel information of one or more</text>
            <text>components.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">REMOTE</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="SourceInfo" namespace="com.vmware.vapi.metadata" fingerprint="f6097e357d8df702091d023131f5b1b68be7b238">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Metadata source info</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Metadata source info</text>
        </description>
      </doc>
      <attribute name="type">
        <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the metadata source</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the metadata source</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="fileName">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Name of the metadata source file</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.SourceInfo.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.SourceType.FILE" member="true">SourceType#FILE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Name of the metadata source file</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">FILE</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="remoteAddr">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Address of the remote metadata source</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.SourceInfo.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.SourceType.REMOTE" member="true">SourceType#REMOTE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Address of the remote metadata source</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">REMOTE</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="msgProtocol">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Message protocol to be used</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.SourceInfo.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.SourceType.REMOTE" member="true">SourceType#REMOTE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Message protocol to be used</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">REMOTE</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
  </package>
  <package name="com.vmware.vapi.metadata.authentication" fingerprint="f6f4f00f97fa2b452b6308f7b050c545b2336349">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.authentication" pkg="true" tag="name">com.vmware.vapi.metadata.authentication</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that expose authentication information for operation elements across all the service elements. </text>
          <paragraph>
            <text> To calculate the effective authentication information for an operation element, you should first see if there is an authentication scheme specified for the operation element. If it is not specified, then authentication scheme for the service element that contains this operation element is used. If it is not specified for the service element as well, then the authentication scheme for the package element that contains this service element is used.</text>
          </paragraph>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.authentication} {@term package} provides</text>
        <text>{@term services} that expose authentication information for operation</text>
        <text>elements across all the service elements.</text>
        <text>&lt;p&gt;</text>
        <text>To calculate the effective authentication information for an operation element,</text>
        <text>you should first see if there is an authentication scheme specified for the</text>
        <text>operation element. If it is not specified, then authentication scheme for the</text>
        <text>service element that contains this operation element is used. If it is not specified</text>
        <text>for the service element as well, then the authentication scheme for the package</text>
        <text>element that contains this service element is used.</text>
      </description>
    </doc>
    <structure name="AuthenticationInfo" namespace="com.vmware.vapi.metadata.authentication" fingerprint="66b251a5a84d6fdc70f88f9f13bf541c4789867b">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.AuthenticationInfo" type="true" tag="name">AuthenticationInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> describes the authentication information. Authentication information could be specified for a package element, service elenent or an operation element. </text>
            <paragraph>
              <text> Using the authentication scheme information, a client invoking an API call from any </text>
              <atTerm>service</atTerm>
              <text> can figure out what kind of credentials are needed for that API call.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name AuthenticationInfo} {@term structure} describes the authentication</text>
          <text>information. Authentication information could be specified for a package element,</text>
          <text>service elenent or an operation element.</text>
          <text>&lt;p&gt;</text>
          <text>Using the authentication scheme information, a client invoking an API call from</text>
          <text>any {@term service} can figure out what kind of credentials are needed for that</text>
          <text>API call.</text>
        </description>
      </doc>
      <enumeration name="SchemeType" namespace="com.vmware.vapi.metadata.authentication.AuthenticationInfo" fingerprint="16e958dcdadee63fbfcdc6de663e25ad7585fd89">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.authentication.AuthenticationInfo.SchemeType" type="true" tag="name">SchemeType</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> provides </text>
              <atTerm>enumeration values</atTerm>
              <text> for the set of valid authentication scheme types.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name SchemeType} {@term enumerated type} provides {@term enumeration values}</text>
            <text>for the set of valid authentication scheme types.</text>
          </description>
        </doc>
        <constant name="SESSIONLESS">
          <type reference="SchemeType" namespace="com.vmware.vapi.metadata.authentication.AuthenticationInfo" target="ENUMERATION" declaration="com.vmware.vapi.metadata.authentication.AuthenticationInfo.SchemeType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates that the scheme is a session less authentication scheme, the user is authenticated on every </text>
                <atTerm>operation</atTerm>
                <text>. There is no explicit session establishment.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates that the scheme is a session less authentication scheme,</text>
              <text>the user is authenticated on every {@term operation}. There is no explicit session</text>
              <text>establishment.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="SESSION_AWARE">
          <type reference="SchemeType" namespace="com.vmware.vapi.metadata.authentication.AuthenticationInfo" target="ENUMERATION" declaration="com.vmware.vapi.metadata.authentication.AuthenticationInfo.SchemeType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates that the scheme is a session aware authentication scheme. It requires an explicit login before executing a </text>
                <atTerm>operation</atTerm>
                <text> and logout when a session terminates. A </text>
                <atTerm>service</atTerm>
                <text> might choose to have a session aware scheme if it wants to associate some state corresponding to the user until the user logs out or if it wants to mitigate the cost of authenticating the user on every </text>
                <atTerm>operation</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates that the scheme is a session aware authentication scheme. It</text>
              <text>requires an explicit login before executing a {@term operation} and logout when a</text>
              <text>session terminates. A {@term service} might choose to have a session aware scheme</text>
              <text>if it wants to associate some state corresponding to the user until the</text>
              <text>user logs out or if it wants to mitigate the cost of authenticating the</text>
              <text>user on every {@term operation}.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="schemeType">
        <type reference="SchemeType" namespace="com.vmware.vapi.metadata.authentication.AuthenticationInfo" target="ENUMERATION" declaration="com.vmware.vapi.metadata.authentication.AuthenticationInfo.SchemeType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The type of the authentication scheme.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The type of the authentication scheme.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="sessionManager">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>In a session aware authentication scheme, a session manager is required that supports </text>
              <atCode>create</atCode>
              <text>, </text>
              <atCode>delete</atCode>
              <text> and </text>
              <atCode>keepAlive</atCode>
              <text> </text>
              <atTerm>operations</atTerm>
              <text>. The fully qualified </text>
              <atTerm>service</atTerm>
              <text> name of the session manager is provided in </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication.AuthenticationInfo.sessionManager" member="true">AuthenticationInfo#sessionManager</atLink>
              <text> </text>
              <atTerm>field</atTerm>
              <text>. This </text>
              <atTerm>service</atTerm>
              <text> is responsible for handling sessions.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.authentication.AuthenticationInfo.schemeType" member="true" tag="name">#schemeType</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication.AuthenticationInfo.SchemeType.SESSION_AWARE" member="true">SchemeType#SESSION_AWARE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>In a session aware authentication scheme, a session manager is required that supports</text>
            <text>{@code create}, {@code delete} and {@code keepAlive} {@term operations}. The fully</text>
            <text>qualified {@term service} name of the session manager is provided in</text>
            <text>{@link AuthenticationInfo#sessionManager} {@term field}. This {@term service} is</text>
            <text>responsible for handling sessions.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">schemeType</entry>
            <entry key="value" type="java.lang.String">SESSION_AWARE</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="scheme">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>String identifier of the authentication scheme. </text>
              <paragraph>
                <text> Following are the supported authentication schemes by the infrastructure: </text>
              </paragraph>
              <ul>
                <text> </text>
                <li>
                  <text>The identifier </text>
                  <atCode>com.vmware.vapi.std.security.saml_hok_token</atCode>
                  <text> for SAML holder of key token based authentication mechanism. </text>
                </li>
                <text> </text>
                <li>
                  <text>The identifier </text>
                  <atCode>com.vmware.vapi.std.security.bearer_token</atCode>
                  <text> for SAML bearer token based authentication mechanism. </text>
                </li>
                <text> </text>
                <li>
                  <text>The identifier </text>
                  <atCode>com.vmware.vapi.std.security.session_id</atCode>
                  <text> for session based authentication mechanism. </text>
                </li>
                <text> </text>
                <li>
                  <text>The identifier </text>
                  <atCode>com.vmware.vapi.std.security.user_pass</atCode>
                  <text> for username and password based authentication mechanism. </text>
                </li>
                <text> </text>
              </ul>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>String identifier of the authentication scheme.</text>
            <text>&lt;p&gt;</text>
            <text>Following are the supported authentication schemes by the infrastructure:</text>
            <text>&lt;ul&gt;</text>
            <text>&lt;li&gt;The identifier {@code com.vmware.vapi.std.security.saml_hok_token} for</text>
            <text>SAML holder of key token based authentication mechanism. &lt;/li&gt;</text>
            <text>&lt;li&gt;The identifier {@code com.vmware.vapi.std.security.bearer_token} for</text>
            <text>SAML bearer token based authentication mechanism. &lt;/li&gt;</text>
            <text>&lt;li&gt;The identifier {@code com.vmware.vapi.std.security.session_id} for</text>
            <text>session based authentication mechanism. &lt;/li&gt;</text>
            <text>&lt;li&gt;The identifier {@code com.vmware.vapi.std.security.user_pass} for</text>
            <text>username and password based authentication mechanism. &lt;/li&gt;</text>
            <text>&lt;/ul&gt;</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ComponentData" namespace="com.vmware.vapi.metadata.authentication" fingerprint="38cd5af3627e67f3d4b6fd0a05a9916f2ae6cafc">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.ComponentData" type="true" tag="name">ComponentData</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the authentication information of the component along with its fingerprint.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ComponentData} {@term structure} contains the authentication information</text>
          <text>of the component along with its fingerprint.</text>
        </description>
      </doc>
      <attribute name="info">
        <type reference="ComponentInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.ComponentInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Authentication information of the component. This includes information about all the </text>
              <atTerm>packages</atTerm>
              <text> in the component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Authentication information of the component. This includes information about all the</text>
            <text>{@term packages} in the component.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="fingerprint">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Fingerprint of the metadata of the component. </text>
              <paragraph>
                <text> Authentication information could change when there is an infrastructure update. Since the data present in </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.ComponentData.info" member="true">ComponentData#info</atLink>
                <text> could be quite large, </text>
                <atName resolved="com.vmware.vapi.metadata.authentication.ComponentData.fingerprint" member="true" tag="name">#fingerprint</atName>
                <text> provides a convenient way to check if the data for a particular component is updated. </text>
              </paragraph>
              <paragraph>
                <text> You should store the fingerprint associated with a component. After an update, by invoking the </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.Component.fingerprint" member="true">com.vmware.vapi.metadata.authentication.Component#fingerprint</atLink>
                <text> </text>
                <atTerm>operation</atTerm>
                <text>, you can retrieve the new fingerprint for the component. If the new fingerprint and the previously stored fingerprint do not match, clients can then use the </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.Component.get" member="true">com.vmware.vapi.metadata.authentication.Component#get</atLink>
                <text> to retrieve the new authentication information for the component.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Fingerprint of the metadata of the component.</text>
            <text>&lt;p&gt;</text>
            <text>Authentication information could change when there is an infrastructure update.</text>
            <text>Since the data present in {@link ComponentData#info} could be quite large,</text>
            <text>{@name #fingerprint} provides a convenient way to check if the data for a particular</text>
            <text>component is updated.</text>
            <text>&lt;p&gt;</text>
            <text>You should store the fingerprint associated with a component. After an update,</text>
            <text>by invoking the {@link com.vmware.vapi.metadata.authentication.Component#fingerprint}</text>
            <text>{@term operation}, you can retrieve the new fingerprint for the component. If the new</text>
            <text>fingerprint and the previously stored fingerprint do not match, clients can then use</text>
            <text>the {@link com.vmware.vapi.metadata.authentication.Component#get} to retrieve the new</text>
            <text>authentication information for the component.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ComponentInfo" namespace="com.vmware.vapi.metadata.authentication" fingerprint="4ff5e00a23db0e6305b3fc78adca902a92e69f3f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.ComponentInfo" type="true" tag="name">ComponentInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains authentication information of a component element. </text>
            <paragraph>
              <text> For an explanation of authentication information contained within component elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication.Component" type="true">com.vmware.vapi.metadata.authentication.Component</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ComponentInfo} {@term structure} contains authentication</text>
          <text>information of a component element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of authentication information contained within</text>
          <text>component elements, see {@link com.vmware.vapi.metadata.authentication.Component}.</text>
        </description>
      </doc>
      <attribute name="packages">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.PackageInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Authentication information of all the package elements. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the package element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the authentication information for the package element. </text>
              <paragraph>
                <text> For an explanation of authentication information containment within package elements, see </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.Package" type="true">com.vmware.vapi.metadata.authentication.Package</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Authentication information of all the package elements. The key in the</text>
            <text>{@term map} is the identifier of the package element and the value in the {@term map}</text>
            <text>is the authentication information for the package element.</text>
            <text>&lt;p&gt;</text>
            <text>For an explanation of authentication information containment within</text>
            <text>package elements, see {@link com.vmware.vapi.metadata.authentication.Package}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="OperationInfo" namespace="com.vmware.vapi.metadata.authentication" fingerprint="26c6a8941e11c97249852e9732f9a59367fd6562">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.OperationInfo" type="true" tag="name">OperationInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains authentication information of an operation element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name OperationInfo} {@term structure} contains authentication information</text>
          <text>of an operation element.</text>
        </description>
      </doc>
      <attribute name="schemes">
        <type generic="List">
          <type reference="AuthenticationInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.AuthenticationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of authentication schemes used by an operation element. The authentication scheme specified on the service element corresponding to this operation element is ignored.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of authentication schemes used by an operation element. The</text>
            <text>authentication scheme specified on the service element corresponding to this</text>
            <text>operation element is ignored.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="PackageInfo" namespace="com.vmware.vapi.metadata.authentication" fingerprint="40db3daecefd1569dfe40eb248d6c11cb7886daa">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.PackageInfo" type="true" tag="name">PackageInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains authentication information of a package element. </text>
            <paragraph>
              <text> For an explanation of authentication information contained within package elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication.Package" type="true">com.vmware.vapi.metadata.authentication.Package</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name PackageInfo} {@term structure} contains authentication information</text>
          <text>of a package element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of authentication information contained within package</text>
          <text>elements, see {@link com.vmware.vapi.metadata.authentication.Package}.</text>
        </description>
      </doc>
      <attribute name="schemes">
        <type generic="List">
          <type reference="AuthenticationInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.AuthenticationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of authentication schemes to be used for all the operation elements contained in this package element. If a particular service or operation element has no explicit authentications defined in the authentication defintion file, these authentication schemes are used for authenticating the user.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of authentication schemes to be used for all the operation elements</text>
            <text>contained in this package element. If a particular service or operation</text>
            <text>element has no explicit authentications defined in the authentication</text>
            <text>defintion file, these authentication schemes are used for authenticating</text>
            <text>the user.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="services">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.ServiceInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about all service elements contained in this package element that contain authentication information. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the service element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the authentication information for the service element. </text>
              <paragraph>
                <text> For an explanation of authentication information containment within service elements, see </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.Service" type="true">com.vmware.vapi.metadata.authentication.Service</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Information about all service elements contained in this package element</text>
            <text>that contain authentication information. The key in the {@term map} is the identifier</text>
            <text>of the service element and the value in the {@term map} is the authentication</text>
            <text>information for the service element.</text>
            <text>&lt;p&gt;</text>
            <text>For an explanation of authentication information containment within service</text>
            <text>elements, see {@link com.vmware.vapi.metadata.authentication.Service}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="ServiceInfo" namespace="com.vmware.vapi.metadata.authentication" fingerprint="fa5d8f45f92ae3433a36d00f1e7e21433e72efc6">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.ServiceInfo" type="true" tag="name">ServiceInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains authentication information of a service element. </text>
            <paragraph>
              <text> For an explanation of authentication information contained within service elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication.Service" type="true">com.vmware.vapi.metadata.authentication.Service</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ServiceInfo} {@term structure} contains authentication information</text>
          <text>of a service element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of authentication information contained within service</text>
          <text>elements, see {@link com.vmware.vapi.metadata.authentication.Service}.</text>
        </description>
      </doc>
      <attribute name="schemes">
        <type generic="List">
          <type reference="AuthenticationInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.AuthenticationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of authentication schemes to be used for all the operation elements contained in this service element. The authentication scheme specified on the package element corresponding to this service element is ignored.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of authentication schemes to be used for all the operation elements</text>
            <text>contained in this service element. The authentication scheme specified</text>
            <text>on the package element corresponding to this service element is ignored.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="operations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.OperationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about all operation elements contained in this service element that contain authentication information. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the operation element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the authentication information for the operation element. </text>
              <paragraph>
                <text> For an explanation of containment of authentication information within operation elements, see </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.service.Operation" type="true">com.vmware.vapi.metadata.authentication.service.Operation</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Information about all operation elements contained in this service element</text>
            <text>that contain authentication information. The key in the {@term map} is the identifier</text>
            <text>of the operation element and the value in the {@term map} is the authentication</text>
            <text>information for the operation element.</text>
            <text>&lt;p&gt;</text>
            <text>For an explanation of containment of authentication information within operation</text>
            <text>elements, see {@link com.vmware.vapi.metadata.authentication.service.Operation}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
        </metadata>
      </attribute>
    </structure>
    <service name="Component" namespace="com.vmware.vapi.metadata.authentication" fingerprint="8cf131de4142b5ca55ce29bd79f386b2d7cdb7d2">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.Component" type="true" tag="name">Component</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve authentication information of a component element. </text>
            <paragraph>
              <text> A component element is said to contain authentication information if any one of package elements contained in it has authentication information.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Component} {@term service} provides {@term operations}</text>
          <text>to retrieve authentication information of a component element.</text>
          <text>&lt;p&gt;</text>
          <text>A component element is said to contain authentication information if</text>
          <text>any one of package elements contained in it has authentication</text>
          <text>information.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.component</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for component.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.component</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the component elements that have authentication information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the component elements that have</text>
            <text>authentication information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the component elements that have authentication information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the component elements that</text>
              <text>have authentication information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="1ef1b7eb8afe4032eb1e53e66a1dc9555783e369">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves authentication information about the component element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Component.get#componentId">componentId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.ComponentData" type="true">ComponentData</atLink>
                <text> contains the authentication information about the component element and it's fingerprint. It contains information about all the package elements that belong to this component element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves authentication information about the component element</text>
            <text>corresponding to {@param.name componentId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link ComponentData} contains the authentication information about</text>
            <text>the component element and it's fingerprint. It contains information about all</text>
            <text>the package elements that belong to this component element.</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the component element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the component element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the component element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Component.get#componentId">componentId</atParamName>
                <text> does not have any authentication information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the component element associated with {@param.name componentId}</text>
              <text>does not have any authentication information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ComponentData" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.ComponentData"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.ComponentData" type="true">ComponentData</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Component.get#componentId">componentId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link ComponentData} instance that corresponds to</text>
              <text>{@param.name componentId}</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="fingerprint" fingerprint="a95f96ea304f419f7ab585c089e23350d3275608">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves the fingerprint computed from the authentication metadata of the component element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Component.fingerprint#componentId">componentId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The fingerprint provides clients an efficient way to check if the metadata for a particular component has been modified on the server. The client can do this by comparing the result of this operation with the fingerprint returned in the result of </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.Component.get" member="true">com.vmware.vapi.metadata.authentication.Component#get</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves the fingerprint computed from the authentication metadata of</text>
            <text>the component element corresponding to {@param.name componentId}.</text>
            <text>&lt;p&gt;</text>
            <text>The fingerprint provides clients an efficient way to check if the metadata</text>
            <text>for a particular component has been modified on the server. The client can do</text>
            <text>this by comparing the result of this operation with the fingerprint returned</text>
            <text>in the result of {@link com.vmware.vapi.metadata.authentication.Component#get}.</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the component element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the component element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the component element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Component.fingerprint#componentId">componentId</atParamName>
                <text> does not have any authentication information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the component element associated with {@param.name componentId}</text>
              <text>does not have any authentication information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The fingerprint computed from the authentication metadata of the component.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The fingerprint computed from the authentication metadata of the component.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Package" namespace="com.vmware.vapi.metadata.authentication" fingerprint="5a7ab5fc8a8d756b398a46ec850361cae133452f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.Package" type="true" tag="name">Package</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve authentication information of a package element. </text>
            <paragraph>
              <text> A package element is said to contain authentication information if there is a default authentication assigned to all service elements contained in the package element or if one of the service element contained in this package element has authentication information.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Package} {@term service} provides {@term operations}</text>
          <text>to retrieve authentication information of a package element.</text>
          <text>&lt;p&gt;</text>
          <text>A package element is said to contain authentication information if there</text>
          <text>is a default authentication assigned to all service elements contained</text>
          <text>in the package element or if one of the service element contained in this package</text>
          <text>element has authentication information.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for package.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for package.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.package</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the package elements that have authentication information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the package elements that have</text>
            <text>authentication information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the package elements that have authentication information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the package elements that</text>
              <text>have authentication information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="52fd92d182e2c60e2373542a22463219a8a47b97">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves authentication information about the package element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Package.get#packageId">packageId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves authentication information about the package element</text>
            <text>corresponding to {@param.name packageId}.</text>
          </description>
        </doc>
        <parameter name="packageId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the package element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the package element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the package element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Package.get#packageId">packageId</atParamName>
                <text> does not have any authentication information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the package element associated with {@param.name packageId}</text>
              <text>does not have any authentication information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.PackageInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.PackageInfo" type="true">PackageInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Package.get#packageId">packageId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link PackageInfo} instance that corresponds to</text>
              <text>{@param.name packageId}</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Service" namespace="com.vmware.vapi.metadata.authentication" fingerprint="f184fc1414bfb952ad41ac80f7a1171f3de18643">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.Service" type="true" tag="name">Service</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve authentication information of a service element. </text>
            <paragraph>
              <text> A service element is said to contain authentication information if there is a default authentication assigned to all operation elements contained in a service element or if one of the operation elements contained in this service element has authentication information.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Service} {@term service} provides {@term operations}</text>
          <text>to retrieve authentication information of a service element.</text>
          <text>&lt;p&gt;</text>
          <text>A service element is said to contain authentication information if there</text>
          <text>is a default authentication assigned to all operation elements contained in</text>
          <text>a service element or if one of the operation elements contained in this service</text>
          <text>element has authentication information.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for service.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.service</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the service elements that have authentication information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the service elements that have</text>
            <text>authentication information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the service elements that have authentication information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the service elements that</text>
              <text>have authentication information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="3428b3006175cd6be9da534bc993d3f5693ea316">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves authentication information about the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Service.get#serviceId">serviceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves authentication information about the service element</text>
            <text>corresponding to {@param.name serviceId}.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Service.get#serviceId">serviceId</atParamName>
                <text> does not have any authentication information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId}</text>
              <text>does not have any authentication information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.ServiceInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.ServiceInfo" type="true">ServiceInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Service.get#serviceId">serviceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link ServiceInfo} instance that corresponds to</text>
              <text>{@param.name serviceId}</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Source" namespace="com.vmware.vapi.metadata.authentication" fingerprint="eb64a89655b9dc06cc08dfe1a67ce8a3edcd3acb">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.Source" type="true" tag="name">Source</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to manage the sources of authentication metadata information. </text>
            <paragraph>
              <text> The interface definition language infrastructure provides tools to generate various kinds of metadata in JSON format from the interface definition files and additional properties files. One of the generated files contains authentication information. The generated file can be registered as a source of metadata. </text>
            </paragraph>
            <paragraph>
              <text> The authentication file contains all the data present in the interface definition files. Each authentication file contains data about one component element. When a authentication file is added as a source, each source contributes only one component element's metadata. </text>
            </paragraph>
            <paragraph>
              <text> Authentication metadata can also be discovered from a remote server that supports the authentication metadata </text>
              <atTerm>services</atTerm>
              <text> (see </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication" pkg="true">com.vmware.vapi.metadata.authentication</atLink>
              <text>). Since multiple components can be registered with a single metadata server, when a remote server is registered as a source, that source can contribute more than one component.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Source} {@term service} provides {@term operations} to</text>
          <text>manage the sources of authentication metadata information.</text>
          <text>&lt;p&gt;</text>
          <text>The interface definition language infrastructure provides tools to</text>
          <text>generate various kinds of metadata in JSON format from the interface</text>
          <text>definition files and additional properties files. One of the generated</text>
          <text>files contains authentication information. The generated file can be</text>
          <text>registered as a source of metadata.</text>
          <text>&lt;p&gt;</text>
          <text>The authentication file contains all the data present in the interface</text>
          <text>definition files. Each authentication file contains data about one</text>
          <text>component element. When a authentication file is added as a source,</text>
          <text>each source contributes only one component element's metadata.</text>
          <text>&lt;p&gt;</text>
          <text>Authentication metadata can also be discovered from a remote server that</text>
          <text>supports the authentication metadata {@term services} (see</text>
          <text>{@link com.vmware.vapi.metadata.authentication}). Since multiple components</text>
          <text>can be registered with a single metadata server, when a remote server</text>
          <text>is registered as a source, that source can contribute more than one</text>
          <text>component.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.metadata.authentication.source</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for metadata source.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.metadata.authentication.source</value>
      </constant>
      <structure name="Info" namespace="com.vmware.vapi.metadata.authentication.Source" fingerprint="acaf827326cfe69f799888c9d2d0ea74e71e52a7">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.authentication.Source.Info" type="true" tag="name">Info</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the metadata source information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Info} {@term structure} contains the metadata source</text>
            <text>information.</text>
          </description>
        </doc>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>English language human readable description of the source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>English language human readable description of the source.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="type">
          <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Type of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Type of the metadata source.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionTag" type="java.lang.Boolean">true</property>
          </metadata>
        </attribute>
        <attribute name="filepath">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Absolute file path of the authentication metadata file that has the authentication information about one component element. The </text>
                <atName unresolved="true" tag="name">filePath</atName>
                <text> is the path to the file in the server's filesystem.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.authentication.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#FILE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Absolute file path of the authentication metadata file that has</text>
              <text>the authentication information about one component element. The {@name filePath}</text>
              <text>is the path to the file in the server's filesystem.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">FILE</entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="address">
          <type primitive="URI"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Connection information for the remote server. This must be in the format http(s)://IP:port/namespace. </text>
                <paragraph>
                  <text> The remote server must support the </text>
                  <atTerm>services</atTerm>
                  <text> in the </text>
                  <atLink resolved="com.vmware.vapi.metadata.authentication" pkg="true">com.vmware.vapi.metadata.authentication</atLink>
                  <text> </text>
                  <atTerm>package</atTerm>
                  <text>. It must expose authentication information of one or more components.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.authentication.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#REMOTE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Connection information for the remote server. This must be</text>
              <text>in the format http(s)://IP:port/namespace.</text>
              <text>&lt;p&gt;</text>
              <text>The remote server must support the {@term services} in the</text>
              <text>{@link com.vmware.vapi.metadata.authentication} {@term package}.</text>
              <text>It must expose authentication information of one or more</text>
              <text>components.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">REMOTE</entry>
            </property>
          </metadata>
        </attribute>
      </structure>
      <structure name="CreateSpec" namespace="com.vmware.vapi.metadata.authentication.Source" fingerprint="ef66254864deacc0514e89afa079a9924ba6c3c6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.authentication.Source.CreateSpec" type="true" tag="name">CreateSpec</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the registration information of a authentication source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name CreateSpec} {@term structure} contains the registration</text>
            <text>information of a authentication source.</text>
          </description>
        </doc>
        <metadata>
          <property name="Include" type="com.vmware.vapi.idl.model.IdlReferenceType">
            <type reference="SourceCreateSpec" namespace="com.vmware.vapi.metadata" target="STRUCTURE" declaration="com.vmware.vapi.metadata.SourceCreateSpec"/>
          </property>
        </metadata>
      </structure>
      <operation name="create" fingerprint="963cde5438c4deb6cb75e3d39be383b22b95aa62">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Creates a new metadata source. Once the server validates the registration information of the metadata source, the authentication metadata is retrieved from the source. This populates elements in all the </text>
              <atTerm>services</atTerm>
              <text> defined in </text>
              <atLink resolved="com.vmware.vapi.metadata.authentication" pkg="true">com.vmware.vapi.metadata.authentication</atLink>
              <text> </text>
              <atTerm>package</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Creates a new metadata source. Once the server validates the registration</text>
            <text>information of the metadata source, the authentication metadata is retrieved</text>
            <text>from the source. This populates elements in all the {@term services}</text>
            <text>defined in {@link com.vmware.vapi.metadata.authentication} {@term package}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.authentication.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.authentication.source}.</text>
            </content>
          </doc>
        </parameter>
        <parameter name="spec">
          <type reference="CreateSpec" namespace="com.vmware.vapi.metadata.authentication.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.Source.CreateSpec"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>create specification.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>create specification.</text>
            </description>
          </doc>
        </parameter>
        <error name="AlreadyExists">
          <type reference="AlreadyExists" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.AlreadyExists"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source identifier is already registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source identifier is already</text>
              <text>registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <error name="InvalidArgument">
          <type reference="InvalidArgument" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.InvalidArgument"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the type of the source specified in </text>
                <atLink unresolved="true">CreateSpec#type</atLink>
                <text> is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>if the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> is not a valid JSON file or if the format of the authentication metadata in the JSON file is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text>if the URI specified in </text>
                <atLink unresolved="true">CreateSpec#address</atLink>
                <text> is unreachable or if there is a transport protocol or message protocol mismatch between the client and the server or if the remote server do not have </text>
                <atTerm>services</atTerm>
                <text> present in </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication" pkg="true">com.vmware.vapi.metadata.authentication</atLink>
                <text> </text>
                <atTerm>package</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the type of the source specified in {@link CreateSpec#type}</text>
              <text>is invalid.</text>
            </description>
            <description index="1">
              <text>if the file specified in {@link CreateSpec#filepath}</text>
              <text>is not a valid JSON file or if the format of the authentication</text>
              <text>metadata in the JSON file is invalid.</text>
            </description>
            <description index="2">
              <text>if the URI specified in {@link CreateSpec#address} is unreachable</text>
              <text>or if there is a transport protocol or message protocol mismatch</text>
              <text>between the client and the server or if the remote server do not</text>
              <text>have {@term services} present in {@link com.vmware.vapi.metadata.authentication}</text>
              <text>{@term package}.</text>
            </description>
          </doc>
        </error>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the file specified in {@link CreateSpec#filepath}</text>
              <text>does not exist.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="delete" fingerprint="0c211ad04bf9f0ac47057e501fd156e61ed8a36a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Deletes an existing authentication metadata source from the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Deletes an existing authentication metadata source from the infrastructure.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.authentication.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.authentication.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="get" fingerprint="170789f1a6728fbfa31c07ab22bc7bbb684ee39d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the metadata source corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.get#sourceId">sourceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the metadata source corresponding to</text>
            <text>{@param.name sourceId}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.authentication.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.authentication.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.get#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.authentication.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.Source.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.Source.Info" type="true">Info</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.get#sourceId">sourceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link Info} instance that corresponds to</text>
              <text>{@param.name sourceId}</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers of the metadata sources currently registered with the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers of the metadata sources currently registered</text>
            <text>with the infrastructure.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for metadata sources currently registered.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.authentication.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for metadata sources currently</text>
              <text>registered.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.metadata.authentication.source}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="reload" fingerprint="dd2f555bea96f6dabcbcb9908d18841370640d5d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Reloads the authentication metadata from all the metadata sources or of a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.reload#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Reloads the authentication metadata from all the metadata sources or of a</text>
            <text>particular metadata source if {@param.name sourceId} is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, all the metadata sources are reloaded.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.authentication.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, all the metadata sources</text>
              <text>are reloaded.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.authentication.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.reload#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="fingerprint" fingerprint="02f14da221aab78a45513dc80b5cfb91987643e0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the aggregate fingerprint of metadata from all the metadata sources or from a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.fingerprint#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the aggregate fingerprint of metadata from all the metadata</text>
            <text>sources or from a particular metadata source if {@param.name sourceId}</text>
            <text>is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, the fingerprint of all the metadata sources is returned.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.authentication.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, the fingerprint of all the</text>
              <text>metadata sources is returned.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.authentication.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.Source.fingerprint#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Aggregate fingerprint of all the metadata sources or of a particular metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Aggregate fingerprint of all the metadata sources or of a</text>
              <text>particular metadata source.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.authentication.service" fingerprint="fcca9ec9f6a3a9fedb26bbda8f6f080666a658a0">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.authentication.service" pkg="true" tag="name">com.vmware.vapi.metadata.authentication.service</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> to retrieve authentication information for operation elements.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.authentication.service} {@term package} provides</text>
        <text>{@term services} to retrieve authentication information for operation</text>
        <text>elements.</text>
      </description>
    </doc>
    <service name="Operation" namespace="com.vmware.vapi.metadata.authentication.service" fingerprint="675499dcdefc8f21b8b933905ffdf8759fb5d3db">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.authentication.service.Operation" type="true" tag="name">Operation</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve authentication information of an operation element. </text>
            <paragraph>
              <text> An operation element is said to contain authentication information if authentication schemes are specified in the authentication definition file.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Operation} {@term service} provides {@term operations}</text>
          <text>to retrieve authentication information of an operation element.</text>
          <text>&lt;p&gt;</text>
          <text>An operation element is said to contain authentication information if</text>
          <text>authentication schemes are specified in the authentication definition</text>
          <text>file.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for operation.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for operation.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.operation</value>
      </constant>
      <operation name="list" fingerprint="a2b0374a605f9cc8163eedb157fa2ee3bbc9519a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the operation elements contained in the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.list#serviceId">serviceId</atParamName>
              <text> that have authentication information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the operation elements contained in the service</text>
            <text>element corresponding to {@param.name serviceId} that have authentication</text>
            <text>information.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.list#serviceId">serviceId</atParamName>
                <text> does not have any operation elements that have authentication information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId}</text>
              <text>does not have any operation elements that have authentication</text>
              <text>information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>List of identifiers for the operation elements contained in the service element that have authentication information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>List of identifiers for the operation elements contained in the</text>
              <text>service element that have authentication information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="712ab10c190fa1d223c655291815d30ef618deb2">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves the authentication information about an operation element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.get#operationId">operationId</atParamName>
              <text> contained in the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.get#serviceId">serviceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves the authentication information about an operation element</text>
            <text>corresponding to {@param.name operationId} contained in the service element</text>
            <text>corresponding to {@param.name serviceId}.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <parameter name="operationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the operation element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the operation element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.get#serviceId">serviceId</atParamName>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>if the operation element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.get#operationId">operationId</atParamName>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text>if the operation element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.get#operationId">operationId</atParamName>
                <text> does not have any authentication information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId} does not</text>
              <text>exist.</text>
            </description>
            <description index="1">
              <text>if the operation element associated with {@param.name operationId} does not</text>
              <text>exist.</text>
            </description>
            <description index="2">
              <text>if the operation element associated with {@param.name operationId} does not have</text>
              <text>any authentication information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.authentication" target="STRUCTURE" declaration="com.vmware.vapi.metadata.authentication.OperationInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.authentication.OperationInfo" type="true">com.vmware.vapi.metadata.authentication.OperationInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.authentication.service.Operation.get#operationId">operationId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link com.vmware.vapi.metadata.authentication.OperationInfo} instance</text>
              <text>that corresponds to {@param.name operationId}.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.cli" fingerprint="a0f5cb8b336a05780a613333b3185666d56bc3ea">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.cli" pkg="true" tag="name">com.vmware.vapi.metadata.cli</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that expose all the information required to display namespace or command help, execute a command and display it's result.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.cli} {@term package} provides</text>
        <text>{@term services} that expose all the information required to display</text>
        <text>namespace or command help, execute a command and display it's result.</text>
      </description>
    </doc>
    <service name="Command" namespace="com.vmware.vapi.metadata.cli" fingerprint="36bbe6df094b4724d83f23b7b7a6466d76bbc2db">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.cli.Command" type="true" tag="name">Command</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to get information about command line interface (CLI) commands.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Command} {@term service} provides {@term operations}</text>
          <text>to get information about command line interface (CLI) commands.</text>
        </description>
      </doc>
      <enumeration name="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="c584665ca610e4f45c65f44ae3c35361fcfc1abe">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.FormatterType" type="true" tag="name">FormatterType</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> defines supported CLI output formatter types. See </text>
              <atLink resolved="com.vmware.vapi.metadata.cli.Command.Info.formatter" member="true">Info#formatter</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name FormatterType} {@term enumerated type} defines supported</text>
            <text>CLI output formatter types. See {@link Info#formatter}.</text>
          </description>
        </doc>
        <constant name="SIMPLE">
          <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Displays command output as it is.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Displays command output as it is.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="TABLE">
          <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Displays command output in table format.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Displays command output in table format.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="JSON">
          <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Displays command output in JSON format.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Displays command output in JSON format.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="XML">
          <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Displays command output in XML format.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Displays command output in XML format.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="CSV">
          <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Displays command output in CSV format.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Displays command output in CSV format.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="HTML">
          <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Displays command output in HTML format.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Displays command output in HTML format.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <enumeration name="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="45bc81672fddbaca81b2f0ce9ab7570bfa47726e">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.GenericType" type="true" tag="name">GenericType</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> defines generic types supported by </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command" type="true" tag="name">Command</atName>
              <text> </text>
              <atTerm>service</atTerm>
              <text>. See </text>
              <atLink resolved="com.vmware.vapi.metadata.cli.Command.OptionInfo.generic" member="true">OptionInfo#generic</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name GenericType} {@term enumerated type} defines generic types supported</text>
            <text>by {@name Command} {@term service}. See {@link OptionInfo#generic}.</text>
          </description>
        </doc>
        <constant name="NONE">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Default case.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Default case.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="OPTIONAL">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Input parameter is an optional.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Input parameter is an optional.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="LIST">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Input parameter is a list.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Input parameter is a list.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="OPTIONAL_LIST">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Input parameter is an optional of type list. </text>
                <paragraph>
                  <text> New in vSphere 6.5.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Input parameter is an optional of type list.</text>
              <text>&lt;p&gt;</text>
              <text>New in vSphere 6.5.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="LIST_OPTIONAL">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Input parameter is a list of optionals. </text>
                <paragraph>
                  <text> New in vSphere 6.5.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Input parameter is a list of optionals.</text>
              <text>&lt;p&gt;</text>
              <text>New in vSphere 6.5.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <structure name="OutputFieldInfo" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="7b9a22a712de6f72300b21df62616720b2b95743">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.OutputFieldInfo" type="true" tag="name">OutputFieldInfo</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> describes the name used by the CLI to display a single </text>
              <atTerm>field</atTerm>
              <text> of a </text>
              <atTerm>structure</atTerm>
              <text> element in the interface definition language.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name OutputFieldInfo} {@term structure} describes the name used by</text>
            <text>the CLI to display a single {@term field} of a {@term structure} element in the</text>
            <text>interface definition language.</text>
          </description>
        </doc>
        <attribute name="fieldName">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Name of the </text>
                <atTerm>field</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Name of the {@term field}.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="displayName">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Name used by the CLI to display the </text>
                <atTerm>field</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Name used by the CLI to display the {@term field}.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <structure name="OutputInfo" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="069a40b8315daadf7acf25748f8a2954e2e7e523">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.OutputInfo" type="true" tag="name">OutputInfo</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> describes the names used by the CLI to display the </text>
              <atTerm>fields</atTerm>
              <text> of a </text>
              <atTerm>structure</atTerm>
              <text> element in the interface definition language as well as the order in which the </text>
              <atTerm>fields</atTerm>
              <text> will be displayed.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name OutputInfo} {@term structure} describes the names used by the</text>
            <text>CLI to display the {@term fields} of a {@term structure} element in the interface</text>
            <text>definition language as well as the order in which the {@term fields} will</text>
            <text>be displayed.</text>
          </description>
        </doc>
        <attribute name="structureId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Name of the </text>
                <atTerm>structure</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>When clients pass a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>parameter</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.structure</atCode>
                <text>. When </text>
                <atTerm>operations</atTerm>
                <text> return a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>result</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> will be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.structure</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Name of the {@term structure}.</text>
            </description>
            <content type="metadata">
              <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
              <text>the {@term field} must be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
              <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
              <text>the {@term field} will be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
          </metadata>
        </attribute>
        <attribute name="outputFields">
          <type generic="List">
            <type reference="OutputFieldInfo" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.OutputFieldInfo"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The order in which the </text>
                <atTerm>fields</atTerm>
                <text> of the </text>
                <atTerm>structure</atTerm>
                <text> will be displayed by the CLI as well as the names used to display the </text>
                <atTerm>fields</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The order in which the {@term fields} of the {@term structure} will be</text>
              <text>displayed by the CLI as well as the names used to display the {@term fields}.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <structure name="OptionInfo" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="b8634465dc8100cb0f5f552231772901ef3de156">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.OptionInfo" type="true" tag="name">OptionInfo</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> describes information about a specific input option of a command.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name OptionInfo} {@term structure} describes information about a</text>
            <text>specific input option of a command.</text>
          </description>
        </doc>
        <attribute name="longOption">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The long option name of the parameter as used by the user.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The long option name of the parameter as used by the user.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="shortOption">
          <type generic="Optional">
            <type primitive="String"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The single character value option name.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If not present, there's no single character option for the parameter.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The single character value option name.</text>
            </description>
            <content type="optionalReason">
              <text>If not present, there's no single character option for the parameter.</text>
            </content>
          </doc>
        </attribute>
        <attribute name="fieldName">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The fully qualified name of the option referred to by the operation element in </text>
                <atLink resolved="com.vmware.vapi.metadata.cli.Command.Info.operationId" member="true">Info#operationId</atLink>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The fully qualified name of the option referred to by the operation element in {@link Info#operationId}.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The description of the option to be displayed to the user when they request usage information for a CLI command.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The description of the option to be displayed to the user when</text>
              <text>they request usage information for a CLI command.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="type">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The type of option. This is used to display information about what kind of data is expected (string, number, boolean, etc.) for the option when they request usage information for a CLI command. For </text>
                <atTerm>enumerated type</atTerm>
                <text> this stores the fully qualified </text>
                <atTerm>enumerated type</atTerm>
                <text> id.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The type of option. This is used to display information about what kind of data</text>
              <text>is expected (string, number, boolean, etc.) for the option when they request</text>
              <text>usage information for a CLI command.</text>
              <text>For {@term enumerated type} this stores the fully qualified {@term enumerated type} id.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="generic">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>This is used to tell the user whether the option is required or optional, or whether they can specify the option multiple times.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>This is used to tell the user whether the option is required or optional,</text>
              <text>or whether they can specify the option multiple times.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <structure name="Identity" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="6840450dc49060bc736f6fa5fbc602897d4e9886">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.Identity" type="true" tag="name">Identity</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> uniquely identifies a command in the CLI commands tree.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Identity} {@term structure} uniquely identifies a</text>
            <text>command in the CLI commands tree.</text>
          </description>
        </doc>
        <attribute name="path">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The dot-separated path of the namespace containing the command in the CLI command tree.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The dot-separated path of the namespace containing the command in the CLI command tree.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="name">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Name of the command.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Name of the command.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <structure name="Info" namespace="com.vmware.vapi.metadata.cli.Command" fingerprint="1ac6c0dd544c0d80a72cc837384dc22ccf0c6540">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Command.Info" type="true" tag="name">Info</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains information about a command. It includes the identity of the command, a description, information about the </text>
              <atTerm>service</atTerm>
              <text> and </text>
              <atTerm>operation</atTerm>
              <text> that implement the command, and CLI-specific information for the command.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Info} {@term structure} contains information about a command. It</text>
            <text>includes the identity of the command, a description, information about the</text>
            <text>{@term service} and {@term operation} that implement the command, and CLI-specific</text>
            <text>information for the command.</text>
          </description>
        </doc>
        <attribute name="identity">
          <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.Identity"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Basic command identity.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Basic command identity.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The text description displayed to the user in help output.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The text description displayed to the user in help output.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The service identifier that contains the operations for this CLI command.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>When clients pass a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>parameter</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>. When </text>
                <atTerm>operations</atTerm>
                <text> return a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>result</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> will be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The service identifier that contains the operations for this CLI command.</text>
            </description>
            <content type="metadata">
              <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
              <text>the {@term field} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
              <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
              <text>the {@term field} will be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </attribute>
        <attribute name="operationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The operation identifier corresponding to this CLI command.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>When clients pass a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>parameter</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>. When </text>
                <atTerm>operations</atTerm>
                <text> return a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>result</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> will be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The operation identifier corresponding to this CLI command.</text>
            </description>
            <content type="metadata">
              <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
              <text>the {@term field} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
              <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
              <text>the {@term field} will be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
          </metadata>
        </attribute>
        <attribute name="options">
          <type generic="List">
            <type reference="OptionInfo" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.OptionInfo"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The input for this command.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The input for this command.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="formatter">
          <type generic="Optional">
            <type reference="FormatterType" namespace="com.vmware.vapi.metadata.cli.Command" target="ENUMERATION" declaration="com.vmware.vapi.metadata.cli.Command.FormatterType"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The formatter to use when displaying the output of this command.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If not present, client can choose a default output formatter.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The formatter to use when displaying the output of this command.</text>
            </description>
            <content type="optionalReason">
              <text>If not present, client can choose a default output formatter.</text>
            </content>
          </doc>
        </attribute>
        <attribute name="outputFieldList">
          <type generic="List">
            <type reference="OutputInfo" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.OutputInfo"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>List of output structure name and output field info.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>List of output structure name and output field info.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <operation name="list" fingerprint="24b05019ac1ae1ef48707af042e78d828f35d58a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers of all commands, or commands in a specific namespace.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers of all commands, or commands in a specific namespace.</text>
          </description>
        </doc>
        <parameter name="path">
          <type generic="Optional">
            <type primitive="String"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The dot-separated path of the namespace for which command identifiers should be returned.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If </text>
                <atTerm>unset</atTerm>
                <text> identifiers of all commands registered with the infrastructure will be returned.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The dot-separated path of the namespace for which command identifiers should be returned.</text>
            </description>
            <content type="optionalReason">
              <text>If {@term unset} identifiers of all commands registered with the infrastructure will be returned.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if a namespace corresponding to </text>
                <atParamName resolved="com.vmware.vapi.metadata.cli.Command.list#path">path</atParamName>
                <text> doesn't exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if a namespace corresponding to {@param.name path} doesn't exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="List">
            <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.Identity"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifiers of the requested commands.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Identifiers of the requested commands.</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="c7e978d2316614538101f71256a872225df3da6b">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about a command including information about how to execute that command.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about a command including information about how to execute</text>
            <text>that command.</text>
          </description>
        </doc>
        <parameter name="identity">
          <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.Identity"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the command for which to retreive information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Identifier of the command for which to retreive information.</text>
            </description>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if a command corresponding to </text>
                <atParamName resolved="com.vmware.vapi.metadata.cli.Command.get#identity">identity</atParamName>
                <text> doesn't exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if a command corresponding to {@param.name identity} doesn't exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.cli.Command" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Command.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Information about the command including information about how to execute that command.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Information about the command including information about how to execute that command.</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="fingerprint" fingerprint="d5dd2f02f5cac73d3be6ab46e88cceacf4b05490">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the aggregate fingerprint of all the command metadata from all the metadata sources. </text>
              <paragraph>
                <text> The fingerprint provides clients an efficient way to check if the metadata for commands has been modified on the server.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the aggregate fingerprint of all the command metadata from all</text>
            <text>the metadata sources.</text>
            <text>&lt;p&gt;</text>
            <text>The fingerprint provides clients an efficient way to check if the metadata</text>
            <text>for commands has been modified on the server.</text>
          </description>
        </doc>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Fingerprint of all the command metadata present on the server.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Fingerprint of all the command metadata present on the server.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Namespace" namespace="com.vmware.vapi.metadata.cli" fingerprint="4944333468285e6398a4e8d054e4eb0d03a94020">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.cli.Namespace" type="true" tag="name">Namespace</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to get information about command line interface (CLI) namespaces.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Namespace} {@term service} provides {@term operations}</text>
          <text>to get information about command line interface (CLI) namespaces.</text>
        </description>
      </doc>
      <structure name="Identity" namespace="com.vmware.vapi.metadata.cli.Namespace" fingerprint="8bba4d4a06690732ca3b6eddf8edef93a825cce1">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Namespace.Identity" type="true" tag="name">Identity</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> uniquely identifies a namespace in the CLI namespace tree.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Identity} {@term structure} uniquely identifies a</text>
            <text>namespace in the CLI namespace tree.</text>
          </description>
        </doc>
        <attribute name="path">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The dot-separated path of the namespace containing the namespace in the CLI node tree. For top-level namespace this will be empty.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The dot-separated path of the namespace containing the namespace in</text>
              <text>the CLI node tree. For top-level namespace this will be empty.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="name">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The name displayed to the user for this namespace.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The name displayed to the user for this namespace.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <structure name="Info" namespace="com.vmware.vapi.metadata.cli.Namespace" fingerprint="23baeffc65ba930a212f78df2bd8ae306c00cdee">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Namespace.Info" type="true" tag="name">Info</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains information about a namespace. It includes the identity of the namespace, a description, information children namespaces.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Info} {@term structure} contains information about a namespace.</text>
            <text>It includes the identity of the namespace, a description, information</text>
            <text>children namespaces.</text>
          </description>
        </doc>
        <attribute name="identity">
          <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Namespace" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Namespace.Identity"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Basic namespace identity.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Basic namespace identity.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The text description displayed to the user in help output.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The text description displayed to the user in help output.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="children">
          <type generic="List">
            <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Namespace" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Namespace.Identity"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The children of this namespace in the tree of CLI namespaces.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The children of this namespace in the tree of CLI namespaces.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <operation name="list" fingerprint="288b26078b8b5f6e72df88ef94cd32478b07a36c">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers of all namespaces registered with the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers of all namespaces registered with the infrastructure.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Namespace" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Namespace.Identity"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifiers of all the namespaces.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Identifiers of all the namespaces.</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="54e25b72614a0ca57b1fd9d4f5455b85a3bf8f8b">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retreives information about a namespace including information about children of that namespace.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retreives information about a namespace including information about children of</text>
            <text>that namespace.</text>
          </description>
        </doc>
        <parameter name="identity">
          <type reference="Identity" namespace="com.vmware.vapi.metadata.cli.Namespace" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Namespace.Identity"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the namespace for which to retreive information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Identifier of the namespace for which to retreive information.</text>
            </description>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if a namespace corresponding to </text>
                <atParamName resolved="com.vmware.vapi.metadata.cli.Namespace.get#identity">identity</atParamName>
                <text> doesn't exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if a namespace corresponding to {@param.name identity} doesn't exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.cli.Namespace" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Namespace.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Information about the namespace including information about child of that namespace.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Information about the namespace including information about child of that namespace.</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="fingerprint" fingerprint="d5dd2f02f5cac73d3be6ab46e88cceacf4b05490">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the aggregate fingerprint of all the namespace metadata from all the metadata sources. </text>
              <paragraph>
                <text> The fingerprint provides clients an efficient way to check if the metadata for namespaces has been modified on the server.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the aggregate fingerprint of all the namespace metadata from all</text>
            <text>the metadata sources.</text>
            <text>&lt;p&gt;</text>
            <text>The fingerprint provides clients an efficient way to check if the metadata</text>
            <text>for namespaces has been modified on the server.</text>
          </description>
        </doc>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Fingerprint of all the namespace metadata present on the server.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Fingerprint of all the namespace metadata present on the server.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Source" namespace="com.vmware.vapi.metadata.cli" fingerprint="c39b22e171a90d7969383e46cb73ebdd855ffa26">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.cli.Source" type="true" tag="name">Source</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to manage the sources of command line interface (CLI) metadata information. </text>
            <paragraph>
              <text> The interface definition language infrastructure provides tools to generate various kinds of metadata in JSON format from the interface definition files and additional properties files. One of the generated files contains CLI information. </text>
            </paragraph>
            <paragraph>
              <text> A CLI metadata file contains information about one component element. When a CLI metadata file is added as a source, each source contributes only one component element's metadata. </text>
            </paragraph>
            <paragraph>
              <text> CLI metadata can also be discovered from a remote server that supports the CLI metadata services (see </text>
              <atLink resolved="com.vmware.vapi.metadata.cli" pkg="true">com.vmware.vapi.metadata.cli</atLink>
              <text>) </text>
              <atTerm>package</atTerm>
              <text>. Since multiple components can be registered with a single metadata server, when a remote server is registered as a source, that source can contribute more than one component.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Source} {@term service} provides {@term operations} to</text>
          <text>manage the sources of command line interface (CLI) metadata information.</text>
          <text>&lt;p&gt;</text>
          <text>The interface definition language infrastructure provides tools to</text>
          <text>generate various kinds of metadata in JSON format from the interface</text>
          <text>definition files and additional properties files. One of the generated</text>
          <text>files contains CLI information.</text>
          <text>&lt;p&gt;</text>
          <text>A CLI metadata file contains information about one component element.</text>
          <text>When a CLI metadata file is added as a source, each source</text>
          <text>contributes only one component element's metadata.</text>
          <text>&lt;p&gt;</text>
          <text>CLI metadata can also be discovered from a remote server that</text>
          <text>supports the CLI metadata services (see {@link com.vmware.vapi.metadata.cli})</text>
          <text>{@term package}. Since multiple components can be registered with</text>
          <text>a single metadata server, when a remote server is registered as a</text>
          <text>source, that source can contribute more than one component.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.metadata.source</property>
      </metadata>
      <structure name="Info" namespace="com.vmware.vapi.metadata.cli.Source" fingerprint="9dc5f76a62e70bb5a59bc4da6e7308293a7c62b4">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Source.Info" type="true" tag="name">Info</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the metadata source information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Info} {@term structure} contains the metadata source</text>
            <text>information.</text>
          </description>
        </doc>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>English language human readable description of the source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>English language human readable description of the source.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="type">
          <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The type (</text>
                <atEnumValues resolved="com.vmware.vapi.metadata.SourceType" type="true">SourceType</atEnumValues>
                <text>) of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The type ({@enum.values SourceType}) of the metadata source.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionTag" type="java.lang.Boolean">true</property>
          </metadata>
        </attribute>
        <attribute name="filepath">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Absolute file path of the CLI metadata file that has the CLI information about one component. The </text>
                <atName resolved="com.vmware.vapi.metadata.cli.Source.Info.filepath" member="true" tag="name">#filepath</atName>
                <text> is the path to the file in the server's filesystem.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.cli.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#FILE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Absolute file path of the CLI metadata file that has the CLI</text>
              <text>information about one component. The {@name #filepath}</text>
              <text>is the path to the file in the server's filesystem.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">FILE</entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="address">
          <type primitive="URI"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Connection information for the remote server. This should be in the format http(s)://IP:port/namespace. </text>
                <paragraph>
                  <text> The remote server must contain the </text>
                  <atTerm>services</atTerm>
                  <text> in the </text>
                  <atLink resolved="com.vmware.vapi.metadata.cli" pkg="true">com.vmware.vapi.metadata.cli</atLink>
                  <text> </text>
                  <atTerm>package</atTerm>
                  <text>. It must expose CLI information of one or more components.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.cli.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#REMOTE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Connection information for the remote server. This should be</text>
              <text>in the format http(s)://IP:port/namespace.</text>
              <text>&lt;p&gt;</text>
              <text>The remote server must contain the {@term services} in the</text>
              <text>{@link com.vmware.vapi.metadata.cli} {@term package}.</text>
              <text>It must expose CLI information of one or more</text>
              <text>components.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">REMOTE</entry>
            </property>
          </metadata>
        </attribute>
      </structure>
      <structure name="CreateSpec" namespace="com.vmware.vapi.metadata.cli.Source" fingerprint="7be6886b443e534dc1f1b28fc7c1f1bcf8ce025b">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.cli.Source.CreateSpec" type="true" tag="name">CreateSpec</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the registration information of a CLI source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name CreateSpec} {@term structure} contains the registration</text>
            <text>information of a CLI source.</text>
          </description>
        </doc>
        <metadata>
          <property name="Include" type="com.vmware.vapi.idl.model.IdlReferenceType">
            <type reference="SourceCreateSpec" namespace="com.vmware.vapi.metadata" target="STRUCTURE" declaration="com.vmware.vapi.metadata.SourceCreateSpec"/>
          </property>
        </metadata>
      </structure>
      <operation name="create" fingerprint="78c491827af9ed29a0382caf1b1810e887fe1e0e">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Creates a new metadata source. Once the server validates the registration information of the metadata source, the CLI metadata is retrieved from the source. This populates elements in all the </text>
              <atTerm>services</atTerm>
              <text> defined in </text>
              <atLink resolved="com.vmware.vapi.metadata.cli" pkg="true">com.vmware.vapi.metadata.cli</atLink>
              <text> </text>
              <atTerm>package</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Creates a new metadata source. Once the server validates the registration</text>
            <text>information of the metadata source, the CLI metadata is retrieved</text>
            <text>from the source. This populates elements in all the {@term services}</text>
            <text>defined in {@link com.vmware.vapi.metadata.cli} {@term package}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <parameter name="spec">
          <type reference="CreateSpec" namespace="com.vmware.vapi.metadata.cli.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Source.CreateSpec"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>create specification.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>create specification.</text>
            </description>
          </doc>
        </parameter>
        <error name="AlreadyExists">
          <type reference="AlreadyExists" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.AlreadyExists"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the metadata source identifier is already registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the metadata source identifier is already</text>
              <text>registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <error name="InvalidArgument">
          <type reference="InvalidArgument" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.InvalidArgument"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If type of the source specified in </text>
                <atLink unresolved="true">CreateSpec#type</atLink>
                <text> is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>If the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> is not a valid JSON file or if the format of the CLI metadata in the JSON file is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text>If the URI specified in </text>
                <atLink unresolved="true">CreateSpec#address</atLink>
                <text> is unreachable or if there is a transport protocol or message protocol mismatch between the client and the server or if the remote server do not have </text>
                <atTerm>services</atTerm>
                <text> present in </text>
                <atLink resolved="com.vmware.vapi.metadata.cli" pkg="true">com.vmware.vapi.metadata.cli</atLink>
                <text> </text>
                <atTerm>package</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If type of the source specified in {@link CreateSpec#type}</text>
              <text>is invalid.</text>
            </description>
            <description index="1">
              <text>If the file specified in {@link CreateSpec#filepath}</text>
              <text>is not a valid JSON file or if the format of the CLI</text>
              <text>metadata in the JSON file is invalid.</text>
            </description>
            <description index="2">
              <text>If the URI specified in {@link CreateSpec#address} is unreachable</text>
              <text>or if there is a transport protocol or message protocol mismatch</text>
              <text>between the client and the server or if the remote server do not</text>
              <text>have {@term services} present in {@link com.vmware.vapi.metadata.cli}</text>
              <text>{@term package}.</text>
            </description>
          </doc>
        </error>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the file specified in {@link CreateSpec#filepath}</text>
              <text>does not exist.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="delete" fingerprint="0c211ad04bf9f0ac47057e501fd156e61ed8a36a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Deletes an existing CLI metadata source from the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Deletes an existing CLI metadata source from the infrastructure.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="get" fingerprint="e5fcc1450e93e0b0c51e62ee19f4aea80ac77c3c">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the metadata source corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.cli.Source.get#sourceId">sourceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the metadata source corresponding to</text>
            <text>{@param.name sourceId}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.cli.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.cli.Source.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.cli.Source.Info" type="true">Info</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.cli.Source.get#sourceId">sourceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link Info} instance that corresponds to</text>
              <text>{@param.name sourceId}</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers of the metadata sources currently registered with the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers of the metadata sources currently registered</text>
            <text>with the infrastructure.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for metadata sources currently registered.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for metadata sources currently</text>
              <text>registered.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="reload" fingerprint="dd2f555bea96f6dabcbcb9908d18841370640d5d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Reloads the CLI metadata from all the metadata sources or of a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.cli.Source.reload#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Reloads the CLI metadata from all the metadata sources or of a</text>
            <text>particular metadata source if {@param.name sourceId} is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, all the metadata sources are reloaded.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, all the metadata sources</text>
              <text>are reloaded.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="fingerprint" fingerprint="02f14da221aab78a45513dc80b5cfb91987643e0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the aggregate fingerprint of metadata from all the metadata sources or from a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.cli.Source.fingerprint#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the aggregate fingerprint of metadata from all the metadata</text>
            <text>sources or from a particular metadata source if {@param.name sourceId}</text>
            <text>is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, the fingerprint of all the metadata sources is returned.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, the fingerprint of all the</text>
              <text>metadata sources is returned.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Aggregate fingerprint of all the metadata sources or of a particular metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Aggregate fingerprint of all the metadata sources or of a</text>
              <text>particular metadata source.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.metamodel" fingerprint="3b3ebf87e320582ada36223723faf0e596dc494e">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.metamodel" pkg="true" tag="name">com.vmware.vapi.metadata.metamodel</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that expose all the information present in the interface definition language (IDL) specification. </text>
          <paragraph>
            <text> Metamodel metadata is organized into an hierarchy of elements. The main elements are: </text>
          </paragraph>
          <ul>
            <text> </text>
            <li>
              <text>Enumeration: An enumeration element that has a list of enumeration value elements.</text>
            </li>
            <text> </text>
            <li>
              <text>Constant: A constant element has a name and a value.</text>
            </li>
            <text> </text>
            <li>
              <text>Structure: A structure element can have field elements, constant elements and enumeration elements. </text>
            </li>
            <text> </text>
            <li>
              <text>Operation: An operation has a list of parameter elements, result element and error elements.</text>
            </li>
            <text> </text>
            <li>
              <text>Service: A service is a collection of operation elements, structure elements, enumerated elements and constant elements.</text>
            </li>
            <text> </text>
            <li>
              <text>Package: A package is a collection of service elements, structure elements and enumeration elements.</text>
            </li>
            <text> </text>
            <li>
              <text>Component: A component is a collection of package elements.</text>
            </li>
            <text> </text>
          </ul>
          <text> The </text>
          <atName resolved="com.vmware.vapi.metadata.metamodel" pkg="true" tag="name">com.vmware.vapi.metadata.metamodel</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> has </text>
          <atTerm>services</atTerm>
          <text> that enables two styles of client applications: </text>
          <ul>
            <text> </text>
            <li>
              <text>A client can retrieve the exact pieces of information it requires using the various granularities the API supports (that is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Component" type="true">com.vmware.vapi.metadata.metamodel.Component</atLink>
              <text>, </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Package" type="true">com.vmware.vapi.metadata.metamodel.Package</atLink>
              <text>, </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Service" type="true">com.vmware.vapi.metadata.metamodel.Service</atLink>
              <text>, </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Structure" type="true">com.vmware.vapi.metadata.metamodel.Structure</atLink>
              <text>, </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Enumeration" type="true">com.vmware.vapi.metadata.metamodel.Enumeration</atLink>
              <text> and </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.service.Operation" type="true">com.vmware.vapi.metadata.metamodel.service.Operation</atLink>
              <text>). In this case, it doesn't cache any information locally and always invokes </text>
              <atTerm>operations</atTerm>
              <text> to get the metamodel information it requires.</text>
            </li>
            <text> </text>
            <li>
              <text>A client can retrieve all the metamodel information in fewer </text>
              <atTerm>operation</atTerm>
              <text> invocations using the </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Component" type="true">com.vmware.vapi.metadata.metamodel.Component</atLink>
              <text> </text>
              <atTerm>service</atTerm>
              <text> and cache the output locally. It can then poll on the fingerprint information exposed by the </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Component" type="true">com.vmware.vapi.metadata.metamodel.Component</atLink>
              <text> </text>
              <atTerm>service</atTerm>
              <text> to monitor changes in API definition.</text>
            </li>
            <text> </text>
          </ul>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.metamodel} {@term package} provides</text>
        <text>{@term services} that expose all the information present in the interface</text>
        <text>definition language (IDL) specification.</text>
        <text>&lt;p&gt;</text>
        <text>Metamodel metadata is organized into an hierarchy of elements. The main elements</text>
        <text>are:</text>
        <text>&lt;ul&gt;</text>
        <text>&lt;li&gt;Enumeration: An enumeration element that has a list of enumeration value</text>
        <text>elements.&lt;/li&gt;</text>
        <text>&lt;li&gt;Constant: A constant element has a name and a value.&lt;/li&gt;</text>
        <text>&lt;li&gt;Structure: A structure element can have field elements, constant elements and</text>
        <text>enumeration elements. &lt;/li&gt;</text>
        <text>&lt;li&gt;Operation: An operation has a list of parameter elements, result element</text>
        <text>and error elements.&lt;/li&gt;</text>
        <text>&lt;li&gt;Service: A service is a collection of operation elements, structure elements,</text>
        <text>enumerated elements and constant elements.&lt;/li&gt;</text>
        <text>&lt;li&gt;Package: A package is a collection of service elements, structure elements and</text>
        <text>enumeration elements.&lt;/li&gt;</text>
        <text>&lt;li&gt;Component: A component is a collection of package elements.&lt;/li&gt;</text>
        <text>&lt;/ul&gt;</text>
        <text>The {@name com.vmware.vapi.metadata.metamodel} {@term package} has {@term services} that</text>
        <text>enables two styles of client applications:</text>
        <text>&lt;ul&gt;</text>
        <text>&lt;li&gt;A client can retrieve the exact pieces of information it requires</text>
        <text>using the various granularities the API supports (that is</text>
        <text>{@link com.vmware.vapi.metadata.metamodel.Component},</text>
        <text>{@link com.vmware.vapi.metadata.metamodel.Package},</text>
        <text>{@link com.vmware.vapi.metadata.metamodel.Service},</text>
        <text>{@link com.vmware.vapi.metadata.metamodel.Structure},</text>
        <text>{@link com.vmware.vapi.metadata.metamodel.Enumeration} and</text>
        <text>{@link com.vmware.vapi.metadata.metamodel.service.Operation}). In this case, it doesn't</text>
        <text>cache any information locally and always invokes {@term operations} to get the</text>
        <text>metamodel information it requires.&lt;/li&gt;</text>
        <text>&lt;li&gt;A client can retrieve all the metamodel information in fewer {@term operation} invocations</text>
        <text>using the {@link com.vmware.vapi.metadata.metamodel.Component} {@term service} and cache</text>
        <text>the output locally. It can then poll on the fingerprint information exposed by</text>
        <text>the {@link com.vmware.vapi.metadata.metamodel.Component} {@term service} to monitor</text>
        <text>changes in API definition.&lt;/li&gt;</text>
        <text>&lt;/ul&gt;</text>
      </description>
    </doc>
    <structure name="ComponentData" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="e22b46f9bff925485039c6b2d787898d37a5f722">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ComponentData" type="true" tag="name">ComponentData</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel metadata information of a component element along with its fingerprint.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ComponentData} {@term structure} contains the metamodel metadata</text>
          <text>information of a component element along with its fingerprint.</text>
        </description>
      </doc>
      <attribute name="info">
        <type reference="ComponentInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ComponentInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of the component element. This includes information about all the package elements contained in this component element. </text>
              <paragraph>
                <text> The metamodel information about a component could be quite large if there are a lot of package elements contained in this component.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information of the component element. This includes information</text>
            <text>about all the package elements contained in this component element.</text>
            <text>&lt;p&gt;</text>
            <text>The metamodel information about a component could be quite large if there</text>
            <text>are a lot of package elements contained in this component.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="fingerprint">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Fingerprint of the metamodel metadata of the component component. </text>
              <paragraph>
                <text> Metamodel information could change when there is an infrastructure update and new functionality is added to an existing component. </text>
              </paragraph>
              <paragraph>
                <text> Since the data present in </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.ComponentData.info" member="true">ComponentData#info</atLink>
                <text> could be quite large, </text>
                <atName resolved="com.vmware.vapi.metadata.metamodel.ComponentData.fingerprint" member="true" tag="name">#fingerprint</atName>
                <text> provides a convenient way to check if the data for a particular component is updated. </text>
              </paragraph>
              <paragraph>
                <text> You should store the fingerprint associated with a component. After an update, by invoking the </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.Component.fingerprint" member="true">com.vmware.vapi.metadata.metamodel.Component#fingerprint</atLink>
                <text> </text>
                <atTerm>operation</atTerm>
                <text>, you can retrieve the new fingerprint for the component. If the new fingerprint and the previously stored fingerprint do not match, clients can use the </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.Component.get" member="true">com.vmware.vapi.metadata.metamodel.Component#get</atLink>
                <text> to retrieve the new metamodel information for the component.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Fingerprint of the metamodel metadata of the component component.</text>
            <text>&lt;p&gt;</text>
            <text>Metamodel information could change when there is an infrastructure update and</text>
            <text>new functionality is added to an existing component.</text>
            <text>&lt;p&gt;</text>
            <text>Since the data present in {@link ComponentData#info} could be quite large,</text>
            <text>{@name #fingerprint} provides a convenient way to check if the data for a</text>
            <text>particular component is updated.</text>
            <text>&lt;p&gt;</text>
            <text>You should store the fingerprint associated with a component. After an update,</text>
            <text>by invoking the {@link com.vmware.vapi.metadata.metamodel.Component#fingerprint}</text>
            <text>{@term operation}, you can retrieve the new fingerprint for the component. If the new</text>
            <text>fingerprint and the previously stored fingerprint do not match, clients can</text>
            <text>use the {@link com.vmware.vapi.metadata.metamodel.Component#get} to retrieve the</text>
            <text>new metamodel information for the component.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ComponentInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="150cac845c2c411e6932e27679bdf3a1f3c5904e">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ComponentInfo" type="true" tag="name">ComponentInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains metamodel metadata information about a component element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ComponentInfo} {@term structure} contains metamodel metadata</text>
          <text>information about a component element.</text>
        </description>
      </doc>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Dot separated name of the component element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Dot separated name of the component element. The segments in the name reflect</text>
            <text>the organization of the APIs. The format of each segment is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="packages">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.PackageInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel metadata information of all the package elements contained in the component element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the package element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information of the package element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel metadata information of all the package elements contained in the</text>
            <text>component element. The key in the {@term map} is the identifier of the package</text>
            <text>element and the value in the {@term map} is the metamodel information of the package</text>
            <text>element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
        </metadata>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata for the component element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata for the component element. The key in the {@term map} is</text>
            <text>the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for a component. It can contain HTML markup and documentation tags (similar to Javadoc tags). The first sentence of the package documentation is a complete sentence that identifies the component by name and summarizes the purpose of the component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for a component. It can contain HTML</text>
            <text>markup and documentation tags (similar to Javadoc tags). The first</text>
            <text>sentence of the package documentation is a complete sentence that identifies</text>
            <text>the component by name and summarizes the purpose of the component.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ConstantInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="e5aa31599747164790bc4f03f13ab4dddac613cb">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ConstantInfo" type="true" tag="name">ConstantInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains metamodel information of the constant elements.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ConstantInfo} {@term structure} contains metamodel information</text>
          <text>of the constant elements.</text>
        </description>
      </doc>
      <attribute name="type">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the constant element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the constant element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="value">
        <type reference="ConstantValue" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ConstantValue"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Value of the constant element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Value of the constant element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for the constant element. It can contain HTML markup and documentation tags (similar to Javadoc tags).</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for the constant element. It can</text>
            <text>contain HTML markup and documentation tags (similar to Javadoc tags).</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ConstantValue" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="b2426d8d4c01c76bf4f1cabb1acc71ddb0550579">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ConstantValue" type="true" tag="name">ConstantValue</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel information of the constant element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ConstantValue} {@term structure} contains the metamodel</text>
          <text>information of the constant element.</text>
        </description>
      </doc>
      <enumeration name="Category" namespace="com.vmware.vapi.metadata.metamodel.ConstantValue" fingerprint="ce9daba109b185542b1adc55e472305457a0d703">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ConstantValue.Category" type="true" tag="name">Category</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> defines </text>
              <atTerm>enumeration values</atTerm>
              <text> for the valid kinds of values.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Category} {@term enumerated type} defines</text>
            <text>{@term enumeration values} for the valid kinds of values.</text>
          </description>
        </doc>
        <constant name="PRIMITIVE">
          <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.ConstantValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ConstantValue.Category"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of constant value is primitive.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of constant value is primitive.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="LIST">
          <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.ConstantValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ConstantValue.Category"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of constant value is a list.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of constant value is a list.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="category">
        <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.ConstantValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ConstantValue.Category"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Category of the type of constant value.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Category of the type of constant value.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="primitiveValue">
        <type reference="PrimitiveValue" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Primitive value of the constant element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ConstantValue.category" member="true" tag="name">#category</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ConstantValue.Category.PRIMITIVE" member="true">Category#PRIMITIVE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Primitive value of the constant element.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">category</entry>
            <entry key="value" type="java.lang.String">PRIMITIVE</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="listValue">
        <type generic="List">
          <type reference="PrimitiveValue" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List value of the constant element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ConstantValue.category" member="true" tag="name">#category</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ConstantValue.Category.LIST" member="true">Category#LIST</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>List value of the constant element.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">category</entry>
            <entry key="value" type="java.lang.String">LIST</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="264eae06477977a01879e02b91a3ba0da7d7571f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ElementMap" type="true" tag="name">ElementMap</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metadata elements. </text>
            <paragraph>
              <text> One of the sources for metadata is the annotations present in the interface definition language. When an annotation is represented in the </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementMap" type="true" tag="name">ElementMap</atName>
              <text>, </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementMap" type="true" tag="name">ElementMap</atName>
              <text> describes the data specified in the arguments for the annotation. </text>
            </paragraph>
            <paragraph>
              <text> For example, in </text>
              <atCode>@UnionCase(tag="tag", value="SELECT")</atCode>
              <text>, ElementMap describes the keyword arguments tag and value.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ElementMap} {@term structure} contains the metadata</text>
          <text>elements.</text>
          <text>&lt;p&gt;</text>
          <text>One of the sources for metadata is the annotations present in</text>
          <text>the interface definition language. When an annotation is represented</text>
          <text>in the {@name ElementMap}, {@name ElementMap} describes the data</text>
          <text>specified in the arguments for the annotation.</text>
          <text>&lt;p&gt;</text>
          <text>For example, in {@code @UnionCase(tag="tag", value="SELECT")}, ElementMap</text>
          <text>describes the keyword arguments tag and value.</text>
        </description>
      </doc>
      <attribute name="elements">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementValue" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementValue"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of the metadata elements. The key parameter of the </text>
              <atTerm>map</atTerm>
              <text> is the identifier for the element and the value corresponds to the element value.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information of the metadata elements. The key</text>
            <text>parameter of the {@term map} is the identifier for the element and the value</text>
            <text>corresponds to the element value.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ElementValue" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="75eee6569166f410c79d218c2d1d29fb6ef17f6d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue" type="true" tag="name">ElementValue</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> describes the value of the metadata element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ElementValue} {@term structure} describes the value of the</text>
          <text>metadata element.</text>
        </description>
      </doc>
      <enumeration name="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" fingerprint="4f6282ec61a5fd17feba2cdd5af347c7af39d453">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue.Type" type="true" tag="name">Type</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> defines the valid types for values in metadata elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Type} {@term enumerated type} defines the valid types</text>
            <text>for values in metadata elements.</text>
          </description>
        </doc>
        <constant name="LONG">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ElementValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of the value is a long (64 bit signed integer).</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of the value is a long (64 bit signed integer).</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="STRING">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ElementValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of the value is a string (a variable length sequence of characters). The encoding is UTF-8.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of the value is a string (a variable length</text>
              <text>sequence of characters). The encoding is UTF-8.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="STRING_LIST">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ElementValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of the value is a list of strings.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of the value is a list of strings.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="STRUCTURE_REFERENCE">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ElementValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of the value is an identifier for a structure element.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of the value is an identifier for a</text>
              <text>structure element.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="STRUCTURE_REFERENCE_LIST">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ElementValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the type of the value is a list of identifiers for a structure element.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the type of the value is a list of identifiers for a</text>
              <text>structure element.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="type">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.ElementValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.ElementValue.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the value.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the value.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="longValue">
        <type primitive="long"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Long value of the metadata element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ElementValue.Type.LONG" member="true">Type#LONG</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Long value of the metadata element.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">LONG</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="stringValue">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>String value of the metadata element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ElementValue.Type.STRING" member="true">Type#STRING</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>String value of the metadata element.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">STRING</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="listValue">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of strings value of the metadata element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ElementValue.Type.STRING_LIST" member="true">Type#STRING_LIST</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>List of strings value of the metadata element.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">STRING_LIST</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="structureId">
        <type primitive="ID"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier of the structure element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ElementValue.Type.STRUCTURE_REFERENCE" member="true">Type#STRUCTURE_REFERENCE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Identifier of the structure element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the {@term field} must be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the {@term field} will be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
          </content>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">STRUCTURE_REFERENCE</entry>
          </property>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
        </metadata>
      </attribute>
      <attribute name="structureIds">
        <type generic="List">
          <type primitive="ID"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of identifiers of the structure elements.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.ElementValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.ElementValue.Type.STRUCTURE_REFERENCE_LIST" member="true">Type#STRUCTURE_REFERENCE_LIST</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> must contain identifiers for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> will contain identifiers for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>List of identifiers of the structure elements.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the {@term field} must contain identifiers for the resource type: {@code com.vmware.vapi.structure}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the {@term field} will contain identifiers for the resource type: {@code com.vmware.vapi.structure}.</text>
          </content>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">STRUCTURE_REFERENCE_LIST</entry>
          </property>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="EnumerationInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="6fbc095b8360dcaa785fc35774620fa569cf6a39">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.EnumerationInfo" type="true" tag="name">EnumerationInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel information of an enumeration element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name EnumerationInfo} {@term structure} contains the metamodel</text>
          <text>information of an enumeration element.</text>
        </description>
      </doc>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Dot separated name of the enumeration element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Dot separated name of the enumeration element. The segments in the name reflect</text>
            <text>the organization of the APIs. The format of each segment is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="values">
        <type generic="List">
          <type reference="EnumerationValueInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.EnumerationValueInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the enumeration value elements contained in this enumeration element. The order of the enumeration value elements in the list is same as the order in which they are defined in the interface definition file.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information of all the enumeration value elements contained</text>
            <text>in this enumeration element. The order of the enumeration value elements</text>
            <text>in the list is same as the order in which they are defined in the interface</text>
            <text>definition file.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for an enumeration element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for an enumeration element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for an enumeration element. It can contain HTML markup and Javadoc tags. The first sentence of the enumeration documentation is a complete sentence that identifies the enumeration by name and summarizes the purpose of the enumeration. The documentation describes the context in which the enumeration is used. </text>
              <paragraph>
                <text> The documentation also contains references to the context in which the enumeration is used. But if the enumeration is used in many contexts, the references may not be present.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for an enumeration element. It can contain HTML</text>
            <text>markup and Javadoc tags. The first sentence of the enumeration documentation is a</text>
            <text>complete sentence that identifies the enumeration by name and summarizes the purpose</text>
            <text>of the enumeration. The documentation describes the context in which the enumeration</text>
            <text>is used.</text>
            <text>&lt;p&gt;</text>
            <text>The documentation also contains references to the context in which the enumeration</text>
            <text>is used. But if the enumeration is used in many contexts, the references may</text>
            <text>not be present.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="EnumerationValueInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="08ab4865be997a3362992ee273832ed70175cc4a">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.EnumerationValueInfo" type="true" tag="name">EnumerationValueInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> describes the </text>
            <atTerm>enumeration value</atTerm>
            <text> in the </text>
            <atTerm>enumerated type</atTerm>
            <text>.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name EnumerationValueInfo} {@term structure} describes the</text>
          <text>{@term enumeration value} in the {@term enumerated type}.</text>
        </description>
      </doc>
      <attribute name="value">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Value in the enumerated type. All the characters in the string are capitalized.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Value in the enumerated type. All the characters in the string are</text>
            <text>capitalized.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Additional metadata for enumeration value in the enumerated type. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Additional metadata for enumeration value in the enumerated type.</text>
            <text>The key in the {@term map} is the name of the metadata element</text>
            <text>and the value is the data associated with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier}</text>
            <text>contains possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for an enumeration value. It can contain HTML markup and documentation tags (similar to Javadoc tags). The first statement will be a noun or verb phrase that describes the purpose of the enumeration value.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for an enumeration value. It can contain</text>
            <text>HTML markup and documentation tags (similar to Javadoc tags). The first</text>
            <text>statement will be a noun or verb phrase that describes the purpose of</text>
            <text>the enumeration value.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ErrorInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="46edab1967246bca608efac9b5c8aedfa417192f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ErrorInfo" type="true" tag="name">ErrorInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metadata information about the error elements contained in an operation element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ErrorInfo} {@term structure} contains the metadata information</text>
          <text>about the error elements contained in an operation element.</text>
        </description>
      </doc>
      <attribute name="structureId">
        <type primitive="ID"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier for the structure element corresponding to the error that is being reported by the operation.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Identifier for the structure element corresponding to the error that is</text>
            <text>being reported by the operation.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the {@term field} must be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the {@term field} will be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
        </metadata>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The English language documentation for the service element. It can contain HTML markup and Javadoc tags.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The English language documentation for the service element. It can contain HTML</text>
            <text>markup and Javadoc tags.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="FieldInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="227c3fb0c9e0b6c9af66ee6ff4d789ef0c7ae3c3">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.FieldInfo" type="true" tag="name">FieldInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains metamodel information of a field element contained in a structure element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name FieldInfo} {@term structure} contains metamodel information</text>
          <text>of a field element contained in a structure element.</text>
        </description>
      </doc>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Name of the field element in a canonical format. The format is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Name of the field element in a canonical format. The format is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="type">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type information.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for the field element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for the field element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data</text>
            <text>associated with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for the service element. It can contain HTML markup and Javadoc tags.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for the service element. It can contain HTML</text>
            <text>markup and Javadoc tags.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="GenericInstantiation" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="907b098ffc5056da8925ed2d26eab305b9d18040">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation" type="true" tag="name">GenericInstantiation</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> describes the type information of a typed element when the type is an instantiation of one of the generic types provided by the infrastructure.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name GenericInstantiation} {@term structure} describes the type information</text>
          <text>of a typed element when the type is an instantiation of one of the generic</text>
          <text>types provided by the infrastructure.</text>
        </description>
      </doc>
      <enumeration name="GenericType" namespace="com.vmware.vapi.metadata.metamodel.GenericInstantiation" fingerprint="f4f42187096724bb852264cb989b1968fb764dba">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType" type="true" tag="name">GenericType</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> provides </text>
              <atTerm>enumeration values</atTerm>
              <text> for each of the generic types provided by the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name GenericType} {@term enumerated type} provides</text>
            <text>{@term enumeration values} for each of the generic types provided by</text>
            <text>the infrastructure.</text>
          </description>
        </doc>
        <constant name="LIST">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.metamodel.GenericInstantiation" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the generic type is a list.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the generic type is a list.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="MAP">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.metamodel.GenericInstantiation" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the generic type is a map.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the generic type is a map.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="OPTIONAL">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.metamodel.GenericInstantiation" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the generic type is an optional.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the generic type is an optional.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="SET">
          <type reference="GenericType" namespace="com.vmware.vapi.metadata.metamodel.GenericInstantiation" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the generic type is a set.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the generic type is a set.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="genericType">
        <type reference="GenericType" namespace="com.vmware.vapi.metadata.metamodel.GenericInstantiation" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The generic type that is being instantiated.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The generic type that is being instantiated.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="elementType">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the element parameter if the generic type instantiation is a </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.LIST" member="true">GenericType#LIST</atLink>
              <text>, </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.OPTIONAL" member="true">GenericType#OPTIONAL</atLink>
              <text> or </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.SET" member="true">GenericType#SET</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.genericType" member="true" tag="name">#genericType</atName>
              <text> is one of </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.LIST" member="true">GenericType#LIST</atLink>
              <text>, </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.OPTIONAL" member="true">GenericType#OPTIONAL</atLink>
              <text>, or </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.SET" member="true">GenericType#SET</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Type of the element parameter if the generic type</text>
            <text>instantiation is a {@link GenericType#LIST},</text>
            <text>{@link GenericType#OPTIONAL} or {@link GenericType#SET}.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">genericType</entry>
            <entry key="value" type="java.util.List">
              <item type="java.lang.String">LIST</item>
              <item type="java.lang.String">OPTIONAL</item>
              <item type="java.lang.String">SET</item>
            </entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="mapKeyType">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the key parameter of the map generic type instantiation. The map generic type has a key parameter and value parameter. The type of the value parameter is described by </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.mapValueType" member="true">GenericInstantiation#mapValueType</atLink>
              <text>..</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.genericType" member="true" tag="name">#genericType</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.MAP" member="true">GenericType#MAP</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Type of the key parameter of the map generic type instantiation.</text>
            <text>The map generic type has a key parameter and value parameter. The type</text>
            <text>of the value parameter is described by {@link GenericInstantiation#mapValueType}..</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">genericType</entry>
            <entry key="value" type="java.lang.String">MAP</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="mapValueType">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the value parameter of the map generic type instantiation. The map generic type has a key parameter and value parameter. The type of the key parameter is described by </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.mapKeyType" member="true">GenericInstantiation#mapKeyType</atLink>
              <text>..</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.genericType" member="true" tag="name">#genericType</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.GenericInstantiation.GenericType.MAP" member="true">GenericType#MAP</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Type of the value parameter of the map generic type instantiation.</text>
            <text>The map generic type has a key parameter and value parameter. The type</text>
            <text>of the key parameter is described by {@link GenericInstantiation#mapKeyType}..</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">genericType</entry>
            <entry key="value" type="java.lang.String">MAP</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="OperationInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="d751c365f784cdb91f3774d6db338c3aea129e93">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.OperationInfo" type="true" tag="name">OperationInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains metamodel information of an operation element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name OperationInfo} {@term structure} contains metamodel information</text>
          <text>of an operation element.</text>
        </description>
      </doc>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Name of the operation element in a canonical format. The format is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Name of the operation element in a canonical format. The format is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="params">
        <type generic="List">
          <type reference="FieldInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.FieldInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information for the parameter elements. The order of the parameters elements in the list is same as the order of the parameters declared in the interface definition file.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information for the parameter elements. The order of the parameters</text>
            <text>elements in the list is same as the order of the parameters declared in the</text>
            <text>interface definition file.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="output">
        <type reference="OperationResultInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.OperationResultInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel type for the output element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel type for the output element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="errors">
        <type generic="List">
          <type reference="ErrorInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ErrorInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of error elements that might be reported by the operation element. If the operation reports the same error for more than one reason, the list contains the error element associated with the error more than once with different documentation elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of error elements that might be reported by the operation element. If the</text>
            <text>operation reports the same error for more than one reason, the list contains</text>
            <text>the error element associated with the error more than once with different</text>
            <text>documentation elements.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for the operation element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for key in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for the operation element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for key in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for the service element. It can contain HTML markup and Javadoc tags.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for the service element. It can contain HTML</text>
            <text>markup and Javadoc tags.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="OperationResultInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="9d3357864586fbeed65ce4e95b55319e1237be8d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.OperationResultInfo" type="true" tag="name">OperationResultInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel information of an operation result element. </text>
            <paragraph>
              <text> An operation accepts a list of parameters and returns a result or an error. The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.OperationResultInfo" type="true" tag="name">OperationResultInfo</atName>
              <text> describes the result element of an operation.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name OperationResultInfo} {@term structure} contains the</text>
          <text>metamodel information of an operation result element.</text>
          <text>&lt;p&gt;</text>
          <text>An operation accepts a list of parameters and returns a result or an</text>
          <text>error. The {@name OperationResultInfo} describes the result element</text>
          <text>of an operation.</text>
        </description>
      </doc>
      <attribute name="type">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type information of the operation result element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type information of the operation result element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for the service element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for the service element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for the operation result element. It can contain HTML markup and Javadoc tags.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for the operation result element. It can</text>
            <text>contain HTML markup and Javadoc tags.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="PackageInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="a66df103bd80d5def939c79eef9aab398bd0df9d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.PackageInfo" type="true" tag="name">PackageInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel information of all the service elements, structure elements and enumeration elements contained in the package element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name PackageInfo} {@term structure} contains the metamodel information of</text>
          <text>all the service elements, structure elements and enumeration elements contained</text>
          <text>in the package element.</text>
        </description>
      </doc>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Dot separated name of the package element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Dot separated name of the package element. The segments in the name reflect</text>
            <text>the organization of the APIs. The format of each segment is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="structures">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="StructureInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.StructureInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the structure elements contained in the package element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the structure element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the structure element. </text>
              <paragraph>
                <text> This does not include the structure elements contained in the service elements that are contained in this package element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the structure elements contained in the</text>
            <text>package element. The key in the {@term map} is the identifier of the structure</text>
            <text>element and the value in the {@term map} is the metamodel information for the structure</text>
            <text>element.</text>
            <text>&lt;p&gt;</text>
            <text>This does not include the structure elements contained in the service</text>
            <text>elements that are contained in this package element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
        </metadata>
      </attribute>
      <attribute name="enumerations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="EnumerationInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.EnumerationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the enumeration elements contained in the package element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the enumeration element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the enumeration element. </text>
              <paragraph>
                <text> This does not include the enumeration elements that are contained in the service elements of this package element or structure elements of this package element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the enumeration elements contained in the</text>
            <text>package element. The key in the {@term map} is the identifier of the enumeration</text>
            <text>element and the value in the {@term map} is the metamodel information for the enumeration</text>
            <text>element.</text>
            <text>&lt;p&gt;</text>
            <text>This does not include the enumeration elements that are contained in the</text>
            <text>service elements of this package element or structure elements of this</text>
            <text>package element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.enumeration</property>
        </metadata>
      </attribute>
      <attribute name="services">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ServiceInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the service elements contained in the package element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the service element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the service element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the service elements contained in the</text>
            <text>package element. The key in the {@term map} is the identifier of the service</text>
            <text>element and the value in the {@term map} is the metamodel information for the</text>
            <text>service element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
        </metadata>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for the package element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for the package element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for a package. It can contain HTML markup and Javadoc tags. The first sentence of the package documentation is a complete sentence that identifies the package by name and summarizes the purpose of the package. </text>
              <paragraph>
                <text> The primary purpose of a package documentation is to provide high-level context that will provide a framework in which the users can put the detail about the package contents.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for a package. It can contain HTML</text>
            <text>markup and Javadoc tags. The first sentence of the package documentation is a</text>
            <text>complete sentence that identifies the package by name and summarizes the purpose</text>
            <text>of the package.</text>
            <text>&lt;p&gt;</text>
            <text>The primary purpose of a package documentation is to provide high-level</text>
            <text>context that will provide a framework in which the users can put the detail</text>
            <text>about the package contents.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="PrimitiveValue" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="cc4a94d187397d8994177276ca1a1fe845ac363d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue" type="true" tag="name">PrimitiveValue</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains value of the constant element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name PrimitiveValue} {@term structure} contains</text>
          <text>value of the constant element.</text>
        </description>
      </doc>
      <enumeration name="Type" namespace="com.vmware.vapi.metadata.metamodel.PrimitiveValue" fingerprint="b46068f5c41dcc995d5f3e44ba9eec94f8ed92e2">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type" type="true" tag="name">Type</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> defines the valid types for values in constant elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Type} {@term enumerated type} defines the valid</text>
            <text>types for values in constant elements.</text>
          </description>
        </doc>
        <constant name="BOOLEAN">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.PrimitiveValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the value is a boolean (true or false).</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the value is a boolean (true or false).</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="DOUBLE">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.PrimitiveValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the value is a double (64 bit floating number).</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the value is a double (64 bit floating number).</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="LONG">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.PrimitiveValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the value is a long (64 bit signed integer).</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the value is a long (64 bit signed integer).</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="STRING">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.PrimitiveValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Indicates the value is a string (a variable length sequence of characters). The encoding is UTF8.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Indicates the value is a string (a variable length sequence</text>
              <text>of characters). The encoding is UTF8.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="type">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.PrimitiveValue" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the constant value.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the constant value.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="booleanValue">
        <type primitive="boolean"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Boolean value of the constant.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type.BOOLEAN" member="true">Type#BOOLEAN</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Boolean value of the constant.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">BOOLEAN</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="doubleValue">
        <type primitive="double"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Double value of the constant.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type.DOUBLE" member="true">Type#DOUBLE</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Double value of the constant.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">DOUBLE</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="longValue">
        <type primitive="long"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Long value of the constant.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type.LONG" member="true">Type#LONG</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Long value of the constant.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">LONG</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="stringValue">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>String value of the constant.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.type" member="true" tag="name">#type</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.PrimitiveValue.Type.STRING" member="true">Type#STRING</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>String value of the constant.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">type</entry>
            <entry key="value" type="java.lang.String">STRING</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="ServiceInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="5d1801ed875c4a764187454dd57d0d08bd828489">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.ServiceInfo" type="true" tag="name">ServiceInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel information of all the operation elements, structure elements and enumeration elements containted in a service element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ServiceInfo} {@term structure} contains the metamodel information</text>
          <text>of all the operation elements, structure elements and enumeration elements</text>
          <text>containted in a service element.</text>
        </description>
      </doc>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Dot separated name of the service element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Dot separated name of the service element. The segments in the name reflect</text>
            <text>the organization of the APIs. The format of each segment is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="operations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.OperationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the operation elements contained in the service element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the operation element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the operation element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the operation elements contained in the</text>
            <text>service element. The key in the {@term map} is the identifier of the operation</text>
            <text>element and the value in the {@term map} is the metamodel information for the</text>
            <text>operation element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
        </metadata>
      </attribute>
      <attribute name="structures">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="StructureInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.StructureInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the structure elements contained in the service element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the structure element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the structure element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the structure elements contained in the</text>
            <text>service element. The key in the {@term map} is the identifier of the structure</text>
            <text>element and the value in the {@term map} is the metamodel information for the</text>
            <text>structure element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
        </metadata>
      </attribute>
      <attribute name="enumerations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="EnumerationInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.EnumerationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the enumeration elements contained in the service element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the enumeration element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the enumeration element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the enumeration elements contained in the</text>
            <text>service element. The key in the {@term map} is the identifier of the enumeration</text>
            <text>element and the value in the {@term map} is the metamodel information for the</text>
            <text>enumeration element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.enumeration</property>
        </metadata>
      </attribute>
      <attribute name="constants">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ConstantInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ConstantInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the constant elements contained in the service element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the constant element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the contant element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information of all the constant elements contained in the</text>
            <text>service element. The key in the {@term map} is the name of the constant element and</text>
            <text>the value in the {@term map} is the metamodel information for the contant element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for the service element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for the service element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains</text>
            <text>possible string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for the service element. It can contain HTML markup and Javadoc tags. The first sentence of the service documentation is a complete sentence that identifies the service by name and summarizes the purpose of the service. The remaining part of the documentation provides a summary of how to use the operations defined in the service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for the service element. It can contain HTML</text>
            <text>markup and Javadoc tags. The first sentence of the service documentation is a</text>
            <text>complete sentence that identifies the service by name and summarizes the purpose</text>
            <text>of the service. The remaining part of the documentation provides a summary of</text>
            <text>how to use the operations defined in the service.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="StructureInfo" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="d49f2bd4caad40f7ee37d1b5ddab3dd6642d14cf">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.StructureInfo" type="true" tag="name">StructureInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel information of all the field elements, constant elements and enumeration elements contained in the structure element. </text>
            <paragraph>
              <text> In the interface definition language, API designers have the ability to include all the fields from one structure to another structure. This is done by using an annotation </text>
              <atCode>@Include</atCode>
              <text> on the structure in which we want to add the fields. If this annotation is present, the list of fields in the </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.StructureInfo" type="true" tag="name">StructureInfo</atName>
              <text> will also contain the fields that are being included. The annotation information is also retained in the </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.StructureInfo.metadata" member="true">StructureInfo#metadata</atLink>
              <text> element as well.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name StructureInfo} {@term structure} contains the metamodel information</text>
          <text>of all the field elements, constant elements and enumeration elements</text>
          <text>contained in the structure element.</text>
          <text>&lt;p&gt;</text>
          <text>In the interface definition language, API designers have the ability to include</text>
          <text>all the fields from one structure to another structure. This is done by using</text>
          <text>an annotation {@code @Include} on the structure in which we want to add the fields.</text>
          <text>If this annotation is present, the list of fields in the {@name StructureInfo} will</text>
          <text>also contain the fields that are being included. The annotation information is</text>
          <text>also retained in the {@link StructureInfo#metadata} element as well.</text>
        </description>
      </doc>
      <enumeration name="Type" namespace="com.vmware.vapi.metadata.metamodel.StructureInfo" fingerprint="15abc7f2faf335adb2bece2ef08dfe221c9946a6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.StructureInfo.Type" type="true" tag="name">Type</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> defines the kind of this structure element. In the interface definition language, structure element and error element have similar characteristics. The difference is that only error elements can be used to describe the </text>
              <atTerm>errors</atTerm>
              <text> of an operation element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Type} {@term enumerated type} defines the kind of this structure</text>
            <text>element. In the interface definition language, structure element and</text>
            <text>error element have similar characteristics. The difference is that only</text>
            <text>error elements can be used to describe the {@term errors} of an operation</text>
            <text>element.</text>
          </description>
        </doc>
        <constant name="STRUCTURE">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.StructureInfo" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.StructureInfo.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the type is a structure element.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the type is a structure element.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="ERROR">
          <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.StructureInfo" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.StructureInfo.Type"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the type is an error element.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the type is an error element.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Dot separated name of the structure element. The segments in the name reflect the organization of the APIs. The format of each segment is lower case with underscores. Each underscore represents a word boundary. If there are acronyms in the word, the capitalization is preserved. This format makes it easy to translate the segment into a different naming convention.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Dot separated name of the structure element. The segments in the name reflect</text>
            <text>the organization of the APIs. The format of each segment is lower case</text>
            <text>with underscores. Each underscore represents a word boundary. If there</text>
            <text>are acronyms in the word, the capitalization is preserved. This format</text>
            <text>makes it easy to translate the segment into a different naming convention.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="type">
        <type reference="Type" namespace="com.vmware.vapi.metadata.metamodel.StructureInfo" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.StructureInfo.Type"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the structure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the structure.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="enumerations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="EnumerationInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.EnumerationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the enumeration elements contained in the structure element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the enumeration element and the value is the metamodel information of the enumeration element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Metamodel information of all the enumeration elements contained in the</text>
            <text>structure element. The key in the {@term map} is the identifier</text>
            <text>of the enumeration element and the value is the metamodel information of the</text>
            <text>enumeration element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.enumeration</property>
        </metadata>
      </attribute>
      <attribute name="constants">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ConstantInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ConstantInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the constant elements contained in the structure element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the constant element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the metamodel information for the constant element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information of all the constant elements contained in the structure</text>
            <text>element. The key in the {@term map} is the name of the constant element and</text>
            <text>the value in the {@term map} is the metamodel information for the constant element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="fields">
        <type generic="List">
          <type reference="FieldInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.FieldInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metamodel information of all the field elements. The order of the field elements in the list matches the order in which the fields are defined in the service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metamodel information of all the field elements. The order of the field elements</text>
            <text>in the list matches the order in which the fields are defined in the service.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="metadata">
        <type generic="Map">
          <type primitive="String"/>
          <type reference="ElementMap" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ElementMap"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Generic metadata elements for the structure element. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the name of the metadata element and the value is the data associated with that metadata element. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">com.vmware.vapi.metadata.metamodel.MetadataIdentifier</atLink>
                <text> contains possible string values for keys in the </text>
                <atTerm>map</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Generic metadata elements for the structure element. The key in the</text>
            <text>{@term map} is the name of the metadata element and the value is the data associated</text>
            <text>with that metadata element.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.MetadataIdentifier} contains possible</text>
            <text>string values for keys in the {@term map}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="documentation">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>English language documentation for a structure element. It can contain HTML markup and Javadoc tags. The first sentence of the structure documentation is a complete sentence that identifies the structure by name and summarizes the purpose of the structure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>English language documentation for a structure element. It can contain HTML</text>
            <text>markup and Javadoc tags. The first sentence of the structure documentation is a</text>
            <text>complete sentence that identifies the structure by name and summarizes the purpose</text>
            <text>of the structure.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="Type" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="97a088ba56b0b28a955dff6699352eddd0edfdc0">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Type" type="true" tag="name">Type</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> describes the type information of a typed element in the interface definiton language. The following elements in the metamodel are typed: </text>
            <ul>
              <text> </text>
              <li>
                <text>Field element in a structure element. See </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.StructureInfo.fields" member="true">StructureInfo#fields</atLink>
              </li>
              <text> </text>
              <li>
                <text>Parameter element in an operation element. See </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.OperationInfo.params" member="true">OperationInfo#params</atLink>
              </li>
              <text> </text>
              <li>
                <text>Result element in an operation element. See </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.OperationInfo.output" member="true">OperationInfo#output</atLink>
              </li>
              <text> </text>
            </ul>
            <text> The type could be one of the three following categories: </text>
            <ul>
              <text> </text>
              <li>
                <text>Built-in types: These are types present in the interface definition language type system. They are provided by the infrastructure. </text>
              </li>
              <text> </text>
              <li>
                <text>User defined named type: API designers can create custom types and use them for the typed elements. These types have a unique identifier.</text>
              </li>
              <text> </text>
              <li>
                <text>Generic type instantiation: The language infrastructure also provides generic types such as list, map, set and so on. An instantiation of one of these generic types could also be used for the typed elements.</text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Type} {@term structure} describes the type information of</text>
          <text>a typed element in the interface definiton language. The following</text>
          <text>elements in the metamodel are typed:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Field element in a structure element. See {@link StructureInfo#fields}&lt;/li&gt;</text>
          <text>&lt;li&gt;Parameter element in an operation element. See {@link OperationInfo#params}&lt;/li&gt;</text>
          <text>&lt;li&gt;Result element in an operation element. See {@link OperationInfo#output}&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>The type could be one of the three following categories:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Built-in types: These are types present in the interface definition language</text>
          <text>type system. They are provided by the infrastructure. &lt;/li&gt;</text>
          <text>&lt;li&gt;User defined named type: API designers can create custom types and use them</text>
          <text>for the typed elements. These types have a unique identifier.&lt;/li&gt;</text>
          <text>&lt;li&gt;Generic type instantiation: The language infrastructure also provides</text>
          <text>generic types such as list, map, set and so on. An instantiation of one of</text>
          <text>these generic types could also be used for the typed elements.&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <enumeration name="Category" namespace="com.vmware.vapi.metadata.metamodel.Type" fingerprint="d29dcb44fe2641974fc8180c66c5715d2cf37f13">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Type.Category" type="true" tag="name">Category</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> provides </text>
              <atTerm>enumeration value</atTerm>
              <text> for each category of the type.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Category} {@term enumerated type} provides {@term enumeration value} for</text>
            <text>each category of the type.</text>
          </description>
        </doc>
        <constant name="BUILTIN">
          <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.Category"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The type is one of the built-in types specified in </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.Type.BuiltinType" type="true">BuiltinType</atLink>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The type is one of the built-in types specified in {@link BuiltinType}</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="USER_DEFINED">
          <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.Category"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The type is one of the user defined named types.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The type is one of the user defined named types.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="GENERIC">
          <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.Category"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The type is an instantiation of one of the generic types.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The type is an instantiation of one of the generic types.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <enumeration name="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" fingerprint="609f917c316cca1bb17367bc0e6e2431fcacd909">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Type.BuiltinType" type="true" tag="name">BuiltinType</atName>
              <text> </text>
              <atTerm>enumerated type</atTerm>
              <text> provides </text>
              <atTerm>enumeration value</atTerm>
              <text> for each of the built-in types present in the interface definition language type system.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name BuiltinType} {@term enumerated type} provides {@term enumeration value}</text>
            <text>for each of the built-in types present in the interface definition language type system.</text>
          </description>
        </doc>
        <constant name="VOID">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a void. The value is </text>
                <atTerm>unset</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a void. The value is {@term unset}.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="BOOLEAN">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a boolean. The value is true or false.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a boolean. The value is true or false.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="LONG">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a long. The value is a 64 bit signed integer.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a long. The value is a 64 bit</text>
              <text>signed integer.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="DOUBLE">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a double. The value is a 64 bit floating point number.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a double. The value is a</text>
              <text>64 bit floating point number.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="STRING">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a string. The value is a variable-length sequence of zero or more unicode characters.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a string. The value is a variable-length</text>
              <text>sequence of zero or more unicode characters.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="BINARY">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a binary. The value is a variable-length sequence of zero or more bytes.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a binary. The value is a variable-length</text>
              <text>sequence of zero or more bytes.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="SECRET">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a secret. The value is a variable-length sequence of zero or more unicode characters. The value contains sensitive data that should not be printed or displayed anywhere.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a secret. The value is a variable-length</text>
              <text>sequence of zero or more unicode characters. The value contains sensitive</text>
              <text>data that should not be printed or displayed anywhere.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="DATE_TIME">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a datetime. The value should be in the UTC timezone and the precision is milliseconds.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a datetime. The value should be in the UTC timezone</text>
              <text>and the precision is milliseconds.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="ID">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is an ID. The value represents an identifier for a resource.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is an ID. The value represents an</text>
              <text>identifier for a resource.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="URI">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is an URI. The value follows the IRI specification in RFC 3987.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is an URI. The value follows the IRI</text>
              <text>specification in RFC 3987.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="ANY_ERROR">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is an arbitrary </text>
                <atTerm>error</atTerm>
                <text> type. This is used if the value of a typed element can be one of any user defined named type which is an </text>
                <atTerm>error</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is an arbitrary {@term error} type. This is used if the</text>
              <text>value of a typed element can be one of any user defined named type</text>
              <text>which is an {@term error}.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="DYNAMIC_STRUCTURE">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is a dynamic structure. This is used if the value of a typed element can be one of any user defined named type.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is a dynamic structure. This is used if the value</text>
              <text>of a typed element can be one of any user defined named type.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="OPAQUE">
          <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The built-in type is an opaque. This is used if the value of a typed element could be of any type and the actual type will be known only during the execution of the API. This is mostly used in infrastructure </text>
                <atTerm>services</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The built-in type is an opaque. This is used if the value of a typed</text>
              <text>element could be of any type and the actual type will be known only</text>
              <text>during the execution of the API. This is mostly used in infrastructure</text>
              <text>{@term services}.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="category">
        <type reference="Category" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.Category"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Category of this type.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Category of this type.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="builtinType">
        <type reference="BuiltinType" namespace="com.vmware.vapi.metadata.metamodel.Type" target="ENUMERATION" declaration="com.vmware.vapi.metadata.metamodel.Type.BuiltinType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Category of the built-in type.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Type.category" member="true" tag="name">#category</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Type.Category.BUILTIN" member="true">Category#BUILTIN</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Category of the built-in type.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">category</entry>
            <entry key="value" type="java.lang.String">BUILTIN</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="userDefinedType">
        <type reference="UserDefinedType" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.UserDefinedType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier and type of the user defined type.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Type.category" member="true" tag="name">#category</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Type.Category.USER_DEFINED" member="true">Category#USER_DEFINED</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Identifier and type of the user defined type.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">category</entry>
            <entry key="value" type="java.lang.String">USER_DEFINED</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="genericInstantiation">
        <type reference="GenericInstantiation" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.GenericInstantiation"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Instantiation of one of the generic types available in the interface definition language.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Type.category" member="true" tag="name">#category</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Type.Category.GENERIC" member="true">Category#GENERIC</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Instantiation of one of the generic types available in the interface</text>
            <text>definition language.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">category</entry>
            <entry key="value" type="java.lang.String">GENERIC</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="UserDefinedType" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="c5206e20508317c7c92acb1d85c91deef5e5ccb0">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.UserDefinedType" type="true" tag="name">UserDefinedType</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the metamodel type information of a typed element whose type is a user defined named type.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name UserDefinedType} {@term structure} contains the metamodel</text>
          <text>type information of a typed element whose type is a user defined named</text>
          <text>type.</text>
        </description>
      </doc>
      <attribute name="resourceType">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Category of the user defined named type. The named type could be a structure element or an enumeration element.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> must be one of </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text> or </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> will be one of </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text> or </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Category of the user defined named type. The named type could be</text>
            <text>a structure element or an enumeration element.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the {@term field} must be one of {@code com.vmware.vapi.structure} or {@code com.vmware.vapi.enumeration}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the {@term field} will be one of {@code com.vmware.vapi.structure} or {@code com.vmware.vapi.enumeration}.</text>
          </content>
        </doc>
        <metadata>
          <property name="IsOneOf" type="java.util.List">
            <item type="java.lang.String">com.vmware.vapi.structure</item>
            <item type="java.lang.String">com.vmware.vapi.enumeration</item>
          </property>
        </metadata>
      </attribute>
      <attribute name="resourceId">
        <type primitive="ID"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier of the user defined named type.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> must be an identifier for one of these resource types: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text> or </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> will be an identifier for one of these resource types: </text>
              <atCode>com.vmware.vapi.structure</atCode>
              <text> or </text>
              <atCode>com.vmware.vapi.enumeration</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Identifier of the user defined named type.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the {@term field} must be an identifier for one of these resource types: {@code com.vmware.vapi.structure} or {@code com.vmware.vapi.enumeration}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the {@term field} will be an identifier for one of these resource types: {@code com.vmware.vapi.structure} or {@code com.vmware.vapi.enumeration}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.util.Map">
            <entry key="value" type="java.util.List">
              <item type="java.lang.String">com.vmware.vapi.structure</item>
              <item type="java.lang.String">com.vmware.vapi.enumeration</item>
            </entry>
            <entry key="typeHolder" type="java.lang.String">resourceType</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <service name="Component" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="7aa1ef2489d06a8b3d80ba3f04fc2b9ae89d3e96">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Component" type="true" tag="name">Component</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> providers </text>
            <atTerm>operations</atTerm>
            <text> to retrieve metamodel information of a component element. </text>
            <paragraph>
              <text> A component defines a set of functionality that is deployed together and versioned together. For example, all the </text>
              <atTerm>services</atTerm>
              <text> that belong to VMware Content Library are part of a single component. A component element describes a component. A component element contains one or more package elements. </text>
            </paragraph>
            <paragraph>
              <text> The </text>
              <atTerm>operations</atTerm>
              <text> for package elements are provided by </text>
              <atTerm>service</atTerm>
              <text> </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.Package" type="true">com.vmware.vapi.metadata.metamodel.Package</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Component} {@term service} providers {@term operations}</text>
          <text>to retrieve metamodel information of a component element.</text>
          <text>&lt;p&gt;</text>
          <text>A component defines a set of functionality that is deployed together and</text>
          <text>versioned together. For example, all the {@term services} that belong to</text>
          <text>VMware Content Library are part of a single component. A component</text>
          <text>element describes a component. A component element contains one or more</text>
          <text>package elements.</text>
          <text>&lt;p&gt;</text>
          <text>The {@term operations} for package elements are provided by {@term service}</text>
          <text>{@link com.vmware.vapi.metadata.metamodel.Package}.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.component</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for component.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.component</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the component elements that are registered with the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the component elements that are registered</text>
            <text>with the infrastructure.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the component elements that are registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the component elements that are</text>
              <text>registered with the infrastructure.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="615281114e72289283529321f074055eee9f0eb4">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves metamodel information about the component element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Component.get#componentId">componentId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.ComponentData" type="true">ComponentData</atLink>
                <text> contains the metamodel information about the component and it's fingerprint. It contains information about all the package elements that are contained in this component element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves metamodel information about the component element corresponding</text>
            <text>to {@param.name componentId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link ComponentData} contains the metamodel information about the</text>
            <text>component and it's fingerprint. It contains information about all the</text>
            <text>package elements that are contained in this component element.</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the component element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the component element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the component element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Component.get#componentId">componentId</atParamName>
                <text> is not registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the component element associated with {@param.name componentId}</text>
              <text>is not registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ComponentData" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ComponentData"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.ComponentData" type="true">ComponentData</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Component.get#componentId">componentId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link ComponentData} instance that corresponds to</text>
              <text>{@param.name componentId}.</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="fingerprint" fingerprint="a95f96ea304f419f7ab585c089e23350d3275608">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves the fingerprint computed from the metamodel metadata of the component element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Component.fingerprint#componentId">componentId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The fingerprint provides clients an efficient way to check if the metadata for a particular component element has been modified on the server. The client can do this by comparing the result of this operation with the fingerprint returned in the result of </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.Component.get" member="true">com.vmware.vapi.metadata.metamodel.Component#get</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves the fingerprint computed from the metamodel metadata of</text>
            <text>the component element corresponding to {@param.name componentId}.</text>
            <text>&lt;p&gt;</text>
            <text>The fingerprint provides clients an efficient way to check if the metadata</text>
            <text>for a particular component element has been modified on the server. The</text>
            <text>client can do this by comparing the result of this operation with the</text>
            <text>fingerprint returned in the result of</text>
            <text>{@link com.vmware.vapi.metadata.metamodel.Component#get}.</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the component element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the component element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the component element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Component.fingerprint#componentId">componentId</atParamName>
                <text> is not registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the component element associated with {@param.name componentId}</text>
              <text>is not registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The fingerprint computed from the metamodel metadata of the component element.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The fingerprint computed from the metamodel metadata of the</text>
              <text>component element.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Enumeration" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="5a6a36093cca42f93f991c40e2e7927664751215">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Enumeration" type="true" tag="name">Enumeration</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve metamodel information about an enumeration element in the interface definition language. </text>
            <paragraph>
              <text> The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Enumeration" type="true" tag="name">Enumeration</atName>
              <text> has a list of enumeration value elements.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Enumeration} {@term service} provides {@term operations}</text>
          <text>to retrieve metamodel information about an enumeration element in the</text>
          <text>interface definition language.</text>
          <text>&lt;p&gt;</text>
          <text>The {@name Enumeration} has a list of enumeration value elements.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.enumeration</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for enumeration.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for enumeration.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.enumeration</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the enumeration elements that are contained in all the package elements, service elements and structure elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the enumeration elements that are</text>
            <text>contained in all the package elements, service elements and</text>
            <text>structure elements.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the enumeration elements.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.enumeration</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the enumeration elements.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.enumeration}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="06b755a432f2ce7dfd3b607e2e606c426d6af56f">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the enumeration element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Enumeration.get#enumerationId">enumerationId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.EnumerationInfo" type="true">EnumerationInfo</atLink>
                <text> contains the metamodel information about the enumeration value element contained in the enumeration element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the enumeration element corresponding to</text>
            <text>{@param.name enumerationId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link EnumerationInfo} contains the metamodel information about the</text>
            <text>enumeration value element contained in the enumeration element.</text>
          </description>
        </doc>
        <parameter name="enumerationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the enumeration element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.enumeration</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the enumeration element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.enumeration}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the enumeration element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Enumeration.get#enumerationId">enumerationId</atParamName>
                <text> is not contained in any of the package elements, service elements and structure elements.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the enumeration element associated with {@param.name enumerationId}</text>
              <text>is not contained in any of the package elements, service</text>
              <text>elements and structure elements.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="EnumerationInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.EnumerationInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.EnumerationInfo" type="true">EnumerationInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Enumeration.get#enumerationId">enumerationId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link EnumerationInfo} instance that corresponds to</text>
              <text>{@param.name enumerationId}</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="MetadataIdentifier" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="4e0b4e2d0df60bbcca36c404d0090b4b80d153dd">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true" tag="name">MetadataIdentifier</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides string constants that can be used as identifiers for the metadata elements. </text>
            <paragraph>
              <text> Most of the types in </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel" pkg="true">com.vmware.vapi.metadata.metamodel</atLink>
              <text> package has a metadata field whose type is </text>
              <atCode>Map&lt;String, ElementMap&gt;</atCode>
              <text>. </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel.MetadataIdentifier" type="true">MetadataIdentifier</atLink>
              <text> contains the identifiers used in the keys of the above Map type.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name MetadataIdentifier} {@term service} provides</text>
          <text>string constants that can be used as identifiers for the metadata</text>
          <text>elements.</text>
          <text>&lt;p&gt;</text>
          <text>Most of the types in {@link com.vmware.vapi.metadata.metamodel} package</text>
          <text>has a metadata field whose type is {@code Map&lt;String, ElementMap&gt;}.</text>
          <text>{@link MetadataIdentifier} contains the identifiers used in the keys of the</text>
          <text>above Map type.</text>
        </description>
      </doc>
      <constant name="CANONICAL_NAME">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the CanonicalName metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the CanonicalName metadata.</text>
          </description>
        </doc>
        <value>CanonicalName</value>
      </constant>
      <constant name="COMPONENT">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Component metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Component metadata.</text>
          </description>
        </doc>
        <value>Component</value>
      </constant>
      <constant name="CREATE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Create metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Create metadata.</text>
          </description>
        </doc>
        <value>Create</value>
      </constant>
      <constant name="CRUD">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Crud metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Crud metadata.</text>
          </description>
        </doc>
        <value>Crud</value>
      </constant>
      <constant name="HAS_FIELDS_OF">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the HasFieldsOf metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the HasFieldsOf metadata.</text>
          </description>
        </doc>
        <value>HasFieldsOf</value>
      </constant>
      <constant name="INCLUDABLE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Includable metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Includable metadata.</text>
          </description>
        </doc>
        <value>Includable</value>
      </constant>
      <constant name="INCLUDE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Include metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Include metadata.</text>
          </description>
        </doc>
        <value>Include</value>
      </constant>
      <constant name="IS_ONE_OF">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the IsOneOf metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the IsOneOf metadata.</text>
          </description>
        </doc>
        <value>IsOneOf</value>
      </constant>
      <constant name="MODEL">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Model metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Model metadata.</text>
          </description>
        </doc>
        <value>Model</value>
      </constant>
      <constant name="READ">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Read metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Read metadata.</text>
          </description>
        </doc>
        <value>Read</value>
      </constant>
      <constant name="RESOURCE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Resource metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Resource metadata.</text>
          </description>
        </doc>
        <value>Resource</value>
      </constant>
      <constant name="UNION_CASE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the UnionCase metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the UnionCase metadata.</text>
          </description>
        </doc>
        <value>UnionCase</value>
      </constant>
      <constant name="UNION_TAG">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the UnionTag metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the UnionTag metadata.</text>
          </description>
        </doc>
        <value>UnionTag</value>
      </constant>
      <constant name="UPDATE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Identifier representing the Update metadata.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Identifier representing the Update metadata.</text>
          </description>
        </doc>
        <value>Update</value>
      </constant>
    </service>
    <service name="Package" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="4c661d69c97003ad00fb029c1a0b47bc215e9ed5">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Package" type="true" tag="name">Package</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve metamodel information about a package element in the interface definition language. </text>
            <paragraph>
              <text> A package is a logical grouping of services, structures and enumerations. A package element describes the package. It contains the service elements, structure elements and enumeration elements that are grouped together.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Package} {@term service} provides {@term operations}</text>
          <text>to retrieve metamodel information about a package element in the</text>
          <text>interface definition language.</text>
          <text>&lt;p&gt;</text>
          <text>A package is a logical grouping of services, structures and</text>
          <text>enumerations. A package element describes the package. It contains</text>
          <text>the service elements, structure elements and enumeration elements</text>
          <text>that are grouped together.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for package.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for package.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.package</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the packages elements that are contained in all the registered component elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the packages elements that are contained</text>
            <text>in all the registered component elements.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the package elements that are contained in all the registered component elements.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the package elements that are</text>
              <text>contained in all the registered component elements.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="52514ec7fb968b54868d27188efe8eb795fa2051">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the package element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Package.get#packageId">packageId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the package element corresponding to</text>
            <text>{@param.name packageId}.</text>
          </description>
        </doc>
        <parameter name="packageId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the package element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the package element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the package element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Package.get#packageId">packageId</atParamName>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the package element associated with {@param.name packageId}</text>
              <text>does not exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.PackageInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.PackageInfo" type="true">PackageInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Package.get#packageId">packageId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link PackageInfo} instance that corresponds to</text>
              <text>{@param.name packageId}.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Resource" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="240dc2dd0bc67a2397280bb719b5e2c4937722eb">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atLink resolved="com.vmware.vapi.metadata.metamodel.Resource" type="true">Resource</atLink>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve information about resource types. </text>
            <paragraph>
              <text> A service is a logical grouping of operations that operate on an entity. Each entity is identifier by a namespace (or resource type) and an unique identifier.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@link Resource} {@term service} provides {@term operations} to</text>
          <text>retrieve information about resource types.</text>
          <text>&lt;p&gt;</text>
          <text>A service is a logical grouping of operations that operate on an</text>
          <text>entity. Each entity is identifier by a namespace (or resource type)</text>
          <text>and an unique identifier.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.resource</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for resource.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for resource.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.resource</value>
      </constant>
      <operation name="list" fingerprint="208c741532e61eccf25febb07b0fbefd734057ef">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the set of resource types present across all the service elements contained in all the package elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the set of resource types present across all the service</text>
            <text>elements contained in all the package elements.</text>
          </description>
        </doc>
        <result>
          <type generic="Set">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Set of resource types</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.resource</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Set of resource types</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.resource}.</text>
            </content>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Service" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="6fb9267ec9b65e3f93cbc421a8f3511ee4c5df00">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Service" type="true" tag="name">Service</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve metamodel information about a service element in the interface definition language. </text>
            <paragraph>
              <text> A service is a logical grouping of operations that operate on some entity. A service element describes a service. It contains operation elements that describe the operations grouped in the service. It also contains structure elements and enumeration elements corresponding to the structures and enumerations defined in the service.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Service} {@term service} provides {@term operations}</text>
          <text>to retrieve metamodel information about a service element in the</text>
          <text>interface definition language.</text>
          <text>&lt;p&gt;</text>
          <text>A service is a logical grouping of operations that operate on</text>
          <text>some entity. A service element describes a service. It contains</text>
          <text>operation elements that describe the operations grouped in the</text>
          <text>service. It also contains structure elements and enumeration elements</text>
          <text>corresponding to the structures and enumerations defined in the</text>
          <text>service.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for service.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.service</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the service elements that are currently registered with the infrastructure. </text>
              <paragraph>
                <text> The list of service elements is an aggregate list of all the service elements contained in all the package elements.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the service elements that are currently registered</text>
            <text>with the infrastructure.</text>
            <text>&lt;p&gt;</text>
            <text>The list of service elements is an aggregate list of all the service elements</text>
            <text>contained in all the package elements.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the service elements that are currently registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the service elements that are currently</text>
              <text>registered with the infrastructure.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="8e94108e5b12332cf5ebe5d2fff56f7fe4f8874a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Service.get#serviceId">serviceId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.ServiceInfo" type="true">ServiceInfo</atLink>
                <text> contains the metamodel information for the operation elements, structure elements and enumeration elements contained in the service element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the service element corresponding to</text>
            <text>{@param.name serviceId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link ServiceInfo} contains the metamodel information for the</text>
            <text>operation elements, structure elements and enumeration elements</text>
            <text>contained in the service element.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Service.get#serviceId">serviceId</atParamName>
                <text> is not registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId}</text>
              <text>is not registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.ServiceInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.ServiceInfo" type="true">ServiceInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Service.get#serviceId">serviceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link ServiceInfo} instance that corresponds to</text>
              <text>{@param.name serviceId}</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Source" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="9df4e2e547bda73492eb05ff443c0c04413fc83f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Source" type="true" tag="name">Source</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to manage the sources of metamodel metadata information. </text>
            <paragraph>
              <text> The interface definition language infrastructure provides tools to generate various kinds of metadata in JSON format from the interface definition files and additional properties files. One of the generated files contains metamodel information. The generated file can be registered as a source of metadata. </text>
            </paragraph>
            <paragraph>
              <text> The metamodel file contains all the data present in the interface definition files. Each metamodel file contains data about one component element. When a metamodel file is added as a source, each source contributes only one component element's metadata. </text>
            </paragraph>
            <paragraph>
              <text> Metamodel metadata can also be discovered from a remote server that supports the metamodel metadata </text>
              <atTerm>services</atTerm>
              <text> (see </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel" pkg="true">com.vmware.vapi.metadata.metamodel</atLink>
              <text>). Since multiple components can be registered with a single metadata server, when a remote server is registered as a source, that source can contribute more than one component.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Source} {@term service} provides {@term operations} to</text>
          <text>manage the sources of metamodel metadata information.</text>
          <text>&lt;p&gt;</text>
          <text>The interface definition language infrastructure provides tools to</text>
          <text>generate various kinds of metadata in JSON format from the interface</text>
          <text>definition files and additional properties files. One of the generated</text>
          <text>files contains metamodel information. The generated file can be</text>
          <text>registered as a source of metadata.</text>
          <text>&lt;p&gt;</text>
          <text>The metamodel file contains all the data present in the interface</text>
          <text>definition files. Each metamodel file contains data about one</text>
          <text>component element. When a metamodel file is added as a source,</text>
          <text>each source contributes only one component element's metadata.</text>
          <text>&lt;p&gt;</text>
          <text>Metamodel metadata can also be discovered from a remote server that</text>
          <text>supports the metamodel metadata {@term services} (see</text>
          <text>{@link com.vmware.vapi.metadata.metamodel}). Since multiple components</text>
          <text>can be registered with a single metadata server, when a remote server</text>
          <text>is registered as a source, that source can contribute more than one</text>
          <text>component.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.metadata.metamodel.source</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for metadata source.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.metadata.metamodel.source</value>
      </constant>
      <structure name="Info" namespace="com.vmware.vapi.metadata.metamodel.Source" fingerprint="c700b77c09448ce1149873ef00744c8f20ad99f0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Source.Info" type="true" tag="name">Info</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the metadata source information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Info} {@term structure} contains the metadata source</text>
            <text>information.</text>
          </description>
        </doc>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>English language human readable description of the source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>English language human readable description of the source.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="type">
          <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Type of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Type of the metadata source.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionTag" type="java.lang.Boolean">true</property>
          </metadata>
        </attribute>
        <attribute name="filepath">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Absolute file path of the metamodel metadata file that has the metamodel information about one component element. The </text>
                <atName unresolved="true" tag="name">filePath</atName>
                <text> is the path to the file in the server's filesystem.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.metamodel.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#FILE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Absolute file path of the metamodel metadata file that has</text>
              <text>the metamodel information about one component element. The {@name filePath}</text>
              <text>is the path to the file in the server's filesystem.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">FILE</entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="address">
          <type primitive="URI"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Connection information for the remote server. This must be in the format http(s)://IP:port/namespace. </text>
                <paragraph>
                  <text> The remote server must support the </text>
                  <atTerm>services</atTerm>
                  <text> in the </text>
                  <atLink resolved="com.vmware.vapi.metadata.metamodel" pkg="true">com.vmware.vapi.metadata.metamodel</atLink>
                  <text> </text>
                  <atTerm>package</atTerm>
                  <text>. It must expose metamodel information of one or more components.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.metamodel.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#REMOTE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Connection information for the remote server. This must be</text>
              <text>in the format http(s)://IP:port/namespace.</text>
              <text>&lt;p&gt;</text>
              <text>The remote server must support the {@term services} in the</text>
              <text>{@link com.vmware.vapi.metadata.metamodel} {@term package}.</text>
              <text>It must expose metamodel information of one or more</text>
              <text>components.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">REMOTE</entry>
            </property>
          </metadata>
        </attribute>
      </structure>
      <structure name="CreateSpec" namespace="com.vmware.vapi.metadata.metamodel.Source" fingerprint="16e3a5849ef980b327bad799d9b58c105cd64dad">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.Source.CreateSpec" type="true" tag="name">CreateSpec</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the registration information of a metamodel source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name CreateSpec} {@term structure} contains the registration</text>
            <text>information of a metamodel source.</text>
          </description>
        </doc>
        <metadata>
          <property name="Include" type="com.vmware.vapi.idl.model.IdlReferenceType">
            <type reference="SourceCreateSpec" namespace="com.vmware.vapi.metadata" target="STRUCTURE" declaration="com.vmware.vapi.metadata.SourceCreateSpec"/>
          </property>
        </metadata>
      </structure>
      <operation name="create" fingerprint="429c114fe4dbe80ac100083a0e6c05b802f6d186">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Creates a new metadata source. Once the server validates the registration information of the metadata source, the metamodel metadata is retrieved from the source. This populates elements in all the </text>
              <atTerm>services</atTerm>
              <text> defined in </text>
              <atLink resolved="com.vmware.vapi.metadata.metamodel" pkg="true">com.vmware.vapi.metadata.metamodel</atLink>
              <text> </text>
              <atTerm>package</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Creates a new metadata source. Once the server validates the registration</text>
            <text>information of the metadata source, the metamodel metadata is retrieved</text>
            <text>from the source. This populates elements in all the {@term services}</text>
            <text>defined in {@link com.vmware.vapi.metadata.metamodel} {@term package}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.metamodel.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.metamodel.source}.</text>
            </content>
          </doc>
        </parameter>
        <parameter name="spec">
          <type reference="CreateSpec" namespace="com.vmware.vapi.metadata.metamodel.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Source.CreateSpec"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>create specification.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>create specification.</text>
            </description>
          </doc>
        </parameter>
        <error name="AlreadyExists">
          <type reference="AlreadyExists" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.AlreadyExists"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source identifier is already registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source identifier is already</text>
              <text>registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <error name="InvalidArgument">
          <type reference="InvalidArgument" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.InvalidArgument"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the type of the source specified in </text>
                <atLink unresolved="true">CreateSpec#type</atLink>
                <text> is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>if the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> is not a valid JSON file or if the format of the metamodel metadata in the JSON file is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text>if the URI specified in </text>
                <atLink unresolved="true">CreateSpec#address</atLink>
                <text> is unreachable or if there is a transport protocol or message protocol mismatch between the client and the server or if the remote server do not have </text>
                <atTerm>services</atTerm>
                <text> present in </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel" pkg="true">com.vmware.vapi.metadata.metamodel</atLink>
                <text> </text>
                <atTerm>package</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the type of the source specified in {@link CreateSpec#type}</text>
              <text>is invalid.</text>
            </description>
            <description index="1">
              <text>if the file specified in {@link CreateSpec#filepath}</text>
              <text>is not a valid JSON file or if the format of the metamodel</text>
              <text>metadata in the JSON file is invalid.</text>
            </description>
            <description index="2">
              <text>if the URI specified in {@link CreateSpec#address} is unreachable</text>
              <text>or if there is a transport protocol or message protocol mismatch</text>
              <text>between the client and the server or if the remote server do not</text>
              <text>have {@term services} present in {@link com.vmware.vapi.metadata.metamodel}</text>
              <text>{@term package}.</text>
            </description>
          </doc>
        </error>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the file specified in {@link CreateSpec#filepath}</text>
              <text>does not exist.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="delete" fingerprint="0c211ad04bf9f0ac47057e501fd156e61ed8a36a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Deletes an existing metamodel metadata source from the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Deletes an existing metamodel metadata source from the infrastructure.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.metamodel.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.metamodel.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.delete#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="get" fingerprint="32dd02ae0b40540bb07e25ed8d08c7205899002c">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the metadata source corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.get#sourceId">sourceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the metadata source corresponding to</text>
            <text>{@param.name sourceId}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.metamodel.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.metamodel.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.get#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.metamodel.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.Source.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.Source.Info" type="true">Info</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.get#sourceId">sourceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link Info} instance that corresponds to</text>
              <text>{@param.name sourceId}</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers of the metadata sources currently registered with the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers of the metadata sources currently registered</text>
            <text>with the infrastructure.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for metadata sources currently registered.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.metamodel.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for metadata sources currently</text>
              <text>registered.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.metadata.metamodel.source}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="reload" fingerprint="dd2f555bea96f6dabcbcb9908d18841370640d5d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Reloads the metamodel metadata from all the metadata sources or of a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.reload#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Reloads the metamodel metadata from all the metadata sources or of a</text>
            <text>particular metadata source if {@param.name sourceId} is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, all the metadata sources are reloaded.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.metamodel.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, all the metadata sources</text>
              <text>are reloaded.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.metamodel.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.reload#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="fingerprint" fingerprint="02f14da221aab78a45513dc80b5cfb91987643e0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the aggregate fingerprint of metadata from all the metadata sources or from a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.fingerprint#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the aggregate fingerprint of metadata from all the metadata</text>
            <text>sources or from a particular metadata source if {@param.name sourceId}</text>
            <text>is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, the fingerprint of all the metadata sources is returned.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.metamodel.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, the fingerprint of all the</text>
              <text>metadata sources is returned.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.metamodel.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Source.fingerprint#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Aggregate fingerprint of all the metadata sources or of a particular metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Aggregate fingerprint of all the metadata sources or of a</text>
              <text>particular metadata source.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Structure" namespace="com.vmware.vapi.metadata.metamodel" fingerprint="76a06d8a5882595fb5d6a64cef2d27b095b69853">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.Structure" type="true" tag="name">Structure</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> providers </text>
            <atTerm>operations</atTerm>
            <text> to retrieve metamodel information about a structure element in the interface definition language.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Structure} {@term service} providers {@term operations}</text>
          <text>to retrieve metamodel information about a structure element in the</text>
          <text>interface definition language.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for structure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for structure.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.structure</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the structure elements that are contained in all the package elements and service elements.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the structure elements that are contained</text>
            <text>in all the package elements and service elements.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the structure elements.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.structure</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the structure elements.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.structure}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="9a7152bae17cc8fd99cb4f4ded12c96063c1ea02">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the structure element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.Structure.get#structureId">structureId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.StructureInfo" type="true">StructureInfo</atLink>
                <text> contains the metamodel information about the structure element. It contains information about all the field elements and enumeration elements contained in this structure element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the structure element corresponding to</text>
            <text>{@param.name structureId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link StructureInfo} contains the metamodel information about the</text>
            <text>structure element. It contains information about all the field elements</text>
            <text>and enumeration elements contained in this structure element.</text>
          </description>
        </doc>
        <parameter name="structureId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the structure element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.structure</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the structure element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.structure}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the structure element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Structure.get#structureId">structureId</atParamName>
                <text> is not contained in any of the package elements or service elements.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the structure element associated with {@param.name structureId}</text>
              <text>is not contained in any of the package elements or</text>
              <text>service elements.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="StructureInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.StructureInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.StructureInfo" type="true">StructureInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.Structure.get#structureId">structureId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link StructureInfo} instance that corresponds to</text>
              <text>{@param.name structureId}.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.metamodel.resource" fingerprint="ae6efb4fde74cc3095f87ebced263c9d4c1048fd">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.metamodel.resource" pkg="true" tag="name">com.vmware.vapi.metadata.metamodel.resource</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> to retrieve metamodel information for resource types.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.metamodel.resource} {@term package} provides</text>
        <text>{@term services} to retrieve metamodel information for resource types.</text>
      </description>
    </doc>
    <service name="Model" namespace="com.vmware.vapi.metadata.metamodel.resource" fingerprint="7960b730a7d43176e975377225127f8fc852ff2e">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.resource.Model" type="true" tag="name">Model</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve information about models. </text>
            <paragraph>
              <text> A structure is used as a model if it is used for persisting data about an entity. Some of the fields in the model structure are also used for creating indexes for querying. </text>
            </paragraph>
            <paragraph>
              <text> One or more services can operate on the same resource type. One or more services can provide the model structure for an entity of this resource type. Using </text>
              <atName resolved="com.vmware.vapi.metadata.metamodel.resource.Model" type="true" tag="name">Model</atName>
              <text> </text>
              <atTerm>service</atTerm>
              <text> you can retrieve the list of all the structure elements that are model structures for a given resource type.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Model} {@term service} provides {@term operations} to</text>
          <text>retrieve information about models.</text>
          <text>&lt;p&gt;</text>
          <text>A structure is used as a model if it is used for persisting data</text>
          <text>about an entity. Some of the fields in the model structure are also</text>
          <text>used for creating indexes for querying.</text>
          <text>&lt;p&gt;</text>
          <text>One or more services can operate on the same resource type. One</text>
          <text>or more services can provide the model structure for an entity of this</text>
          <text>resource type. Using {@name Model} {@term service} you can retrieve</text>
          <text>the list of all the structure elements that are model structures for</text>
          <text>a given resource type.</text>
        </description>
      </doc>
      <operation name="list" fingerprint="db3b46547887ad9eafb895cdf5ab82c616519dc3">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the set of identifiers for the structure elements that are models for the resource type corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.resource.Model.list#resourceId">resourceId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.Structure" type="true">com.vmware.vapi.metadata.metamodel.Structure</atLink>
                <text> </text>
                <atTerm>service</atTerm>
                <text> provides </text>
                <atTerm>operations</atTerm>
                <text> to retrieve more details about the structure elements corresponding to the identifiers returned by this </text>
                <atTerm>operation</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the set of identifiers for the structure elements that</text>
            <text>are models for the resource type corresponding to {@param.name resourceId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link com.vmware.vapi.metadata.metamodel.Structure} {@term service}</text>
            <text>provides {@term operations} to retrieve more details about the structure</text>
            <text>elements corresponding to the identifiers returned by this {@term operation}.</text>
          </description>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.structure</property>
        </metadata>
        <parameter name="resourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the resource type.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.resource</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the resource type.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.resource}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.resource</property>
          </metadata>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the resource type associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.resource.Model.list#resourceId">resourceId</atParamName>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the resource type associated with {@param.name resourceId}</text>
              <text>does not exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="Set">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The set of identifiers for the models that are associated with the resource type in </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.resource.Model.list#resourceId">resourceId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.structure</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The set of identifiers for the models that are associated with the</text>
              <text>resource type in {@param.name resourceId}.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.structure}.</text>
            </content>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.metamodel.service" fingerprint="efbcc8e4fe2783f0715479a90b96bc6684106ce2">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.metamodel.service" pkg="true" tag="name">com.vmware.vapi.metadata.metamodel.service</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> to retrieve metamodel information about the elements contained in a service element.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.metamodel.service} {@term package} provides</text>
        <text>{@term services} to retrieve metamodel information about the elements contained in a</text>
        <text>service element.</text>
      </description>
    </doc>
    <service name="Hidden" namespace="com.vmware.vapi.metadata.metamodel.service" fingerprint="448bf06be8bcee5d5dbabceb90c079bcbe05c411">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.service.Hidden" type="true" tag="name">Hidden</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve the list of </text>
            <atTerm>services</atTerm>
            <text> that are hidden and should not be exposed in various presentation layers of API infrastructure.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Hidden} {@term service} provides {@term operations} to retrieve the</text>
          <text>list of {@term services} that are hidden and should not be exposed in</text>
          <text>various presentation layers of API infrastructure.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
      </metadata>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the </text>
              <atTerm>service</atTerm>
              <text> identifiers that should be hidden.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the {@term service} identifiers that should be hidden.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of </text>
                <atTerm>service</atTerm>
                <text> identifiers that should be hidden.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of {@term service} identifiers that should be hidden.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Operation" namespace="com.vmware.vapi.metadata.metamodel.service" fingerprint="56e7766ede08e9151174235335faa29d131684b5">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.metamodel.service.Operation" type="true" tag="name">Operation</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve metamodel information of an operation element in the interface definition language.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Operation} {@term service} provides {@term operations}</text>
          <text>to retrieve metamodel information of an operation element in the</text>
          <text>interface definition language.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for operation element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for operation element.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.operation</value>
      </constant>
      <operation name="list" fingerprint="a2b0374a605f9cc8163eedb157fa2ee3bbc9519a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the operation elements that are defined in the scope of </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.list#serviceId">serviceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the operation elements that are defined</text>
            <text>in the scope of {@param.name serviceId}.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.list#serviceId">serviceId</atParamName>
                <text> does not exist in any of the package elements.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId}</text>
              <text>does not exist in any of the package elements.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the operation elements that are defined in the scope of </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.list#serviceId">serviceId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the operation elements that are</text>
              <text>defined in the scope of {@param.name serviceId}.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="35918199b5305456d5bf5509340123af98fa6445">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves the metamodel information about an operation element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.get#operationId">operationId</atParamName>
              <text> contained in the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.get#serviceId">serviceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves the metamodel information about an operation element corresponding</text>
            <text>to {@param.name operationId} contained in the service element corresponding</text>
            <text>to {@param.name serviceId}.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <parameter name="operationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the operation element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the operation element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.get#serviceId">serviceId</atParamName>
                <text> does not exist in any of the package elements.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>if the operation element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.get#operationId">operationId</atParamName>
                <text> does not exist in the service element.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId} does</text>
              <text>not exist in any of the package elements.</text>
            </description>
            <description index="1">
              <text>if the operation element associated with {@param.name operationId}</text>
              <text>does not exist in the service element.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.metamodel" target="STRUCTURE" declaration="com.vmware.vapi.metadata.metamodel.OperationInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.metamodel.OperationInfo" type="true">com.vmware.vapi.metadata.metamodel.OperationInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.get#operationId">operationId</atParamName>
                <text> defined in scope </text>
                <atParamName resolved="com.vmware.vapi.metadata.metamodel.service.Operation.get#serviceId">serviceId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link com.vmware.vapi.metadata.metamodel.OperationInfo} instance</text>
              <text>that corresponds to {@param.name operationId} defined in scope</text>
              <text>{@param.name serviceId}.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.privilege" fingerprint="53e39ff3160ab441e3135e6e02bd61f854d824ec">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.privilege" pkg="true" tag="name">com.vmware.vapi.metadata.privilege</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that expose privilege information for operation elements across all the service elements. </text>
          <paragraph>
            <text> An entity has a unique identifier and a resource type. An entity can either be present in one of the parameter elements or if a parameter is a structure element, it could also be present in one of the field elements. </text>
          </paragraph>
          <paragraph>
            <text> Privileges can be assigned to either operation elements or entities used in the operation element. A list of privileges can also be applied on a package element. This list of privileges would be used as a default for all the operation elements and the entities that do not have any defined privileges.</text>
          </paragraph>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.privilege} {@term package} provides</text>
        <text>{@term services} that expose privilege information for operation</text>
        <text>elements across all the service elements.</text>
        <text>&lt;p&gt;</text>
        <text>An entity has a unique identifier and a resource type. An entity</text>
        <text>can either be present in one of the parameter elements or if a</text>
        <text>parameter is a structure element, it could also be present in one</text>
        <text>of the field elements.</text>
        <text>&lt;p&gt;</text>
        <text>Privileges can be assigned to either operation elements or entities</text>
        <text>used in the operation element. A list of privileges can also be applied</text>
        <text>on a package element. This list of privileges would be used as a default</text>
        <text>for all the operation elements and the entities that do not have any</text>
        <text>defined privileges.</text>
      </description>
    </doc>
    <structure name="ComponentData" namespace="com.vmware.vapi.metadata.privilege" fingerprint="741d7f2167f66e9776f3a98ddb442d8a5e3df535">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.ComponentData" type="true" tag="name">ComponentData</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the privilege information of the component along with its fingerprint.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ComponentData} {@term structure} contains the privilege information</text>
          <text>of the component along with its fingerprint.</text>
        </description>
      </doc>
      <attribute name="info">
        <type reference="ComponentInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.ComponentInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Privilege information of the component. This includes information about all the </text>
              <atTerm>packages</atTerm>
              <text> in the component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Privilege information of the component. This includes information about all the</text>
            <text>{@term packages} in the component.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="fingerprint">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Fingerprint of the metadata of the component. </text>
              <paragraph>
                <text> Privilege information could change when there is an infrastructure update. Since the data present in </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.ComponentData.info" member="true">ComponentData#info</atLink>
                <text> could be quite large, </text>
                <atName resolved="com.vmware.vapi.metadata.privilege.ComponentData.fingerprint" member="true" tag="name">#fingerprint</atName>
                <text> provides a convenient way to check if the data for a particular component is updated. </text>
              </paragraph>
              <paragraph>
                <text> You should store the fingerprint associated with a component. After an update, by invoking the </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.Component.fingerprint" member="true">com.vmware.vapi.metadata.privilege.Component#fingerprint</atLink>
                <text> </text>
                <atTerm>operation</atTerm>
                <text>, you can retrieve the new fingerprint for the component. If the new fingerprint and the previously stored fingerprint do not match, clients can then use the </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.Component.get" member="true">com.vmware.vapi.metadata.privilege.Component#get</atLink>
                <text> to retrieve the new privilege information for the component.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Fingerprint of the metadata of the component.</text>
            <text>&lt;p&gt;</text>
            <text>Privilege information could change when there is an infrastructure update.</text>
            <text>Since the data present in {@link ComponentData#info} could be quite large,</text>
            <text>{@name #fingerprint} provides a convenient way to check if the data for a particular</text>
            <text>component is updated.</text>
            <text>&lt;p&gt;</text>
            <text>You should store the fingerprint associated with a component. After an update,</text>
            <text>by invoking the {@link com.vmware.vapi.metadata.privilege.Component#fingerprint}</text>
            <text>{@term operation}, you can retrieve the new fingerprint for the component.</text>
            <text>If the new fingerprint and the previously stored fingerprint do not match,</text>
            <text>clients can then use the {@link com.vmware.vapi.metadata.privilege.Component#get}</text>
            <text>to retrieve the new privilege information for the component.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ComponentInfo" namespace="com.vmware.vapi.metadata.privilege" fingerprint="912372e5d76541f5dd18718bf14f7f43f36838b6">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.ComponentInfo" type="true" tag="name">ComponentInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the privilege information of a component element. </text>
            <paragraph>
              <text> For an explanation of privilege information contained within component elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.Component" type="true">com.vmware.vapi.metadata.privilege.Component</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ComponentInfo} {@term structure} contains the privilege</text>
          <text>information of a component element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of privilege information contained within</text>
          <text>component elements, see {@link com.vmware.vapi.metadata.privilege.Component}.</text>
        </description>
      </doc>
      <attribute name="packages">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.PackageInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Privilege information of all the package elements. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the package element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the privilege information for the package element. </text>
              <paragraph>
                <text> For an explanation of privilege information containment within package elements, see </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.Package" type="true">com.vmware.vapi.metadata.privilege.Package</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Privilege information of all the package elements. The key in the</text>
            <text>{@term map} is the identifier of the package element and the value in the {@term map}</text>
            <text>is the privilege information for the package element.</text>
            <text>&lt;p&gt;</text>
            <text>For an explanation of privilege information containment within</text>
            <text>package elements, see {@link com.vmware.vapi.metadata.privilege.Package}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="OperationInfo" namespace="com.vmware.vapi.metadata.privilege" fingerprint="0795c964f2b5f22e86a8eb8d14e7f913491295c0">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.OperationInfo" type="true" tag="name">OperationInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains privilege information of an operation element. </text>
            <paragraph>
              <text> For an explanation of containment within operation elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.service.Operation" type="true">com.vmware.vapi.metadata.privilege.service.Operation</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name OperationInfo} {@term structure} contains privilege information</text>
          <text>of an operation element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of containment within operation elements,</text>
          <text>see {@link com.vmware.vapi.metadata.privilege.service.Operation}.</text>
        </description>
      </doc>
      <attribute name="privileges">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of all privileges assigned to the operation element.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of all privileges assigned to the operation element.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="privilegeInfo">
        <type generic="List">
          <type reference="PrivilegeInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.PrivilegeInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Privilege information of all the parameter elements of the operation element. For an explanation of containment of privilege information within parameter elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.PrivilegeInfo" type="true">com.vmware.vapi.metadata.privilege.PrivilegeInfo</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Privilege information of all the parameter elements of the operation element.</text>
            <text>For an explanation of containment of privilege information within parameter</text>
            <text>elements, see {@link com.vmware.vapi.metadata.privilege.PrivilegeInfo}.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="PackageInfo" namespace="com.vmware.vapi.metadata.privilege" fingerprint="3f1ad914c8b07d66bf0fa18e57a3700633f1d6bb">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.PackageInfo" type="true" tag="name">PackageInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the privilege information of a package element. </text>
            <paragraph>
              <text> For an explanation of privilege information contained within package elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.Package" type="true">com.vmware.vapi.metadata.privilege.Package</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name PackageInfo} {@term structure} contains the privilege information</text>
          <text>of a package element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of privilege information contained within package</text>
          <text>elements, see {@link com.vmware.vapi.metadata.privilege.Package}.</text>
        </description>
      </doc>
      <attribute name="privileges">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of default privileges to be used for all the operations present in this package. If a particular operation element has no explicit privileges defined in the privilege definition file, these privileges are used for enforcing authorization.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of default privileges to be used for all the operations present</text>
            <text>in this package. If a particular operation element has no explicit privileges</text>
            <text>defined in the privilege definition file, these privileges are used for</text>
            <text>enforcing authorization.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="services">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.ServiceInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about all service elements contained in this package element that contain privilege information. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the service element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the privilege information for the service element. For an explanation of privilege information containment within service elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.Service" type="true">com.vmware.vapi.metadata.privilege.Service</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Information about all service elements contained in this package element</text>
            <text>that contain privilege information. The key in the {@term map} is the identifier</text>
            <text>of the service element and the value in the {@term map} is the privilege</text>
            <text>information for the service element.</text>
            <text>For an explanation of privilege information containment within service</text>
            <text>elements, see {@link com.vmware.vapi.metadata.privilege.Service}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="PrivilegeInfo" namespace="com.vmware.vapi.metadata.privilege" fingerprint="31b2a9797e43177472381290789382e52b183c7c">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.PrivilegeInfo" type="true" tag="name">PrivilegeInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains the privilege information for a parameter element in an operation element.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name PrivilegeInfo} {@term structure} contains the privilege information</text>
          <text>for a parameter element in an operation element.</text>
        </description>
      </doc>
      <attribute name="propertyPath">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.privilege.PrivilegeInfo.propertyPath" member="true" tag="name">#propertyPath</atName>
              <text> points to an entity that is used in the operation element. An entity can either be present in one of the parameter elements or if a parameter is a structure element, it could also be present in one of the field elements. </text>
              <paragraph>
                <text> If the privilege is assigned to an entity used in the parameter, </text>
                <atName resolved="com.vmware.vapi.metadata.privilege.PrivilegeInfo.propertyPath" member="true" tag="name">#propertyPath</atName>
                <text> will just contain the name of the parameter field. If the privilege is assigned to an entity in one of the field elements of a parameter element that is a structure element, then </text>
                <atName resolved="com.vmware.vapi.metadata.privilege.PrivilegeInfo.propertyPath" member="true" tag="name">#propertyPath</atName>
                <text> will contain a path to the field element starting from the parameter name.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name #propertyPath} points to an entity that is used in</text>
            <text>the operation element. An entity can either be present in one of the parameter</text>
            <text>elements or if a parameter is a structure element, it could also be present in</text>
            <text>one of the field elements.</text>
            <text>&lt;p&gt;</text>
            <text>If the privilege is assigned to an entity used in the parameter, {@name #propertyPath}</text>
            <text>will just contain the name of the parameter field. If the privilege is assigned</text>
            <text>to an entity in one of the field elements of a parameter element that is a structure</text>
            <text>element, then {@name #propertyPath} will contain a path to the field element starting</text>
            <text>from the parameter name.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="privileges">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of privileges assigned to the entity that is being referred by </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.PrivilegeInfo.propertyPath" member="true">#propertyPath</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of privileges assigned to the entity that is being referred by</text>
            <text>{@link #propertyPath}.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ServiceInfo" namespace="com.vmware.vapi.metadata.privilege" fingerprint="3ba47748643d7ef8a70f1dc09f5f57c9359ef79f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.ServiceInfo" type="true" tag="name">ServiceInfo</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> contains privilege information of a service element. </text>
            <paragraph>
              <text> For an explanation of privilege information contained within service elements, see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege.Service" type="true">com.vmware.vapi.metadata.privilege.Service</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ServiceInfo} {@term structure} contains privilege information</text>
          <text>of a service element.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of privilege information contained within service</text>
          <text>elements, see {@link com.vmware.vapi.metadata.privilege.Service}.</text>
        </description>
      </doc>
      <attribute name="operations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.OperationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about all operation elements contained in this service element that contain privilege information. The key in the </text>
              <atTerm>map</atTerm>
              <text> is the identifier of the operation element and the value in the </text>
              <atTerm>map</atTerm>
              <text> is the privilege information for the operation element. </text>
              <paragraph>
                <text> For an explanation of containment of privilege information within operation elements, see </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.service.Operation" type="true">com.vmware.vapi.metadata.privilege.service.Operation</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Information about all operation elements contained in this service element</text>
            <text>that contain privilege information. The key in the {@term map} is the identifier</text>
            <text>of the operation element and the value in the {@term map} is the privilege</text>
            <text>information for the operation element.</text>
            <text>&lt;p&gt;</text>
            <text>For an explanation of containment of privilege information within operation</text>
            <text>elements, see {@link com.vmware.vapi.metadata.privilege.service.Operation}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
        </metadata>
      </attribute>
    </structure>
    <service name="Component" namespace="com.vmware.vapi.metadata.privilege" fingerprint="ad18a18ea76093df907aa314bfb74b19a04e69ed">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.Component" type="true" tag="name">Component</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve privilege information of a component element. </text>
            <paragraph>
              <text> A component element is said to contain privilege information if any one of package elements in it contains privilege information.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Component} {@term service} provides {@term operations}</text>
          <text>to retrieve privilege information of a component element.</text>
          <text>&lt;p&gt;</text>
          <text>A component element is said to contain privilege information if</text>
          <text>any one of package elements in it contains privilege information.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.component</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for vAPI component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for vAPI component.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.component</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the component elements that have privilege information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the component elements that have</text>
            <text>privilege information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the component elements that have privilege information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the component elements that</text>
              <text>have privilege information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="697195fc68eddbbb8fef07d10e632189114b51bb">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves privilege information about the component element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Component.get#componentId">componentId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.ComponentData" type="true">ComponentData</atLink>
                <text> contains the privilege information about the component element and its fingerprint. It contains information about all the package elements that belong to this component element.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves privilege information about the component element</text>
            <text>corresponding to {@param.name componentId}.</text>
            <text>&lt;p&gt;</text>
            <text>The {@link ComponentData} contains the privilege information about</text>
            <text>the component element and its fingerprint. It contains information about all</text>
            <text>the package elements that belong to this component element.</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the component element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the component element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the component element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Component.get#componentId">componentId</atParamName>
                <text> does not have any privilege information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the component element associated with {@param.name componentId}</text>
              <text>does not have any privilege information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ComponentData" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.ComponentData"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.ComponentData" type="true">ComponentData</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Component.get#componentId">componentId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link ComponentData} instance that corresponds to</text>
              <text>{@param.name componentId}</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="fingerprint" fingerprint="a95f96ea304f419f7ab585c089e23350d3275608">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves the fingerprint computed from the privilege metadata of the component element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Component.fingerprint#componentId">componentId</atParamName>
              <text>. </text>
              <paragraph>
                <text> The fingerprint provides clients an efficient way to check if the metadata for a particular component has been modified on the server. The client can do this by comparing the result of this operation with the fingerprint returned in the result of </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.Component.get" member="true">com.vmware.vapi.metadata.privilege.Component#get</atLink>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves the fingerprint computed from the privilege metadata of</text>
            <text>the component element corresponding to {@param.name componentId}.</text>
            <text>&lt;p&gt;</text>
            <text>The fingerprint provides clients an efficient way to check if the metadata</text>
            <text>for a particular component has been modified on the server. The client can do</text>
            <text>this by comparing the result of this operation with the fingerprint returned</text>
            <text>in the result of {@link com.vmware.vapi.metadata.privilege.Component#get}.</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the component element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the component element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the component element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Component.fingerprint#componentId">componentId</atParamName>
                <text> does not have any privilege information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the component element associated with {@param.name componentId}</text>
              <text>does not have any privilege information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The fingerprint computed from the privilege metadata of the component.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The fingerprint computed from the privilege metadata of the component.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Package" namespace="com.vmware.vapi.metadata.privilege" fingerprint="53c918b6f98e166cc63666d976607b11d39f3a9f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.Package" type="true" tag="name">Package</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve privilege information of a package element. </text>
            <paragraph>
              <text> A package element is said to contain privilege information if there is a default privilege assigned to all service elements contained in the package element or if one of the operation elements contained in one of the service elements in this package element has privilege information.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Package} {@term service} provides {@term operations}</text>
          <text>to retrieve privilege information of a package element.</text>
          <text>&lt;p&gt;</text>
          <text>A package element is said to contain privilege information if there</text>
          <text>is a default privilege assigned to all service elements contained</text>
          <text>in the package element or if one of the operation elements contained</text>
          <text>in one of the service elements in this package element has privilege</text>
          <text>information.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for package.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for package.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.package</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the package elements that have privilege information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the package elements that have</text>
            <text>privilege information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the package elements that have privilege information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the package elements that</text>
              <text>have privilege information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="31e8eeb15a100270e870d3f8cb3f4959db7f4c5f">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves privilege information about the package element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Package.get#packageId">packageId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves privilege information about the package element</text>
            <text>corresponding to {@param.name packageId}.</text>
          </description>
        </doc>
        <parameter name="packageId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the package element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the package element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the package element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Package.get#packageId">packageId</atParamName>
                <text> does not have any privilege information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the package element associated with {@param.name packageId}</text>
              <text>does not have any privilege information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.PackageInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.PackageInfo" type="true">PackageInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Package.get#packageId">packageId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link PackageInfo} instance that corresponds to</text>
              <text>{@param.name packageId}</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Service" namespace="com.vmware.vapi.metadata.privilege" fingerprint="1a5f4f1f072ee24642c076acebe115e46dede7ea">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.Service" type="true" tag="name">Service</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve privilege information of a service element. </text>
            <paragraph>
              <text> A service element is said to contain privilege information if one of the operation elements contained in this service element has privilege information.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Service} {@term service} provides {@term operations}</text>
          <text>to retrieve privilege information of a service element.</text>
          <text>&lt;p&gt;</text>
          <text>A service element is said to contain privilege information if one of the</text>
          <text>operation elements contained in this service element has privilege</text>
          <text>information.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for service.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.service</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the service elements that have privilege information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the service elements that have</text>
            <text>privilege information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for the service elements that have privilege information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for the service elements that</text>
              <text>have privilege information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="1208dec9d87da266a8410267a19d248ef6280133">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves privilege information about the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Service.get#serviceId">serviceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves privilege information about the service element</text>
            <text>corresponding to {@param.name serviceId}.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Service.get#serviceId">serviceId</atParamName>
                <text> does not have any privilege information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId}</text>
              <text>does not have any privilege information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.ServiceInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.ServiceInfo" type="true">ServiceInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Service.get#serviceId">serviceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link ServiceInfo} instance that corresponds to</text>
              <text>{@param.name serviceId}</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Source" namespace="com.vmware.vapi.metadata.privilege" fingerprint="a99e5eb8ffe162e8ff208b9a0984207faa90aeb6">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.Source" type="true" tag="name">Source</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to manage the sources of privilege metadata information. </text>
            <paragraph>
              <text> The interface definition language infrastructure provides tools to generate various kinds of metadata in JSON format from the interface definition files and additional properties files. One of the generated files contains privilege information. The generated file can be registered as a source of metadata. </text>
            </paragraph>
            <paragraph>
              <text> The privilege file contains all the data present in the interface definition files. Each privilege file contains data about one component element. When a privilege file is added as a source, each source contributes only one component element's metadata. </text>
            </paragraph>
            <paragraph>
              <text> Privilege metadata can also be discovered from a remote server that supports the privilege metadata </text>
              <atTerm>services</atTerm>
              <text> (see </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege" pkg="true">com.vmware.vapi.metadata.privilege</atLink>
              <text>). Since multiple components can be registered with a single metadata server, when a remote server is registered as a source, that source can contribute more than one component.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Source} {@term service} provides {@term operations} to</text>
          <text>manage the sources of privilege metadata information.</text>
          <text>&lt;p&gt;</text>
          <text>The interface definition language infrastructure provides tools to</text>
          <text>generate various kinds of metadata in JSON format from the interface</text>
          <text>definition files and additional properties files. One of the generated</text>
          <text>files contains privilege information. The generated file can be</text>
          <text>registered as a source of metadata.</text>
          <text>&lt;p&gt;</text>
          <text>The privilege file contains all the data present in the interface</text>
          <text>definition files. Each privilege file contains data about one</text>
          <text>component element. When a privilege file is added as a source,</text>
          <text>each source contributes only one component element's metadata.</text>
          <text>&lt;p&gt;</text>
          <text>Privilege metadata can also be discovered from a remote server that</text>
          <text>supports the privilege metadata {@term services} (see</text>
          <text>{@link com.vmware.vapi.metadata.privilege}). Since multiple components</text>
          <text>can be registered with a single metadata server, when a remote server</text>
          <text>is registered as a source, that source can contribute more than one</text>
          <text>component.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.metadata.privilege.source</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for metadata source.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.metadata.privilege.source</value>
      </constant>
      <structure name="Info" namespace="com.vmware.vapi.metadata.privilege.Source" fingerprint="0c925dea80b76f6cce8c215d5cd9cd92774e77db">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.privilege.Source.Info" type="true" tag="name">Info</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the metadata source information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name Info} {@term structure} contains the metadata source</text>
            <text>information.</text>
          </description>
        </doc>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>English language human readable description of the source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>English language human readable description of the source.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="type">
          <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Type of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Type of the metadata source.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionTag" type="java.lang.Boolean">true</property>
          </metadata>
        </attribute>
        <attribute name="filepath">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Absolute file path of the privilege metadata file that has the privilege information about one component element. The </text>
                <atName unresolved="true" tag="name">filePath</atName>
                <text> is the path to the file in the server's filesystem.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.privilege.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#FILE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Absolute file path of the privilege metadata file that has</text>
              <text>the privilege information about one component element. The {@name filePath}</text>
              <text>is the path to the file in the server's filesystem.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">FILE</entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="address">
          <type primitive="URI"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Connection information for the remote server. This must be in the format http(s)://IP:port/namespace. </text>
                <paragraph>
                  <text> The remote server must support the </text>
                  <atTerm>services</atTerm>
                  <text> in the </text>
                  <atLink resolved="com.vmware.vapi.metadata.privilege" pkg="true">com.vmware.vapi.metadata.privilege</atLink>
                  <text> </text>
                  <atTerm>package</atTerm>
                  <text>. It must expose privilege information of one or more components.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.privilege.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#REMOTE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Connection information for the remote server. This must be</text>
              <text>in the format http(s)://IP:port/namespace.</text>
              <text>&lt;p&gt;</text>
              <text>The remote server must support the {@term services} in the</text>
              <text>{@link com.vmware.vapi.metadata.privilege} {@term package}.</text>
              <text>It must expose privilege information of one or more</text>
              <text>components.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">REMOTE</entry>
            </property>
          </metadata>
        </attribute>
      </structure>
      <structure name="CreateSpec" namespace="com.vmware.vapi.metadata.privilege.Source" fingerprint="a1c79970bd99befd1a4dc1410a302702ae86c314">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atName resolved="com.vmware.vapi.metadata.privilege.Source.CreateSpec" type="true" tag="name">CreateSpec</atName>
              <text> </text>
              <atTerm>structure</atTerm>
              <text> contains the registration information of a privilege source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@name CreateSpec} {@term structure} contains the registration</text>
            <text>information of a privilege source.</text>
          </description>
        </doc>
        <metadata>
          <property name="Include" type="com.vmware.vapi.idl.model.IdlReferenceType">
            <type reference="SourceCreateSpec" namespace="com.vmware.vapi.metadata" target="STRUCTURE" declaration="com.vmware.vapi.metadata.SourceCreateSpec"/>
          </property>
        </metadata>
      </structure>
      <operation name="create" fingerprint="84185349ca3f8c2a133afe34735834f90722b125">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Creates a new metadata source. Once the server validates the registration information of the metadata source, the privilege metadata is retrieved from the source. This populates elements in all the </text>
              <atTerm>services</atTerm>
              <text> defined in </text>
              <atLink resolved="com.vmware.vapi.metadata.privilege" pkg="true">com.vmware.vapi.metadata.privilege</atLink>
              <text> </text>
              <atTerm>package</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Creates a new metadata source. Once the server validates the registration</text>
            <text>information of the metadata source, the privilege metadata is retrieved</text>
            <text>from the source. This populates elements in all the {@term services}</text>
            <text>defined in {@link com.vmware.vapi.metadata.privilege} {@term package}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.privilege.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.privilege.source}.</text>
            </content>
          </doc>
        </parameter>
        <parameter name="spec">
          <type reference="CreateSpec" namespace="com.vmware.vapi.metadata.privilege.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.Source.CreateSpec"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>create specification.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>create specification.</text>
            </description>
          </doc>
        </parameter>
        <error name="AlreadyExists">
          <type reference="AlreadyExists" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.AlreadyExists"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source identifier is already registered with the infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source identifier is already</text>
              <text>registered with the infrastructure.</text>
            </description>
          </doc>
        </error>
        <error name="InvalidArgument">
          <type reference="InvalidArgument" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.InvalidArgument"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the type of the source specified in </text>
                <atLink unresolved="true">CreateSpec#type</atLink>
                <text> is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>if the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> is not a valid JSON file or if the format of the privilege metadata in the JSON file is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text>if the URI specified in </text>
                <atLink unresolved="true">CreateSpec#address</atLink>
                <text> is unreachable or if there is a transport protocol or message protocol mismatch between the client and the server or if the remote server do not have </text>
                <atTerm>services</atTerm>
                <text> present in </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege" pkg="true">com.vmware.vapi.metadata.privilege</atLink>
                <text> </text>
                <atTerm>package</atTerm>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the type of the source specified in {@link CreateSpec#type}</text>
              <text>is invalid.</text>
            </description>
            <description index="1">
              <text>if the file specified in {@link CreateSpec#filepath}</text>
              <text>is not a valid JSON file or if the format of the privilege</text>
              <text>metadata in the JSON file is invalid.</text>
            </description>
            <description index="2">
              <text>if the URI specified in {@link CreateSpec#address} is unreachable</text>
              <text>or if there is a transport protocol or message protocol mismatch</text>
              <text>between the client and the server or if the remote server do not</text>
              <text>have {@term services} present in {@link com.vmware.vapi.metadata.privilege}</text>
              <text>{@term package}.</text>
            </description>
          </doc>
        </error>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the file specified in </text>
                <atLink unresolved="true">CreateSpec#filepath</atLink>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the file specified in {@link CreateSpec#filepath}</text>
              <text>does not exist.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="delete" fingerprint="0c211ad04bf9f0ac47057e501fd156e61ed8a36a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Deletes an existing privilege metadata source from the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Deletes an existing privilege metadata source from the infrastructure.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.privilege.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.privilege.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.delete#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="get" fingerprint="1008ed88edc75b0a4e487f75e96d5714b7250ee7">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves information about the metadata source corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.get#sourceId">sourceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves information about the metadata source corresponding to</text>
            <text>{@param.name sourceId}.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.privilege.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.privilege.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.get#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.privilege.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.Source.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.Source.Info" type="true">Info</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.get#sourceId">sourceId</atParamName>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link Info} instance that corresponds to</text>
              <text>{@param.name sourceId}</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers of the metadata sources currently registered with the infrastructure.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers of the metadata sources currently registered</text>
            <text>with the infrastructure.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The list of identifiers for metadata sources currently registered.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.privilege.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>The list of identifiers for metadata sources currently</text>
              <text>registered.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.metadata.privilege.source}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="reload" fingerprint="dd2f555bea96f6dabcbcb9908d18841370640d5d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Reloads the privilege metadata from all the metadata sources or of a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.reload#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Reloads the privilege metadata from all the metadata sources or of a</text>
            <text>particular metadata source if {@param.name sourceId} is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, all the metadata sources are reloaded.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.privilege.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, all the metadata sources</text>
              <text>are reloaded.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.privilege.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.reload#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="fingerprint" fingerprint="02f14da221aab78a45513dc80b5cfb91987643e0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the aggregate fingerprint of metadata from all the metadata sources or from a particular metadata source if </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.fingerprint#sourceId">sourceId</atParamName>
              <text> is specified.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the aggregate fingerprint of metadata from all the metadata</text>
            <text>sources or from a particular metadata source if {@param.name sourceId}</text>
            <text>is specified.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>If unspecified, the fingerprint of all the metadata sources is returned.</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.privilege.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the metadata source.</text>
            </description>
            <content type="optionalReason">
              <text>If unspecified, the fingerprint of all the</text>
              <text>metadata sources is returned.</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.privilege.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the metadata source associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.Source.fingerprint#sourceId">sourceId</atParamName>
                <text> is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the metadata source associated with {@param.name sourceId}</text>
              <text>is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Aggregate fingerprint of all the metadata sources or of a particular metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Aggregate fingerprint of all the metadata sources or of a</text>
              <text>particular metadata source.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.privilege.service" fingerprint="027b7e01fe9143b27b998814dcaa38a24825b13a">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.metadata.privilege.service" pkg="true" tag="name">com.vmware.vapi.metadata.privilege.service</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> to retrieve privilege information for operation elements.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.metadata.privilege.service} {@term package} provides</text>
        <text>{@term services} to retrieve privilege information for operation elements.</text>
      </description>
    </doc>
    <service name="Operation" namespace="com.vmware.vapi.metadata.privilege.service" fingerprint="c62c09be6f15b03317cee6b93cb81b5cf8be058e">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.metadata.privilege.service.Operation" type="true" tag="name">Operation</atName>
            <text> </text>
            <atTerm>service</atTerm>
            <text> provides </text>
            <atTerm>operations</atTerm>
            <text> to retrieve privilege information of an operation element. </text>
            <paragraph>
              <text> An operation element is said to contain privilege information if there are any privileges assigned to the operation element or if one of the parameter elements contained in it has privileges assigned in privilege definition file.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Operation} {@term service} provides {@term operations}</text>
          <text>to retrieve privilege information of an operation element.</text>
          <text>&lt;p&gt;</text>
          <text>An operation element is said to contain privilege information if</text>
          <text>there are any privileges assigned to the operation element or if</text>
          <text>one of the parameter elements contained in it has privileges</text>
          <text>assigned in privilege definition file.</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for operation.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for operation.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.operation</value>
      </constant>
      <operation name="list" fingerprint="a2b0374a605f9cc8163eedb157fa2ee3bbc9519a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the identifiers for the operation elements contained in the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.list#serviceId">serviceId</atParamName>
              <text> that have privilege information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the identifiers for the operation elements contained in the service</text>
            <text>element corresponding to {@param.name serviceId} that have privilege</text>
            <text>information.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.list#serviceId">serviceId</atParamName>
                <text> does not have any operation elements that have privilege information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId}</text>
              <text>does not have any operation elements that have privilege</text>
              <text>information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>List of identifiers for the operation elements contained in the service element that have privilege information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>List of identifiers for the operation elements contained in the</text>
              <text>service element that have privilege information.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="a185de2cedc56050ac27e427fea2200036d7868d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Retrieves the privilege information about an operation element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.get#operationId">operationId</atParamName>
              <text> contained in the service element corresponding to </text>
              <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.get#serviceId">serviceId</atParamName>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Retrieves the privilege information about an operation element</text>
            <text>corresponding to {@param.name operationId} contained in the service element</text>
            <text>corresponding to {@param.name serviceId}.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <parameter name="operationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the operation element.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the operation element.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>if the service element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.get#serviceId">serviceId</atParamName>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>if the operation element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.get#operationId">operationId</atParamName>
                <text> does not exist.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text>if the operation element associated with </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.get#operationId">operationId</atParamName>
                <text> does not have any privilege information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>if the service element associated with {@param.name serviceId} does not</text>
              <text>exist.</text>
            </description>
            <description index="1">
              <text>if the operation element associated with {@param.name operationId} does not</text>
              <text>exist.</text>
            </description>
            <description index="2">
              <text>if the operation element associated with {@param.name operationId} does not have</text>
              <text>any privilege information.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.privilege" target="STRUCTURE" declaration="com.vmware.vapi.metadata.privilege.OperationInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.metadata.privilege.OperationInfo" type="true">com.vmware.vapi.metadata.privilege.OperationInfo</atLink>
                <text> instance that corresponds to </text>
                <atParamName resolved="com.vmware.vapi.metadata.privilege.service.Operation.get#operationId">operationId</atParamName>
                <text>.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link com.vmware.vapi.metadata.privilege.OperationInfo} instance</text>
              <text>that corresponds to {@param.name operationId}.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.routing" fingerprint="c94812cde9153df9a1ee4a79e9fca137d0506015">
    <structure name="ComponentData" namespace="com.vmware.vapi.metadata.routing" fingerprint="e4daeb95208ca34ff1e7ff5cc3be161804cc3da4">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Routing information of the vAPI component along with its checksum</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Routing information of the vAPI component along with its checksum</text>
        </description>
      </doc>
      <attribute name="info">
        <type reference="ComponentInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.ComponentInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Routing information of the vAPI component</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Routing information of the vAPI component</text>
          </description>
        </doc>
      </attribute>
      <attribute name="fingerprint">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Fingerprint of metadata of a vAPI component</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Fingerprint of metadata of a vAPI component</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ComponentInfo" namespace="com.vmware.vapi.metadata.routing" fingerprint="b3d10b372ab46e9e3d1988eefe681128c958d27f">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Information about a vAPI component that contains routing information For an explanation of routing information within components, see </text>
            <atLink resolved="com.vmware.vapi.metadata.routing.Component" type="true">com.vmware.vapi.metadata.routing.Component</atLink>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Information about a vAPI component that contains routing information</text>
          <text>For an explanation of routing information within components, see</text>
          <text>{@link com.vmware.vapi.metadata.routing.Component}</text>
        </description>
      </doc>
      <attribute name="packages">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.PackageInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Routing information of all the vAPI packages. The key in the map is the ID of the package and the value in the map is the routing information for the package For an explanation of routing information within packages, see </text>
              <atLink resolved="com.vmware.vapi.metadata.routing.Package" type="true">com.vmware.vapi.metadata.routing.Package</atLink>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.package</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Routing information of all the vAPI packages. The key in the map is the</text>
            <text>ID of the package and the value in the map is the routing information for</text>
            <text>the package</text>
            <text>For an explanation of routing information within packages, see</text>
            <text>{@link com.vmware.vapi.metadata.routing.Package}</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="OperationInfo" namespace="com.vmware.vapi.metadata.routing" fingerprint="93e4f2b8105272cfd2b5f7c6b5ac7222baa31ee3">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Information about a vAPI operation that contains routing information. For an explanation of containment within operations, see </text>
            <atLink unresolved="true">com.vmware.vapi.metadata.routing.Operation</atLink>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Information about a vAPI operation that contains routing information.</text>
          <text>For an explanation of containment within operations, see</text>
          <text>{@link com.vmware.vapi.metadata.routing.Operation}</text>
        </description>
      </doc>
      <attribute name="routingInfo">
        <type reference="RoutingInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.RoutingInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The routing information assigned for this operation. For an explanation of routing information, see </text>
              <atLink resolved="com.vmware.vapi.metadata.routing.RoutingInfo" type="true">com.vmware.vapi.metadata.routing.RoutingInfo</atLink>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The routing information assigned for this operation.</text>
            <text>For an explanation of routing information, see</text>
            <text>{@link com.vmware.vapi.metadata.routing.RoutingInfo}</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="PackageInfo" namespace="com.vmware.vapi.metadata.routing" fingerprint="af21f6c62b3d2504bf25815f43d7ba3ccca9632d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Information about a vAPI package containing routing information. </text>
            <paragraph>
              <text> For an explanation of routing information within packages, see </text>
              <atLink resolved="com.vmware.vapi.metadata.routing.Package" type="true">com.vmware.vapi.metadata.routing.Package</atLink>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Information about a vAPI package containing routing information.</text>
          <text>&lt;p&gt;</text>
          <text>For an explanation of routing information within packages, see</text>
          <text>{@link com.vmware.vapi.metadata.routing.Package}</text>
        </description>
      </doc>
      <attribute name="routingInfo">
        <type reference="RoutingInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.RoutingInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The routing information to be used for all the operations present in this package. If a particular operation has no explicit routing information defined in the routing definition file, this routing info will be used for enforcing routing.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The routing information to be used for all the operations present in this</text>
            <text>package. If a particular operation has no explicit routing information</text>
            <text>defined in the routing definition file, this routing info will be used</text>
            <text>for enforcing routing.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="services">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.ServiceInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about all services in this package that contain routing information. The key in the map is the ID of the service and the value in the map is the routing information for the service For an explanation of routing information within service, see </text>
              <atLink resolved="com.vmware.vapi.metadata.routing.Service" type="true">com.vmware.vapi.metadata.routing.Service</atLink>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.service</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Information about all services in this package that contain routing</text>
            <text>information. The key in the map is the ID of the service and the value in</text>
            <text>the map is the routing information for the service</text>
            <text>For an explanation of routing information within service, see</text>
            <text>{@link com.vmware.vapi.metadata.routing.Service}</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
        </metadata>
      </attribute>
    </structure>
    <structure name="RoutingInfo" namespace="com.vmware.vapi.metadata.routing" fingerprint="b45bb42289e7034c8e2eb469e1996d888be75da0">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Routing information</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Routing information</text>
        </description>
      </doc>
      <attribute name="routingPath">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The initial version of the routing info allowed routing by single parameter. Clients requested allowing them to place more than one parameters so that the routing is performed by the first non-null argument in the list. To achieve that we have added method com.vmware.vapi.metadata.RoutingInfo#getRoutingPaths() which should be preferred over com.vmware.vapi.metadata.RoutingInfo#getRoutingPath() which is deprecated. The deprecated method will return string representation of the comma-separated list of ids, while the com.vmware.vapi.metadata.RoutingInfo#getRoutingPaths() will return instance of </text>
              <atCode>java.util.List&lt;String&gt;</atCode>
              <text> containing the ids.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The initial version of the routing info allowed routing by single</text>
            <text>parameter. Clients requested allowing them to place more than one</text>
            <text>parameters so that the routing is performed by the first non-null</text>
            <text>argument in the list. To achieve that we have added method</text>
            <text>com.vmware.vapi.metadata.RoutingInfo#getRoutingPaths() which should be</text>
            <text>preferred over com.vmware.vapi.metadata.RoutingInfo#getRoutingPath()</text>
            <text>which is deprecated. The deprecated method will return string</text>
            <text>representation of the comma-separated list of ids, while the</text>
            <text>com.vmware.vapi.metadata.RoutingInfo#getRoutingPaths() will return</text>
            <text>instance of {@code java.util.List&lt;String&gt;} containing the ids.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="routingStrategy">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The routingStrategy is the actual strategy, based on which will be performed the routing. If the routingStrategy is IDROUTE, in </text>
              <atLink resolved="com.vmware.vapi.metadata.routing.RoutingInfo.routingPath" member="true">RoutingInfo#routingPath</atLink>
              <text> must be assigned the id for the routing. There are also default strategies like IDFIRSTROUTE, LOCAL for which there is no need to specify routingPath. The name of these strategies is clear about where we should look for an ID to route, or if we need ID at all.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The routingStrategy is the actual strategy, based on which will be</text>
            <text>performed the routing. If the routingStrategy is IDROUTE, in</text>
            <text>{@link RoutingInfo#routingPath} must be assigned the id for the routing.</text>
            <text>There are also default strategies like IDFIRSTROUTE, LOCAL for which</text>
            <text>there is no need to specify routingPath. The name of these strategies is</text>
            <text>clear about where we should look for an ID to route, or if we need ID at</text>
            <text>all.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="operationHints">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>This is comma-separated list of hints from the input ini file. Here the user must mention the type of the invoked method, e.g. HINTS(create) or HINTS(delete). In the future we expect this field to contain other hints also e.g. HINTS(create,lazy).</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>This is comma-separated list of hints from the input ini file. Here the user</text>
            <text>must mention the type of the invoked method, e.g. HINTS(create) or HINTS(delete).</text>
            <text>In the future we expect this field to contain other hints also</text>
            <text>e.g. HINTS(create,lazy).</text>
          </description>
        </doc>
      </attribute>
      <attribute name="idTypes">
        <type generic="Map">
          <type primitive="String"/>
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>This is map of specifically predefined resource types in the routing metadata. For example id types that do not require storage in the Inventory Service. Those type of objects are called 'positioned' - it is well known in advance where those objects will be routed, because their ids contain VC server guid. Example: Content Library Sessions are considered transient objects that do not need to be persisted in the IS. Routing ini file must contain section: [types] com.vmware.content.DownloadSession=positioned The map therefore will contain: {{"com.vmware.content.DownloadSession", "positioned"}} Note: This should not be final solution. To avoid duplication, currently this map will be stored only in one RoutingInfo object across the whole ProductModel. In the future, it might be moved to a common place as ComponentInfo, for example.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>This is map of specifically predefined resource types</text>
            <text>in the routing metadata.</text>
            <text>For example id types that do not require storage in the Inventory Service.</text>
            <text>Those type of objects are called 'positioned' - it is well</text>
            <text>known in advance where those objects will be routed, because their ids contain</text>
            <text>VC server guid.</text>
            <text>Example: Content Library Sessions are considered transient objects that do not</text>
            <text>need to be persisted in the IS.</text>
            <text>Routing ini file must contain section:</text>
            <text>[types]</text>
            <text>com.vmware.content.DownloadSession=positioned</text>
            <text>The map therefore will contain:</text>
            <text>{{"com.vmware.content.DownloadSession", "positioned"}}</text>
            <text>Note: This should not be final solution. To avoid duplication, currently this</text>
            <text>map will be stored only in one RoutingInfo object across the whole</text>
            <text>ProductModel. In the future, it might be moved to a common place as</text>
            <text>ComponentInfo, for example.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="ServiceInfo" namespace="com.vmware.vapi.metadata.routing" fingerprint="f5e0e9fe53ae7c87d7a28321989f4bd9b77da1e2">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Information about a vAPI service that has routing information A service is said to contain routing information if any of its operations have routing information</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Information about a vAPI service that has routing information</text>
          <text>A service is said to contain routing information if any of its operations</text>
          <text>have routing information</text>
        </description>
      </doc>
      <attribute name="routingInfo">
        <type reference="RoutingInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.RoutingInfo"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The routing information to be used for all the operations present in this service. If a particular operation has no explicit routing information defined in the routing definition file, this routing info will be used for enforcing routing.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The routing information to be used for all the operations present in this</text>
            <text>service. If a particular operation has no explicit routing information</text>
            <text>defined in the routing definition file, this routing info will be used</text>
            <text>for enforcing routing.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="operations">
        <type generic="Map">
          <type primitive="ID"/>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.OperationInfo"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about all operations in this service that contain routing Information. The key in the map is the ID of the operation and the value in the map is the routing information for this operation. </text>
              <paragraph>
                <text> For an explanation of routing information within operations, see </text>
                <atLink unresolved="true">com.vmware.vapi.metadata.routing.Operation</atLink>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> must be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the key in the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atTerm>map</atTerm>
              <text> will be an identifier for the resource type: </text>
              <atCode>com.vmware.vapi.operation</atCode>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Information about all operations in this service that contain routing</text>
            <text>Information. The key in the map is the ID of the operation and the value</text>
            <text>in the map is the routing information for this operation.</text>
            <text>&lt;p&gt;</text>
            <text>For an explanation of routing information within operations, see</text>
            <text>{@link com.vmware.vapi.metadata.routing.Operation}</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the key in the {@term field} {@term map} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the key in the {@term field} {@term map} will be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
        </metadata>
      </attribute>
    </structure>
    <service name="Component" namespace="com.vmware.vapi.metadata.routing" fingerprint="7ee5b12c9acc20affa7eb5e43826b0620387dd3c">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Operations to retrieve information about the routing information in a vAPI component. A Component is said to contain routing information if any of its packages, services or methods contain routing information</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Operations to retrieve information about the routing information in a vAPI</text>
          <text>component.</text>
          <text>A Component is said to contain routing information if any of its packages,</text>
          <text>services or methods contain routing information</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.component</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for vAPI Component.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for vAPI Component.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.component</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List all the vAPI components that contain operations which have routing information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List all the vAPI components that contain operations which have routing</text>
            <text>information.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>list of fully qualified component names</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>list of fully qualified component names</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="58e32bd0af613fa646d3af8a372384eaa72e2517">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get the routing information for a vAPI component</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get the routing information for a vAPI component</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> fully qualified component name</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>fully qualified component name</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the component name does not exist</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the component name does not exist</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ComponentData" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.ComponentData"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>routing information for the vAPI component</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>routing information for the vAPI component</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="fingerprint" fingerprint="a95f96ea304f419f7ab585c089e23350d3275608">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Checksum of all routing metadata for a vAPI component on the server</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Checksum of all routing metadata for a vAPI component on the server</text>
          </description>
        </doc>
        <parameter name="componentId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> fully qualified component name</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.component</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>fully qualified component name</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.component}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the component name does not exist</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the component name does not exist</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>checksum of routing metadata for a vAPI component</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>checksum of routing metadata for a vAPI component</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Package" namespace="com.vmware.vapi.metadata.routing" fingerprint="dbfe316df115d3d8fe80247858e58e9227405cda">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Operations to retrieve information about routing information in a vAPI package A Package is said to contain routing information if there is a default RoutingInfo assigned to all operations within a package or if one of the operations within this package has explicit routing information</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Operations to retrieve information about routing information in a vAPI</text>
          <text>package</text>
          <text>A Package is said to contain routing information if there is a default</text>
          <text>RoutingInfo assigned to all operations within a package or if one of the</text>
          <text>operations within this package has explicit routing information</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.package</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for vAPI package.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for vAPI package.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.package</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List of all vAPI packages that have routing information</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List of all vAPI packages that have routing information</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>list of fully qualified package names</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>list of fully qualified package names</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="25cee4ebc039a2fdf41c5e75302219d14ded555a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get the routing information for a vAPI package</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get the routing information for a vAPI package</text>
          </description>
        </doc>
        <parameter name="packageId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>fully qualified package name</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.package</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>fully qualified package name</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.package}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the package name does not exist</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the package name does not exist</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="PackageInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.PackageInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>routing information for the vAPI package</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>routing information for the vAPI package</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Service" namespace="com.vmware.vapi.metadata.routing" fingerprint="a2b51ed332ad96df924a623517d709ab4e6486d7">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Operations to retrieve information about routing information of a vAPI service</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Operations to retrieve information about routing information of a vAPI</text>
          <text>service</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for vAPI Service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for vAPI Service.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.service</value>
      </constant>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get list of all vAPI services that have operations with routing information</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get list of all vAPI services that have operations with routing</text>
            <text>information</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>list of fully qualified service names</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>list of fully qualified service names</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="cb172ef5727489a4271bb2729e57dc32cee35a4c">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get the routing information for a vAPI service</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get the routing information for a vAPI service</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>fully qualified service name</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>fully qualified service name</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the service name does not exist</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the service name does not exist</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="ServiceInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.ServiceInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>identifier information for the vAPI service</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>identifier information for the vAPI service</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Source" namespace="com.vmware.vapi.metadata.routing" fingerprint="bc50be9332b87daae3e58d06855c6c230ba3b670">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Operations to manage the metadata sources for routing information</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Operations to manage the metadata sources for routing information</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.metadata.source</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for vAPI metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for vAPI metadata source.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.metadata.source</value>
      </constant>
      <structure name="Info" namespace="com.vmware.vapi.metadata.routing.Source" fingerprint="d1e94b8300a7aea117cc62ecdb811d4d27be3904">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metadata source info.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metadata source info.</text>
          </description>
        </doc>
        <attribute name="description">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Description of the source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Description of the source.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="type">
          <type reference="SourceType" namespace="com.vmware.vapi.metadata" target="ENUMERATION" declaration="com.vmware.vapi.metadata.SourceType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Type of the metadata source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Type of the metadata source.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionTag" type="java.lang.Boolean">true</property>
          </metadata>
        </attribute>
        <attribute name="filepath">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Absolute file path of the file that has the metadata information.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.routing.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#FILE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Absolute file path of the file that has the metadata information.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">FILE</entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="address">
          <type primitive="URI"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>URI of the remote vAPI endpoint. This should be of the format http(s):IP:port/namespace.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.metadata.routing.Source.Info.type" member="true" tag="name">#type</atName>
                <text> is </text>
                <atLink unresolved="true">SourceType#REMOTE</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>URI of the remote vAPI endpoint. This should be of the format</text>
              <text>http(s):IP:port/namespace.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.lang.String">REMOTE</entry>
            </property>
          </metadata>
        </attribute>
      </structure>
      <structure name="CreateSpec" namespace="com.vmware.vapi.metadata.routing.Source" fingerprint="0f92d1c74b8056f9c5bf919888de17288d7b6902">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Metadata source create spec.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Metadata source create spec.</text>
          </description>
        </doc>
        <metadata>
          <property name="Include" type="com.vmware.vapi.idl.model.IdlReferenceType">
            <type reference="SourceCreateSpec" namespace="com.vmware.vapi.metadata" target="STRUCTURE" declaration="com.vmware.vapi.metadata.SourceCreateSpec"/>
          </property>
        </metadata>
      </structure>
      <operation name="create" fingerprint="a91e684bdbc1071c1ebe29c8a99ba633d0bf3e8a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Create a new metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Create a new metadata source.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <parameter name="spec">
          <type reference="CreateSpec" namespace="com.vmware.vapi.metadata.routing.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.Source.CreateSpec"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> create specification.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>create specification.</text>
            </description>
          </doc>
        </parameter>
        <error name="AlreadyExists">
          <type reference="AlreadyExists" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.AlreadyExists"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the metadata source identifier is already present.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the metadata source identifier is already present.</text>
            </description>
          </doc>
        </error>
        <error name="InvalidArgument">
          <type reference="InvalidArgument" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.InvalidArgument"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If type of the source specified in @{link CreateSpec#type} is invalid.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text> If the file specified in @{link CreateSpec#filepath} is not a valid json file.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="2">
              <docModel>
                <text> If the URI specified in @{link CreateSpec#address} is unreachable or not a vAPI compatible server.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If type of the source specified in @{link CreateSpec#type} is</text>
              <text>invalid.</text>
            </description>
            <description index="1">
              <text/>
              <text>If the file specified in @{link CreateSpec#filepath} is not a</text>
              <text>valid json file.</text>
            </description>
            <description index="2">
              <text/>
              <text>If the URI specified in @{link CreateSpec#address} is</text>
              <text>unreachable or not a vAPI compatible server.</text>
            </description>
          </doc>
        </error>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the file specified in @{link CreateSpec#filepath} does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the file specified in @{link CreateSpec#filepath} does not</text>
              <text>exist.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="delete" fingerprint="0c211ad04bf9f0ac47057e501fd156e61ed8a36a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Delete a metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Delete a metadata source.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> Metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>Metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="get" fingerprint="4eeecc1af281c67a65f12758e03732766df14c9b">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get the details about a metadata source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get the details about a metadata source.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> Metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>Metadata source identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.metadata.routing.Source" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.Source.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Metadata source info.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Metadata source info.</text>
            </description>
          </doc>
        </result>
      </operation>
      <operation name="list" fingerprint="b3ed6fb7bd19a87530dcb8a247ffb173e32198e6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>List all the metadata sources.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>List all the metadata sources.</text>
          </description>
        </doc>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>List of all metadata sources.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>List of all metadata sources.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="reload" fingerprint="dd2f555bea96f6dabcbcb9908d18841370640d5d">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Reload metadata from all the sources or of a particular source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Reload metadata from all the sources or of a particular source.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> Metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text> If unspecified, all the sources are reloaded</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>Metadata source identifier.</text>
            </description>
            <content type="optionalReason">
              <text/>
              <text>If unspecified, all the sources are reloaded</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
      <operation name="fingerprint" fingerprint="02f14da221aab78a45513dc80b5cfb91987643e0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the fingerprint of all the sources or of a particular source.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the fingerprint of all the sources or of a particular source.</text>
          </description>
        </doc>
        <parameter name="sourceId">
          <type generic="Optional">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> Metadata source identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text> If unspecified, fingerprint of all the sources is returned</text>
              </docModel>
            </contentModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.metadata.source</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text/>
              <text>Metadata source identifier.</text>
            </description>
            <content type="optionalReason">
              <text/>
              <text>If unspecified, fingerprint of all the sources is returned</text>
            </content>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.metadata.source}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text> If the metadata source identifier is not found.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text/>
              <text>If the metadata source identifier is not found.</text>
            </description>
          </doc>
        </error>
        <result>
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>fingerprint of all the sources or of a particular source.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>fingerprint of all the sources or of a particular source.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.metadata.routing.service" fingerprint="da5d2d057cc5da6fdf31b5c999fe1a9fbb1bd965">
    <service name="Operation" namespace="com.vmware.vapi.metadata.routing.service" fingerprint="88d53ea28d4e10fcda4377f5f22d4a3f0b006ef6">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Operations to retrieve information about routing in a vAPI operation</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Operations to retrieve information about routing in a vAPI operation</text>
        </description>
      </doc>
      <metadata>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
      </metadata>
      <constant name="RESOURCE_TYPE">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Resource type for vAPI operation.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Resource type for vAPI operation.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.operation</value>
      </constant>
      <operation name="list" fingerprint="a2b0374a605f9cc8163eedb157fa2ee3bbc9519a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get the IDs of all the vAPI operations in the given service that contain routing information</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get the IDs of all the vAPI operations in the given service that contain</text>
            <text>routing information</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the service identifier does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the service identifier does not exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="List">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>list of operation identifiers</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>list of operation identifiers</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="428036ada4b1830a7aaf76a0f6f22f76786eecaf">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Get information about a vAPI operation that contains routing information</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Get information about a vAPI operation that contains routing information</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the service</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the service</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <parameter name="operationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the operation</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the operation</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the service identifier does not exist or if the specified operation identifier does not exist in the service.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the service identifier does not exist or if the specified</text>
              <text>operation identifier does not exist in the service.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="OperationInfo" namespace="com.vmware.vapi.metadata.routing" target="STRUCTURE" declaration="com.vmware.vapi.metadata.routing.OperationInfo"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Operation info for the vAPI operation that contains routing information.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Operation info for the vAPI operation that contains routing</text>
              <text>information.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi" fingerprint="0a414640deeb2203142decb091c303fe3cab089a">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi" pkg="true" tag="name">com.vmware.vapi</atName>
          <text> </text>
          <atTerm>component</atTerm>
          <text> provides API infrastructure </text>
          <atTerm>services</atTerm>
          <text> and standard types that can be used in the interface specification of any </text>
          <atTerm>service</atTerm>
          <text>.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi} {@term component} provides API infrastructure</text>
        <text>{@term services} and standard types that can be used in the interface</text>
        <text>specification of any {@term service}.</text>
      </description>
    </doc>
    <metadata>
      <property name="Component" type="java.lang.Boolean">true</property>
    </metadata>
  </package>
  <package name="com.vmware.vapi.std" fingerprint="07414ffe7ee67adcec4336019788a7fedbcb6d8c">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.std" pkg="true" tag="name">com.vmware.vapi.std</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides standard types that can be used in the interface specification of any </text>
          <atTerm>service</atTerm>
          <text>.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.std} {@term package} provides standard</text>
        <text>types that can be used in the interface specification of any {@term service}.</text>
      </description>
    </doc>
    <structure name="AuthenticationScheme" namespace="com.vmware.vapi.std" fingerprint="67034b66ab561720478b138f680c225e233d0a4d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atLink resolved="com.vmware.vapi.std.AuthenticationScheme" type="true">AuthenticationScheme</atLink>
            <text> class defines constants for authentication scheme identifiers for authentication mechanisms present in the vAPI infrastructure shipped by VMware. </text>
            <paragraph>
              <text> A third party extension can define and implements it's own authentication mechanism and define a constant in a different IDL file.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@link AuthenticationScheme} class defines constants for authentication</text>
          <text>scheme identifiers for authentication mechanisms present in the vAPI infrastructure</text>
          <text>shipped by VMware.</text>
          <text>&lt;p&gt;</text>
          <text>A third party extension can define and implements it's own</text>
          <text>authentication mechanism and define a constant in a different IDL file.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <constant name="NO_AUTHENTICATION">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the request doesn't need any authentication.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the request doesn't need any authentication.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.std.security.no_authentication</value>
      </constant>
      <constant name="SAML_BEARER_TOKEN">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the security context in a request is using a SAML bearer token based authentication scheme. </text>
              <paragraph>
                <text> In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: </text>
              </paragraph>
              <ul>
                <text> </text>
                <li>
                  <text>The scheme identifier: com.vmware.vapi.std.security.saml_bearer_token</text>
                </li>
                <text> </text>
                <li>
                  <text>The token itself</text>
                </li>
                <text> </text>
              </ul>
              <text> </text>
              <paragraph>
                <text> Sample security context in JSON format that matches the specification: </text>
                <atCode>{
'schemeId': 'com.vmware.vapi.std.security.saml_bearer_token',
'token': 'the token itself'
}</atCode>
                <text> vAPI runtime provide convenient factory methods that take SAML bearer token and to create the security context that conforms to the above mentioned format.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the security context in a request is using a SAML bearer</text>
            <text>token based authentication scheme.</text>
            <text>&lt;p&gt;</text>
            <text>In this scheme, the following pieces of information</text>
            <text>has to be passed in the SecurityContext structure in the</text>
            <text>execution context of the request:</text>
            <text>&lt;ul&gt;</text>
            <text>&lt;li&gt;The scheme identifier: com.vmware.vapi.std.security.saml_bearer_token&lt;/li&gt;</text>
            <text>&lt;li&gt;The token itself&lt;/li&gt;</text>
            <text>&lt;/ul&gt;</text>
            <text>&lt;p&gt;</text>
            <text>Sample security context in JSON format that matches the specification:</text>
            <text>{@code</text>
            <text>{</text>
            <text>'schemeId': 'com.vmware.vapi.std.security.saml_bearer_token',</text>
            <text>'token': 'the token itself'</text>
            <text>}</text>
            <text>}</text>
            <text>vAPI runtime provide convenient factory methods that take SAML bearer token</text>
            <text>and to create the security context that conforms to the above mentioned format.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.std.security.saml_bearer_token</value>
      </constant>
      <constant name="SAML_HOK_TOKEN">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the security context in a request is using a SAML holder-of-key token based authentication scheme. </text>
              <paragraph>
                <text> In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: </text>
              </paragraph>
              <ul>
                <text> </text>
                <li>
                  <text>The scheme identifier: com.vmware.vapi.std.security.saml_hok_token</text>
                </li>
                <text> </text>
                <li>
                  <text>Signature of the request: This includes - algorithm used for signing the request, SAML holder of key token and signature digest </text>
                </li>
                <text> </text>
                <li>
                  <text>Request timestamp: This includes the </text>
                  <atCode>created</atCode>
                  <text> and </text>
                  <atCode>expires</atCode>
                  <text> timestamp of the request. The timestamp should match the following format - YYYY-MM-DDThh:mm:ss.sssZ (e.g. 1878-03-03T19:20:30.451Z). </text>
                </li>
              </ul>
              <text> </text>
              <paragraph>
                <text> Sample security context in JSON format that matches the specification: </text>
                <atCode>{
'schemeId': 'com.vmware.vapi.std.security.saml_hok_token',
'signature': {
'alg': 'RS256',
'samlToken': ...,
'value': ...,</atCode>
                <text>, 'timestamp': { 'created': '2012-10-26T12:24:18.941Z', 'expires': '2012-10-26T12:44:18.941Z', } } } vAPI runtime provide convenient factory methods that take SAML holder of key token and private key to create the security context that conforms to the above mentioned format.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the security context in a request is using a SAML</text>
            <text>holder-of-key token based authentication scheme.</text>
            <text>&lt;p&gt;</text>
            <text>In this scheme, the following pieces of information</text>
            <text>has to be passed in the SecurityContext structure in the</text>
            <text>execution context of the request:</text>
            <text>&lt;ul&gt;</text>
            <text>&lt;li&gt;The scheme identifier: com.vmware.vapi.std.security.saml_hok_token&lt;/li&gt;</text>
            <text>&lt;li&gt;Signature of the request: This includes - algorithm used for signing</text>
            <text>the request, SAML holder of key token and signature digest &lt;/li&gt;</text>
            <text>&lt;li&gt;Request timestamp: This includes the {@code created} and {@code expires}</text>
            <text>timestamp of the request. The timestamp should match the following</text>
            <text>format - YYYY-MM-DDThh:mm:ss.sssZ (e.g. 1878-03-03T19:20:30.451Z).</text>
            <text>&lt;/ul&gt;</text>
            <text>&lt;p&gt;</text>
            <text>Sample security context in JSON format that matches the specification:</text>
            <text>{@code</text>
            <text>{</text>
            <text>'schemeId': 'com.vmware.vapi.std.security.saml_hok_token',</text>
            <text>'signature': {</text>
            <text>'alg': 'RS256',</text>
            <text>'samlToken': ...,</text>
            <text>'value': ...,</text>
            <text>},</text>
            <text>'timestamp': {</text>
            <text>'created': '2012-10-26T12:24:18.941Z',</text>
            <text>'expires': '2012-10-26T12:44:18.941Z',</text>
            <text>}</text>
            <text>}</text>
            <text>}</text>
            <text>vAPI runtime provide convenient factory methods that take SAML holder of key token</text>
            <text>and private key to create the security context that conforms to the above</text>
            <text>mentioned format.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.std.security.saml_hok_token</value>
      </constant>
      <constant name="SESSION_ID">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the security context in a request is using a session identifier based authentication scheme. </text>
              <paragraph>
                <text> In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: </text>
              </paragraph>
              <ul>
                <text> </text>
                <li>
                  <text>The scheme identifier - com.vmware.vapi.std.security.session_id</text>
                </li>
                <text> </text>
                <li>
                  <text>Valid session identifier - This is usually returned by a login method of a session manager interface for a particular vAPI service of this authentication scheme</text>
                </li>
                <text> </text>
              </ul>
              <text> Sample security context in JSON format that matches the specification: </text>
              <atCode>{
'schemeId': 'com.vmware.vapi.std.security.session_id',
'sessionId': ....,
}</atCode>
              <text> vAPI runtime provides convenient factory methods that take session identifier as input parameter and create a security context that conforms to the above format.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the security context in a request is using a session</text>
            <text>identifier based authentication scheme.</text>
            <text>&lt;p&gt;</text>
            <text>In this scheme, the following pieces of information</text>
            <text>has to be passed in the SecurityContext structure in the</text>
            <text>execution context of the request:</text>
            <text>&lt;ul&gt;</text>
            <text>&lt;li&gt;The scheme identifier - com.vmware.vapi.std.security.session_id&lt;/li&gt;</text>
            <text>&lt;li&gt;Valid session identifier - This is usually returned by a login</text>
            <text>method of a session manager interface for a particular vAPI service</text>
            <text>of this authentication scheme&lt;/li&gt;</text>
            <text>&lt;/ul&gt;</text>
            <text>Sample security context in JSON format that matches the specification:</text>
            <text>{@code</text>
            <text>{</text>
            <text>'schemeId': 'com.vmware.vapi.std.security.session_id',</text>
            <text>'sessionId': ....,</text>
            <text>}</text>
            <text>}</text>
            <text>vAPI runtime provides convenient factory methods that take session identifier</text>
            <text>as input parameter and create a security context that conforms to the above</text>
            <text>format.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.std.security.session_id</value>
      </constant>
      <constant name="USER_PASSWORD">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the security context in a request is using username/password based authentication scheme. </text>
              <paragraph>
                <text> In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: </text>
              </paragraph>
              <ul>
                <text> </text>
                <li>
                  <text>The scheme identifier - com.vmware.vapi.std.security.user_pass</text>
                </li>
                <text> </text>
                <li>
                  <text>Username</text>
                </li>
                <text> </text>
                <li>
                  <text>Password</text>
                </li>
                <text> </text>
              </ul>
              <text> </text>
              <paragraph>
                <text> Sample security context in JSON format that matches the specification: </text>
                <atCode>{
'schemeId': 'com.vmware.vapi.std.security.user_pass',
'userName': ....,
'password': ...
}</atCode>
                <text> </text>
                <breakline/>
                <text> vAPI runtime provides convenient factory methods that take username and password as input parameters and create a security context that conforms to the above format.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the security context in a request is using username/password</text>
            <text>based authentication scheme.</text>
            <text>&lt;p&gt;</text>
            <text>In this scheme, the following pieces of information</text>
            <text>has to be passed in the SecurityContext structure in the</text>
            <text>execution context of the request:</text>
            <text>&lt;ul&gt;</text>
            <text>&lt;li&gt;The scheme identifier - com.vmware.vapi.std.security.user_pass&lt;/li&gt;</text>
            <text>&lt;li&gt;Username&lt;/li&gt;</text>
            <text>&lt;li&gt;Password&lt;/li&gt;</text>
            <text>&lt;/ul&gt;</text>
            <text>&lt;p&gt;</text>
            <text>Sample security context in JSON format that matches the specification:</text>
            <text>{@code</text>
            <text>{</text>
            <text>'schemeId': 'com.vmware.vapi.std.security.user_pass',</text>
            <text>'userName': ....,</text>
            <text>'password': ...</text>
            <text>}</text>
            <text>}</text>
            <text>&lt;br&gt;</text>
            <text>vAPI runtime provides convenient factory methods that take username and password</text>
            <text>as input parameters and create a security context that conforms to the above</text>
            <text>format.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.std.security.user_pass</value>
      </constant>
      <constant name="OAUTH_ACCESS_TOKEN">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the security context in a request is using OAuth2 based authentication scheme. </text>
              <paragraph>
                <text> In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: </text>
              </paragraph>
              <ul>
                <text> </text>
                <li>
                  <text>The scheme identifier - com.vmware.vapi.std.security.oauth</text>
                </li>
                <text> </text>
                <li>
                  <text>Valid OAuth2 access token - This is usually acquired by OAuth2 Authorization Server after successful authentication of the end user.</text>
                </li>
                <text> </text>
              </ul>
              <text> </text>
              <paragraph>
                <text> Sample security context in JSON format that matches the specification: </text>
                <atCode>{
'schemeId': 'com.vmware.vapi.std.security.oauth',
'accesstoken': ....
}</atCode>
                <text> </text>
                <breakline/>
                <text> vAPI runtime provides convenient factory methods that takes OAuth2 access token as input parameter and creates a security context that conforms to the above format.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the security context in a request is using OAuth2</text>
            <text>based authentication scheme.</text>
            <text>&lt;p&gt;</text>
            <text>In this scheme, the following pieces of information</text>
            <text>has to be passed in the SecurityContext structure in the</text>
            <text>execution context of the request:</text>
            <text>&lt;ul&gt;</text>
            <text>&lt;li&gt;The scheme identifier - com.vmware.vapi.std.security.oauth&lt;/li&gt;</text>
            <text>&lt;li&gt;Valid OAuth2 access token - This is usually acquired by OAuth2</text>
            <text>Authorization Server after successful authentication of the</text>
            <text>end user.&lt;/li&gt;</text>
            <text>&lt;/ul&gt;</text>
            <text>&lt;p&gt;</text>
            <text>Sample security context in JSON format that matches the specification:</text>
            <text>{@code</text>
            <text>{</text>
            <text>'schemeId': 'com.vmware.vapi.std.security.oauth',</text>
            <text>'accesstoken': ....</text>
            <text>}</text>
            <text>}</text>
            <text>&lt;br&gt;</text>
            <text>vAPI runtime provides convenient factory methods that takes OAuth2 access token</text>
            <text>as input parameter and creates a security context that conforms to the above</text>
            <text>format.</text>
          </description>
        </doc>
        <value>com.vmware.vapi.std.security.oauth</value>
      </constant>
    </structure>
    <structure name="DynamicID" namespace="com.vmware.vapi.std" fingerprint="76bbd6e460ab996c748e9209feee5c27d9bb9df3">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.DynamicID" type="true" tag="name">DynamicID</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> represents an identifier for a resource of an arbitrary type.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name DynamicID} {@term structure} represents an identifier for a</text>
          <text>resource of an arbitrary type.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="type">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The type of resource being identified (for example </text>
              <atCode>com.acme.Person</atCode>
              <text>). </text>
              <paragraph>
                <text> </text>
                <atTerm>Services</atTerm>
                <text> that contain </text>
                <atTerm>operations</atTerm>
                <text> for creating and deleting resources typically contain a </text>
                <atTerm>constant</atTerm>
                <text> specifying the resource type for the resources being created and deleted. The API metamodel metadata </text>
                <atTerm>services</atTerm>
                <text> include a </text>
                <atTerm>service</atTerm>
                <text> that allows retrieving all the known resource types.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The type of resource being identified (for example</text>
            <text>{@code com.acme.Person}).</text>
            <text>&lt;p&gt;</text>
            <text>{@term Services} that contain {@term operations} for creating and</text>
            <text>deleting resources typically contain a {@term constant} specifying the</text>
            <text>resource type for the resources being created and deleted.</text>
            <text>The API metamodel metadata {@term services} include a {@term service}</text>
            <text>that allows retrieving all the known resource types.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="id">
        <type primitive="ID"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The identifier for a resource whose type is specified by </text>
              <atLink resolved="com.vmware.vapi.std.DynamicID.type" member="true">#type</atLink>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="metadata">
            <docModel>
              <text>When clients pass a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>parameter</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atName resolved="com.vmware.vapi.std.DynamicID.type" member="true" tag="name">#type</atName>
              <text> must contain the actual resource type. When </text>
              <atTerm>operations</atTerm>
              <text> return a value of this </text>
              <atTerm>structure</atTerm>
              <text> as a </text>
              <atTerm>result</atTerm>
              <text>, the </text>
              <atTerm>field</atTerm>
              <text> </text>
              <atName resolved="com.vmware.vapi.std.DynamicID.type" member="true" tag="name">#type</atName>
              <text> will contain the actual resource type.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>The identifier for a resource whose type is specified by {@link #type}.</text>
          </description>
          <content type="metadata">
            <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
            <text>the {@term field} {@name #type} must contain the actual resource type.</text>
            <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
            <text>the {@term field} {@name #type} will contain the actual resource type.</text>
          </content>
        </doc>
        <metadata>
          <property name="Resource" type="java.util.Map">
            <entry key="typeHolder" type="java.lang.String">type</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="LocalizableMessage" namespace="com.vmware.vapi.std" fingerprint="ff80ea71fa867a8d09b13e36ce8b9fbbac2677fd">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.LocalizableMessage" type="true" tag="name">LocalizableMessage</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> represents a localizable string or message template. </text>
            <atTerm>Services</atTerm>
            <text> include one or more localizable message templates in the </text>
            <atTerm>errors</atTerm>
            <text> they report so that clients can display diagnostic messages in the native language of the user. </text>
            <atTerm>Services</atTerm>
            <text> can include localizable strings in the data returned from </text>
            <atTerm>operations</atTerm>
            <text> to allow clients to display localized status information in the native language of the user.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name LocalizableMessage} {@term structure} represents a localizable</text>
          <text>string or message template.  {@term Services} include one or more localizable</text>
          <text>message templates in the {@term errors} they report so that clients can</text>
          <text>display diagnostic messages in the native language of the user.</text>
          <text>{@term Services} can include localizable strings in the data returned from</text>
          <text>{@term operations} to allow clients to display localized status information</text>
          <text>in the native language of the user.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="id">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Unique identifier of the localizable string or message template. </text>
              <paragraph>
                <text> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Unique identifier of the localizable string or message template.</text>
            <text>&lt;p&gt;</text>
            <text>This identifier is typically used to retrieve a locale-specific</text>
            <text>string or message template from a message catalog.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="defaultMessage">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The value of this localizable string or message template in the </text>
              <atCode>en_US</atCode>
              <text> (English) locale. If </text>
              <atLink resolved="com.vmware.vapi.std.LocalizableMessage.id" member="true">#id</atLink>
              <text> refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user. It could also be used as a fallback if a client is unable to access the appropriate message catalog.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The value of this localizable string or message template in the</text>
            <text>{@code en_US} (English) locale.  If {@link #id} refers to a message</text>
            <text>template, the default message will contain the substituted arguments.</text>
            <text>This value can be used by clients that do not need to display strings and</text>
            <text>messages in the native language of the user.  It could also be used as a</text>
            <text>fallback if a client is unable to access the appropriate message catalog.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="args">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Arguments to be substituted into a message template.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Arguments to be substituted into a message template.</text>
          </description>
        </doc>
      </attribute>
    </structure>
  </package>
  <package name="com.vmware.vapi.std.activation" fingerprint="cb63668a0f9d0ef761001c6ce0080f41e211ebe4">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.std.activation" pkg="true" tag="name">com.vmware.vapi.std.activation</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that TODO.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.std.activation} {@term package} provides</text>
        <text>{@term services} that TODO.</text>
      </description>
    </doc>
    <service name="ActivationManager" namespace="com.vmware.vapi.std.activation" fingerprint="01c0a0c881a5d13ec2339cce7814d1f1ef25964d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <bold>
              <text>WARNING:</text>
            </bold>
            <text> Use only as a sample. The API is experimental and subject to change in future versions. </text>
            <paragraph>
              <text> Activation tracking/management service. </text>
            </paragraph>
            <paragraph>
              <text> An activation describes a method invocation in the runtime.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>&lt;b&gt;WARNING:&lt;/b&gt; Use only as a sample. The API is experimental and subject to</text>
          <text>change in future versions.</text>
          <text>&lt;p&gt;</text>
          <text>Activation tracking/management service.</text>
          <text>&lt;p&gt;</text>
          <text>An activation describes a method invocation in the runtime.</text>
        </description>
      </doc>
      <operation name="cancel" fingerprint="88b831974e140bb9cf743bb3ce36e63e3d8e473b">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Asks for cancellation of a running activation. Whether or not the cancellation request will have any effect depends on the implementation of the method that has to be canceled.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Asks for cancellation of a running activation. Whether or not the</text>
            <text>cancellation request will have any effect depends on the implementation</text>
            <text>of the method that has to be canceled.</text>
          </description>
        </doc>
        <parameter name="activationId">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>activation identifier</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>activation identifier</text>
            </description>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>there is no activation with the specified id</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>there is no activation with the specified id</text>
            </description>
          </doc>
        </error>
        <result/>
      </operation>
    </service>
  </package>
  <package name="com.vmware.vapi.std.errors" fingerprint="8134c9bbad23518a64dcf565a0594a5d1c5c6f2c">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.std.errors" pkg="true" tag="name">com.vmware.vapi.std.errors</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides the standard </text>
          <atTerm>errors</atTerm>
          <text> that can be included in the list of </text>
          <atTerm>errors</atTerm>
          <text> in the specification of </text>
          <atTerm>operations</atTerm>
          <text> to indicate that the </text>
          <atTerm>operation</atTerm>
          <text> might report those </text>
          <atTerm>errors</atTerm>
          <text>. It also provides some </text>
          <atTerm>structures</atTerm>
          <text> intended to be used as payload to provide additional information about those </text>
          <atTerm>errors</atTerm>
          <text>.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.std.errors} {@term package} provides the standard</text>
        <text>{@term errors} that can be included in the list of {@term errors} in the</text>
        <text>specification of {@term operations} to indicate that the {@term operation}</text>
        <text>might report those {@term errors}.</text>
        <text>It also provides some {@term structures} intended to be used as payload to</text>
        <text>provide additional information about those {@term errors}.</text>
      </description>
    </doc>
    <structure name="AlreadyExists" namespace="com.vmware.vapi.std.errors" fingerprint="5db9c5e7fe7fd8845f26cf04f6d4271b5f1d0ca2">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.AlreadyExists" type="true" tag="name">AlreadyExists</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that an attempt was made to create an entity but the entity already exists. Typically the entity has a name or identifier that is required to be unique in some context, but there is already an entity with that name or identifier in that context. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to create a new tag category when a tag category with the specified name already exists.</text>
              </li>
              <text> </text>
              <li>
                <text>Trying to create a new tag in tag category when a tag with the specified name already exists the tag category.</text>
              </li>
              <text> </text>
              <li>
                <text>Trying to create a LUN with a specific UUID on a node (for replication purposes) when a LUN with that UUID already exists on the node.</text>
              </li>
              <text> </text>
              <li>
                <text>Trying to create a file in a directory or move or copy a file to a directory when a file with that name already exists in the directory. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name AlreadyExists} {@term error} indicates that an attempt was made to</text>
          <text>create an entity but the entity already exists.  Typically the entity has a</text>
          <text>name or identifier that is required to be unique in some context, but there</text>
          <text>is already an entity with that name or identifier in that context.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to create a new tag category when a tag category with the</text>
          <text>specified name already exists.&lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to create a new tag in tag category when a tag with the</text>
          <text>specified name already exists the tag category.&lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to create a LUN with a specific UUID on a node (for replication</text>
          <text>purposes) when a LUN with that UUID already exists on the node.&lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to create a file in a directory or move or copy a file to a</text>
          <text>directory when a file with that name already exists in the directory.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="AlreadyInDesiredState" namespace="com.vmware.vapi.std.errors" fingerprint="ebc899d4335b267e02ccb5ce3c11f98bd4cf7684">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.AlreadyInDesiredState" type="true" tag="name">AlreadyInDesiredState</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that an attempt to change the state of a resource or service had no effect because the resource or service is already in the desired state. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to power on a virtual machine that is already powered on.</text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name AlreadyInDesiredState} {@term error} indicates that an attempt to</text>
          <text>change the state of a resource or service had no effect because the resource</text>
          <text>or service is already in the desired state.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to power on a virtual machine that is already powered on.&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="ArgumentLocations" namespace="com.vmware.vapi.std.errors" fingerprint="db9ed310d4ea4b1fc49d62c1b066c42a9541879d">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.ArgumentLocations" type="true" tag="name">ArgumentLocations</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> describes which part(s) of the input to the </text>
            <atTerm>operation</atTerm>
            <text> caused the </text>
            <atTerm>error</atTerm>
            <text>. </text>
            <paragraph>
              <text> Some types of </text>
              <atTerm>errors</atTerm>
              <text> are caused by the value of one of the inputs to the </text>
              <atTerm>operation</atTerm>
              <text>, possibly due to an interaction with other inputs to the </text>
              <atTerm>operation</atTerm>
              <text>. This </text>
              <atTerm>structure</atTerm>
              <text> is intended to be used as the payload to identify those inputs when the </text>
              <atTerm>operation</atTerm>
              <text> reports </text>
              <atTerm>errors</atTerm>
              <text> like </text>
              <atLink resolved="com.vmware.vapi.std.errors.InvalidArgument" type="true">InvalidArgument</atLink>
              <text> or </text>
              <atLink resolved="com.vmware.vapi.std.errors.NotFound" type="true">NotFound</atLink>
              <text>. See </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.data" member="true">Error#data</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ArgumentLocations} {@term structure} describes which part(s) of</text>
          <text>the input to the {@term operation} caused the {@term error}.</text>
          <text>&lt;p&gt;</text>
          <text>Some types of {@term errors} are caused by the value of one of the inputs to</text>
          <text>the {@term operation}, possibly due to an interaction with other inputs to</text>
          <text>the {@term operation}.</text>
          <text>This {@term structure} is intended to be used as the payload to identify</text>
          <text>those inputs when the {@term operation} reports {@term errors} like</text>
          <text>{@link InvalidArgument} or {@link NotFound}.</text>
          <text>See {@link Error#data}.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="primary">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>String describing the location of the input that triggered the </text>
              <atTerm>error</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>String describing the location of the input that triggered the</text>
            <text>{@term error}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="secondary">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <atTerm>List</atTerm>
              <text> (possibly empty) of strings describing the locations of other inputs that caused the the primary input to trigger the </text>
              <atTerm>error</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>{@term List} (possibly empty) of strings describing the locations of</text>
            <text>other inputs that caused the the primary input to trigger the</text>
            <text>{@term error}.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="Canceled" namespace="com.vmware.vapi.std.errors" fingerprint="297629c0f6f079a969ad9f484c434ee67276b382">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.Canceled" type="true" tag="name">Canceled</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> canceled itself in response to an explicit request to do so. </text>
            <atTerm>Operations</atTerm>
            <text> being "canceled" for other reasons (for example the client connection was closed, a time out occured, or due to excessive resource consumption) should not report this </text>
            <atTerm>error</atTerm>
            <text>. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A user is monitoring the progress of the </text>
                <atTerm>operation</atTerm>
                <text> in a GUI and sees that it is likely to take longer than he is willing to wait and clicks the cancel button. </text>
              </li>
              <text> </text>
              <li>
                <text>A user invokes the </text>
                <atTerm>operation</atTerm>
                <text> using a command-line tool and decides that she didn't really want to invoke that </text>
                <atTerm>operation</atTerm>
                <text>, and presses CTRL-c. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The client's connection to the server was closed. Reporting an </text>
                <atTerm>error</atTerm>
                <text> is pointless since the client will not receive the error response because the connection has been closed. </text>
              </li>
              <text> </text>
              <li>
                <text>The request is taking longer than some amount of time. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.TimedOut" type="true">TimedOut</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be reported if the time was specified as part of the input or is documented in the API contract. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Canceled} {@term error} indicates that the {@term operation}</text>
          <text>canceled itself in response to an explicit request to do so.</text>
          <text>{@term Operations} being "canceled" for other reasons (for example the client</text>
          <text>connection was closed, a time out occured, or due to excessive resource</text>
          <text>consumption) should not report this {@term error}.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A user is monitoring the progress of the {@term operation} in a GUI and</text>
          <text>sees that it is likely to take longer than he is willing to wait and</text>
          <text>clicks the cancel button. &lt;/li&gt;</text>
          <text>&lt;li&gt;A user invokes the {@term operation} using a command-line tool and</text>
          <text>decides that she didn't really want to invoke that {@term operation},</text>
          <text>and presses CTRL-c. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The client's connection to the server was closed. Reporting an</text>
          <text>{@term error} is pointless since the client will not receive the error</text>
          <text>response because the connection has been closed. &lt;/li&gt;</text>
          <text>&lt;li&gt;The request is taking longer than some amount of time.  The {@link</text>
          <text>TimedOut} {@term error} would be reported if the time was specified as</text>
          <text>part of the input or is documented in the API contract. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="ConcurrentChange" namespace="com.vmware.vapi.std.errors" fingerprint="202b282c84fad8dd5e2afda5044c9cd323720d36">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.ConcurrentChange" type="true" tag="name">ConcurrentChange</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that a data structure, entity, or resource has been modified since some earlier point in time. Typically this happens when the client is doing the </text>
            <italic>
              <text>write</text>
            </italic>
            <text> portion of a read-modify-write sequence and indicates that it wants the server to notify it if the data in the server has changed after it did the </text>
            <italic>
              <text>read</text>
            </italic>
            <text>, so that it can avoid overwriting that change inadvertantly.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ConcurrentChange} {@term error} indicates  that a data structure,</text>
          <text>entity, or resource has been modified since some earlier point in time.</text>
          <text>Typically this happens when the client is doing the &lt;i&gt;write&lt;/i&gt; portion of a</text>
          <text>read-modify-write sequence and indicates that it wants the server to notify</text>
          <text>it if the data in the server has changed after it did the &lt;i&gt;read&lt;/i&gt;, so</text>
          <text>that it can avoid overwriting that change inadvertantly.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="Error" namespace="com.vmware.vapi.std.errors" fingerprint="249a2781c3f559120f79707eb9520b1e943c2a10">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.Error" type="true" tag="name">Error</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> describes the</text>
            <atTerm>fields</atTerm>
            <text> common to all standard </text>
            <atTerm>errors</atTerm>
            <text>. </text>
            <paragraph>
              <text> This </text>
              <atTerm>error</atTerm>
              <text> serves two purposes: </text>
            </paragraph>
            <ol>
              <text> </text>
              <li>
                <text>It is the </text>
                <atTerm>error</atTerm>
                <text> that clients in many programming languages can catch to handle all standard </text>
                <atTerm>errors</atTerm>
                <text>. Typically those clients will display one or more of the localizable messages from </text>
                <atLink resolved="com.vmware.vapi.std.errors.Error.messages" member="true">#messages</atLink>
                <text> to a human. </text>
              </li>
              <text> </text>
              <li>
                <text>It is the </text>
                <atTerm>error</atTerm>
                <text> that </text>
                <atTerm>operations</atTerm>
                <text> can report when they need to report some </text>
                <atTerm>error</atTerm>
                <text>, but the </text>
                <atTerm>error</atTerm>
                <text> doesn't fit into any other standard </text>
                <atTerm>error</atTerm>
                <text>, and in fact the only reasonable way for a client to react to the </text>
                <atTerm>error</atTerm>
                <text> is to display the message(s) to a human. </text>
              </li>
              <text> </text>
            </ol>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Error} {@term error} describes the{@term fields} common to all standard {@term errors}.</text>
          <text>&lt;p&gt;</text>
          <text>This {@term error} serves two purposes:</text>
          <text>&lt;ol&gt;</text>
          <text>&lt;li&gt;It is the {@term error} that clients in many programming</text>
          <text>languages can catch to handle all standard {@term errors}.  Typically</text>
          <text>those clients will display one or more of the localizable messages from</text>
          <text>{@link #messages} to a human. &lt;/li&gt;</text>
          <text>&lt;li&gt;It is the {@term error} that {@term operations} can report when</text>
          <text>they need to report some {@term error}, but the {@term error} doesn't</text>
          <text>fit into any other standard {@term error}, and in fact the only</text>
          <text>reasonable way for a client to react to the {@term error} is to display</text>
          <text>the message(s) to a human. &lt;/li&gt;</text>
          <text>&lt;/ol&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
        <property name="ErrorType" type="java.lang.String">Exception</property>
      </metadata>
      <attribute name="messages">
        <type generic="List">
          <type reference="LocalizableMessage" namespace="com.vmware.vapi.std" target="STRUCTURE" declaration="com.vmware.vapi.std.LocalizableMessage"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Stack of one or more localizable messages for human </text>
              <atTerm>error</atTerm>
              <text> consumers. </text>
              <paragraph>
                <text> The message at the top of the stack (first in the list) describes the </text>
                <atTerm>error</atTerm>
                <text> from the perspective of the </text>
                <atTerm>operation</atTerm>
                <text> the client invoked. Each subsequent message in the stack describes the "cause" of the prior message.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Stack of one or more localizable messages for human {@term error}</text>
            <text>consumers.</text>
            <text>&lt;p&gt;</text>
            <text>The message at the top of the stack (first in the list) describes</text>
            <text>the {@term error} from the perspective of the {@term operation} the</text>
            <text>client invoked.</text>
            <text>Each subsequent message in the stack describes the "cause" of the prior</text>
            <text>message.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="data">
        <type generic="Optional">
          <type primitive="DynamicStructure"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Data to facilitate clients responding to the </text>
              <atTerm>operation</atTerm>
              <text> reporting a standard </text>
              <atTerm>error</atTerm>
              <text> to indicating that it was unable to complete successfully. </text>
              <paragraph>
                <text> </text>
                <atTerm>Operations</atTerm>
                <text> may provide data that clients can use when responding to </text>
                <atTerm>errors</atTerm>
                <text>. Since the data that clients need may be specific to the context of the </text>
                <atTerm>operation</atTerm>
                <text> reporting the </text>
                <atTerm>error</atTerm>
                <text>, different </text>
                <atTerm>operations</atTerm>
                <text> that report the same </text>
                <atTerm>error</atTerm>
                <text> may provide different data in the </text>
                <atTerm>error</atTerm>
                <text>. The documentation for each each </text>
                <atTerm>operation</atTerm>
                <text> will describe what, if any, data it provides for each </text>
                <atTerm>error</atTerm>
                <text> it reports. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ArgumentLocations" type="true">ArgumentLocations</atLink>
                <text>, </text>
                <atLink resolved="com.vmware.vapi.std.errors.FileLocations" type="true">FileLocations</atLink>
                <text>, and </text>
                <atLink resolved="com.vmware.vapi.std.errors.TransientIndication" type="true">TransientIndication</atLink>
                <text> </text>
                <atTerm>structures</atTerm>
                <text> are intended as possible values for this </text>
                <atTerm>field</atTerm>
                <text>. </text>
                <atLink resolved="com.vmware.vapi.std.DynamicID" type="true">com.vmware.vapi.std.DynamicID</atLink>
                <text> may also be useful as a value for this </text>
                <atTerm>field</atTerm>
                <text> (although that is not its primary purpose). Some </text>
                <atTerm>services</atTerm>
                <text> may provide their own specific </text>
                <atTerm>structures</atTerm>
                <text> for use as the value of this </text>
                <atTerm>field</atTerm>
                <text> when reporting </text>
                <atTerm>errors</atTerm>
                <text> from their </text>
                <atTerm>operations</atTerm>
                <text>.</text>
              </paragraph>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>Some </text>
              <atTerm>operations</atTerm>
              <text> will not set this </text>
              <atTerm>field</atTerm>
              <text> when reporting </text>
              <atTerm>errors</atTerm>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Data to facilitate clients responding to the {@term operation} reporting</text>
            <text>a standard {@term error} to indicating that it was unable to complete</text>
            <text>successfully.</text>
            <text>&lt;p&gt;</text>
            <text>{@term Operations} may provide data that clients can use when responding</text>
            <text>to {@term errors}.  Since the data that clients need may be specific to</text>
            <text>the context of the {@term operation} reporting the {@term error},</text>
            <text>different {@term operations} that report the same {@term error} may</text>
            <text>provide different data in the {@term error}.  The documentation for each</text>
            <text>each {@term operation} will describe what, if any, data it provides for</text>
            <text>each {@term error} it reports.</text>
            <text>The {@link ArgumentLocations}, {@link FileLocations}, and</text>
            <text>{@link TransientIndication} {@term structures} are intended as possible</text>
            <text>values for this {@term field}.  {@link com.vmware.vapi.std.DynamicID} may</text>
            <text>also be useful as a value for this {@term field} (although that is not</text>
            <text>its primary purpose).  Some {@term services} may provide their own</text>
            <text>specific {@term structures} for use as the value of this {@term field}</text>
            <text>when reporting {@term errors} from their {@term operations}.</text>
          </description>
          <content type="optionalReason">
            <text>Some {@term operations} will not set this {@term field}</text>
            <text>when reporting {@term errors}.</text>
          </content>
        </doc>
      </attribute>
    </structure>
    <structure name="FeatureInUse" namespace="com.vmware.vapi.std.errors" fingerprint="13560f1f64d26ce9b77c87d723cab94af738681d">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.FeatureInUse" type="true" tag="name">FeatureInUse</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that an action cannot be completed because a feature is in use. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to disable snapshots on a virtual machine which has a snapshot. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to downgrade a license that has licensed features that are in use. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name FeatureInUse} {@term error} indicates that an action cannot be</text>
          <text>completed because a feature is in use.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to disable snapshots on a virtual machine which has a</text>
          <text>snapshot. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to downgrade a license that has licensed features that are in</text>
          <text>use. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="FileLocations" namespace="com.vmware.vapi.std.errors" fingerprint="d36d7fbdbdbe0acb234b86855a28638f76215fb5">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.FileLocations" type="true" tag="name">FileLocations</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> identifies the file(s) that caused the </text>
            <atTerm>operation</atTerm>
            <text> to report the </text>
            <atTerm>error</atTerm>
            <text>. </text>
            <paragraph>
              <text> Some types of </text>
              <atTerm>errors</atTerm>
              <text> are caused by a problem with one or more files. This </text>
              <atTerm>structure</atTerm>
              <text> is intended to be used as the payload to identify those files when the </text>
              <atTerm>operation</atTerm>
              <text> reports </text>
              <atTerm>errors</atTerm>
              <text> like </text>
              <atLink resolved="com.vmware.vapi.std.errors.NotFound" type="true">NotFound</atLink>
              <text>. See </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.data" member="true">Error#data</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name FileLocations} {@term structure} identifies the file(s) that</text>
          <text>caused the {@term operation} to report the {@term error}.</text>
          <text>&lt;p&gt;</text>
          <text>Some types of {@term errors} are caused by a problem with one or more files.</text>
          <text>This {@term structure} is intended to be used as the payload to identify</text>
          <text>those files when the {@term operation} reports {@term errors} like</text>
          <text>{@link NotFound}.</text>
          <text>See {@link Error#data}.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="primary">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>String identifying the file that triggered the </text>
              <atTerm>error</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>String identifying the file that triggered the {@term error}.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="secondary">
        <type generic="List">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <atTerm>List</atTerm>
              <text> (possibly empty) of strings identifying other files that caused the primary file to trigger the </text>
              <atTerm>error</atTerm>
              <text>.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>{@term List} (possibly empty) of strings identifying other files that</text>
            <text>caused the primary file to trigger the {@term error}.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="InternalServerError" namespace="com.vmware.vapi.std.errors" fingerprint="dad9aac2a1b7b6f89cc00d1b5dad8e223f593819">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.InternalServerError" type="true" tag="name">InternalServerError</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the server encounters an unexpected condition that prevented it from fulfilling the request. </text>
            <paragraph>
              <text> This </text>
              <atTerm>error</atTerm>
              <text> is reported by the API infrastructure, so it could occur in response to the invocation of any </text>
              <atTerm>operation</atTerm>
              <text>. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The </text>
                <atTerm>operation</atTerm>
                <text> returns a value whose type doesn't match the type type the </text>
                <atTerm>operation</atTerm>
                <text> says it should return.</text>
              </li>
              <text> </text>
              <li>
                <text>The </text>
                <atTerm>operation</atTerm>
                <text> reports an </text>
                <atTerm>error</atTerm>
                <text> that is not included in the list of </text>
                <atTerm>errors</atTerm>
                <text> the </text>
                <atTerm>operation</atTerm>
                <text> says that it can report.</text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name InternalServerError} {@term error} indicates that the server</text>
          <text>encounters an unexpected condition that prevented it from fulfilling the</text>
          <text>request.</text>
          <text>&lt;p&gt;</text>
          <text>This {@term error} is reported by the API infrastructure, so it could occur</text>
          <text>in response to the invocation of any {@term operation}.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The {@term operation} returns a value whose type doesn't match the type</text>
          <text>type the {@term operation} says it should return.&lt;/li&gt;</text>
          <text>&lt;li&gt;The {@term operation} reports an {@term error} that is not included in</text>
          <text>the list of {@term errors} the {@term operation} says that it can</text>
          <text>report.&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="InvalidArgument" namespace="com.vmware.vapi.std.errors" fingerprint="f3e844b044d917c5538c22a2e740ab55f51e7620">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.InvalidArgument" type="true" tag="name">InvalidArgument</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the values received for one or more </text>
            <atTerm>parameters</atTerm>
            <text> are not acceptable. </text>
            <paragraph>
              <text> This </text>
              <atTerm>error</atTerm>
              <text> is reported by the API infrastructure, so it could occur in response to the invocation of any </text>
              <atTerm>operation</atTerm>
              <text>. It may also be reported as the result of </text>
              <atTerm>operation</atTerm>
              <text>-specific validation. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A </text>
                <atTerm>parameter</atTerm>
                <text> has a value that is not of the expected type. </text>
              </li>
              <text> </text>
              <li>
                <text>A </text>
                <atTerm>parameter</atTerm>
                <text> has a value that is not in the required range. </text>
              </li>
              <text> </text>
              <li>
                <text>A </text>
                <atTerm>parameter</atTerm>
                <text> has a value that is not one of the specifically allowed strings. </text>
              </li>
              <text> </text>
              <li>
                <text>One </text>
                <atTerm>field</atTerm>
                <text> of a </text>
                <atTerm>structure</atTerm>
                <text> is the tag for a tagged union, and has a specific value but another </text>
                <atTerm>field</atTerm>
                <text> of the </text>
                <atTerm>structure</atTerm>
                <text> that is required to be specified when the tag has that value is not specified, or another </text>
                <atTerm>field</atTerm>
                <text> of the </text>
                <atTerm>structure</atTerm>
                <text> that is required to be unspecified when the tag has that value is specified. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to create a new tag in tag category when a tag with the specified name already exists the tag category. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.AlreadyExists" type="true">AlreadyExists</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Invoke the </text>
                <atTerm>operation</atTerm>
                <text> to retrieve information about a virtual machine, passing an id that does not identify an existing virtual machine. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.NotFound" type="true">NotFound</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to put a virtual machine into a folder that can only contain hosts. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.InvalidElementType" type="true">InvalidElementType</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to attach a SCSI virtual disk to an IDE port. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.InvalidElementType" type="true">InvalidElementType</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name InvalidArgument} {@term error} indicates that the values received</text>
          <text>for one or more {@term parameters} are not acceptable.</text>
          <text>&lt;p&gt;</text>
          <text>This {@term error} is reported by the API infrastructure, so it could occur</text>
          <text>in response to the invocation of any {@term operation}.  It may also be</text>
          <text>reported as the result of {@term operation}-specific validation.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A {@term parameter} has a value that is not of the expected type. &lt;/li&gt;</text>
          <text>&lt;li&gt;A {@term parameter} has a value that is not in the required range.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;li&gt;A {@term parameter} has a value that is not one of the specifically</text>
          <text>allowed strings. &lt;/li&gt;</text>
          <text>&lt;li&gt;One {@term field} of a {@term structure} is the tag for a tagged union,</text>
          <text>and has a specific value but another {@term field} of the</text>
          <text>{@term structure} that is required to be specified when the tag has</text>
          <text>that value is not specified, or another {@term field} of the</text>
          <text>{@term structure} that is required to be unspecified when the tag has</text>
          <text>that value is specified. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to create a new tag in tag category when a tag with the</text>
          <text>specified name already exists the tag category.</text>
          <text>The {@link AlreadyExists} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;Invoke the {@term operation} to retrieve information about a virtual</text>
          <text>machine, passing an id that does not identify an existing virtual</text>
          <text>machine. The {@link NotFound} {@term error} would be used instead.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to put a virtual machine into a folder that can only contain</text>
          <text>hosts. The {@link InvalidElementType} {@term error} would be used</text>
          <text>instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to attach a SCSI virtual disk to an IDE port. The</text>
          <text>{@link InvalidElementType} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="InvalidElementConfiguration" namespace="com.vmware.vapi.std.errors" fingerprint="d173e4dc7b2c482c8757616d350b87827d372c5e">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.InvalidElementConfiguration" type="true" tag="name">InvalidElementConfiguration</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that an attempt to modify the configuration of an element or a group containing the element failed due to the configuraton of the element. A typical case is when the </text>
            <atTerm>operation</atTerm>
            <text> is am attempt to change the group membership of the element fails, in which case a configuration change on the element may allow the group membership change to succeed. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Attempt to move a host with a fault tolerant virtual machine out of a cluster (i.e. make the host a standalone host). </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to remove a host from a DRS cluster without putting the host into maintenance mode. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name InvalidElementConfiguration} {@term error} indicates that an</text>
          <text>attempt to modify the configuration of an element or a group containing the</text>
          <text>element failed due to the configuraton of the element.</text>
          <text>A typical case is when the {@term operation} is am attempt to change the</text>
          <text>group membership of the element fails, in which case a configuration change</text>
          <text>on the element may allow the group membership change to succeed.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Attempt to move a host with a fault tolerant virtual machine out of a</text>
          <text>cluster (i.e. make the host a standalone host). &lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to remove a host from a DRS cluster without putting the host</text>
          <text>into maintenance mode. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="InvalidElementType" namespace="com.vmware.vapi.std.errors" fingerprint="f60897bf53d153bf3a4a0504ab319faeb3615aa9">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.InvalidElementType" type="true" tag="name">InvalidElementType</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the server was unable to fulfil the request because an element of a specific type cannot be a member of particular group. </text>
            <paragraph>
              <text> This </text>
              <atTerm>error</atTerm>
              <text> could be reported, for example, if an attempt is made to put an element into the wrong type of container. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Attempt to put a virtual machine into a folder that can only contain hosts. </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to attach a SCSI virtual disk to an IDE port. </text>
              </li>
              <text> </text>
            </ul>
            <text> Counterexamples: </text>
            <ul>
              <text> </text>
              <li>
                <text>A </text>
                <atTerm>parameter</atTerm>
                <text> has a value that is not of the expected type. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.InvalidArgument" type="true">InvalidArgument</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name InvalidElementType} {@term error} indicates that the server was</text>
          <text>unable to fulfil the request because an element of a specific type cannot be</text>
          <text>a member of particular group.</text>
          <text>&lt;p&gt;</text>
          <text>This {@term error} could be reported, for example, if an attempt is made to</text>
          <text>put an element into the wrong type of container.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Attempt to put a virtual machine into a folder that can only contain</text>
          <text>hosts. &lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to attach a SCSI virtual disk to an IDE port. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A {@term parameter} has a value that is not of the expected type. The</text>
          <text>{@link InvalidArgument} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="InvalidRequest" namespace="com.vmware.vapi.std.errors" fingerprint="1f510b653adfa1a990923a8352cd641234ac4039">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.InvalidRequest" type="true" tag="name">InvalidRequest</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the request is malformed in such a way that the server is unable to process it. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The XML in a SOAP request is not well-formed so the server cannot parse the request. </text>
              </li>
              <text> </text>
              <li>
                <text>The XML in a SOAP request is well-formed but does not match the structure required by the SOAP specification. </text>
              </li>
              <text> </text>
              <li>
                <text>A JSON-RPC request is not valid JSON. </text>
              </li>
              <text> </text>
              <li>
                <text>The JSON sent in a JSON-RPC request is not a valid JSON-RPC Request object. </text>
              </li>
              <text> </text>
              <li>
                <text>The Request object from a JSON-RPC request does not match the structure required by the API infrastructure. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> has a value that is not with the required range. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.InvalidArgument" type="true">InvalidArgument</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>The name of the </text>
                <atTerm>operation</atTerm>
                <text> specified in the request doesn't not match any known </text>
                <atTerm>operation</atTerm>
                <text>. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.NotFound" type="true">NotFound</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Some transport protocols (for example JSON-RPC) include their own mechanism for reporting these kinds of errors, and the API infrastructure for a programming language may expose the errors using a language specific mechanism, so this </text>
              <atTerm>error</atTerm>
              <text> might not be used.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name InvalidRequest} {@term error} indicates that the request is</text>
          <text>malformed in such a way that the server is unable to process it.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The XML in a SOAP request is not well-formed so the server cannot parse</text>
          <text>the request. &lt;/li&gt;</text>
          <text>&lt;li&gt;The XML in a SOAP request is well-formed but does not match the</text>
          <text>structure required by the SOAP specification. &lt;/li&gt;</text>
          <text>&lt;li&gt;A JSON-RPC request is not valid JSON. &lt;/li&gt;</text>
          <text>&lt;li&gt;The JSON sent in a JSON-RPC request is not a valid JSON-RPC</text>
          <text>Request object. &lt;/li&gt;</text>
          <text>&lt;li&gt;The Request object from a JSON-RPC request does not match the structure</text>
          <text>required by the API infrastructure. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The {@term parameter} has a value that is not with the required range.</text>
          <text>The {@link InvalidArgument} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;The name of the {@term operation} specified in the request doesn't not</text>
          <text>match any known {@term operation}. The {@link NotFound} {@term error}</text>
          <text>would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Some transport protocols (for example JSON-RPC) include their own mechanism</text>
          <text>for reporting these kinds of errors, and the API infrastructure for a</text>
          <text>programming language may expose the errors using a language specific</text>
          <text>mechanism, so this {@term error} might not be used.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="NotAllowedInCurrentState" namespace="com.vmware.vapi.std.errors" fingerprint="b12aa0f0c310933ccc4ba3dc2ffc90a745e1e1c1">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.NotAllowedInCurrentState" type="true" tag="name">NotAllowedInCurrentState</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the requested </text>
            <atTerm>operation</atTerm>
            <text> is not allowed with a resource or service in its current state. This could be because the </text>
            <atTerm>operation</atTerm>
            <text> is performing a configuration change that is not allowed in the current state or because </text>
            <atTerm>operation</atTerm>
            <text> itself is not allowed in the current state. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to add a virtual device that cannot be hot plugged to a running virtual machine. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to upgrade the virtual hardware version for a suspended virtual machine. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to power off, reset, or suspend a virtual machine that is not powered on. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to power off a virtual machine that is in the process of being powered on. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceBusy" type="true">ResourceBusy</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name NotAllowedInCurrentState} {@term error} indicates that the</text>
          <text>requested {@term operation} is not allowed with a resource or service in its</text>
          <text>current state.  This could be because the {@term operation} is performing a</text>
          <text>configuration change that is not allowed in the current state or because</text>
          <text>{@term operation} itself is not allowed in the current state.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to add a virtual device that cannot be hot plugged to a running</text>
          <text>virtual machine. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to upgrade the virtual hardware version for a suspended virtual</text>
          <text>machine. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to power off, reset, or suspend a virtual machine that is not</text>
          <text>powered on. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to power off a virtual machine that is in the process of being</text>
          <text>powered on. The {@link ResourceBusy} {@term error} would be used</text>
          <text>instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="NotFound" namespace="com.vmware.vapi.std.errors" fingerprint="10113ecef80e5548bc35f8d737cb487f770aed63">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.NotFound" type="true" tag="name">NotFound</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that a specified element could not be found. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Invoke the </text>
                <atTerm>operation</atTerm>
                <text> to retrieve information about a virtual machine, passing an id that does not identify an existing virtual machine. </text>
              </li>
              <text> </text>
              <li>
                <text>Invoke the </text>
                <atTerm>operation</atTerm>
                <text> to modify the configuration of a virtual nic, passing an id that does not identify an existing virtual nic in the specified virtual machine. </text>
              </li>
              <text> </text>
              <li>
                <text>Invoke the </text>
                <atTerm>operation</atTerm>
                <text> to remove a vswitch, passing an id that does not identify an existing vswitch. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name NotFound} {@term error} indicates that a specified element could not be found.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Invoke the {@term operation} to retrieve information about a virtual</text>
          <text>machine, passing an id that does not identify an existing virtual</text>
          <text>machine. &lt;/li&gt;</text>
          <text>&lt;li&gt;Invoke the {@term operation} to modify the configuration of a virtual</text>
          <text>nic, passing an id that does not identify an existing virtual nic in</text>
          <text>the specified virtual machine. &lt;/li&gt;</text>
          <text>&lt;li&gt;Invoke the {@term operation} to remove a vswitch, passing an id that</text>
          <text>does not identify an existing vswitch. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="OperationNotFound" namespace="com.vmware.vapi.std.errors" fingerprint="9b0426fe48320866e0d1cbe77185606d3c865bba">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.OperationNotFound" type="true" tag="name">OperationNotFound</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> specified in the request could not be found. </text>
            <paragraph>
              <text> Every API request specifies a service identifier and an operation identifier along with the </text>
              <atTerm>parameters</atTerm>
              <text>. If the API infrastructure is unable to find the requested </text>
              <atTerm>service</atTerm>
              <text> or </text>
              <atTerm>operation</atTerm>
              <text> it reports this </text>
              <atTerm>error</atTerm>
              <text>. </text>
            </paragraph>
            <paragraph>
              <text> This </text>
              <atTerm>error</atTerm>
              <text> can be reported by the API infrastructure for any </text>
              <atTerm>operation</atTerm>
              <text>, but it is specific to the API infrastructure, and should never be reported by the implementation of any </text>
              <atTerm>operation</atTerm>
              <text>. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A client provides an invalid service or operation identifier when invoking the </text>
                <atTerm>operation</atTerm>
                <text> using a dynamic interface (for example REST). </text>
              </li>
              <text> </text>
              <li>
                <text>A client invokes the </text>
                <atTerm>operation</atTerm>
                <text> from a </text>
                <atTerm>service</atTerm>
                <text>, but that </text>
                <atTerm>service</atTerm>
                <text> has not been installed. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A client invokes a task scheduling </text>
                <atTerm>operation</atTerm>
                <text>, but provides an invalid service identifier or operation identifier. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.NotFound" type="true">NotFound</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name OperationNotFound} {@term error} indicates that the</text>
          <text>{@term operation} specified in the request could not be found.</text>
          <text>&lt;p&gt;</text>
          <text>Every API request specifies a service identifier and an operation identifier</text>
          <text>along with the {@term parameters}. If the API infrastructure is unable to</text>
          <text>find the requested {@term service} or {@term operation} it reports this</text>
          <text>{@term error}.</text>
          <text>&lt;p&gt;</text>
          <text>This {@term error} can be reported by the API infrastructure for any</text>
          <text>{@term operation}, but it is specific to the API infrastructure, and should</text>
          <text>never be reported by the implementation of any {@term operation}.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A client provides an invalid service or operation identifier when</text>
          <text>invoking the {@term operation} using a dynamic interface (for example</text>
          <text>REST).</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;li&gt;A client invokes the {@term operation} from a {@term service}, but that</text>
          <text>{@term service} has not been installed. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A client invokes a task scheduling {@term operation}, but provides an</text>
          <text>invalid service identifier or operation identifier. The</text>
          <text>{@link NotFound} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="ResourceBusy" namespace="com.vmware.vapi.std.errors" fingerprint="55ee0d46be913e065ae29781ca15495bda50c218">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.ResourceBusy" type="true" tag="name">ResourceBusy</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> could not be completed because a resource it needs is busy. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to power off a virtual machine that is in the process of being powered on. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to remove a VMFS datastore when there is a virtual machine registered on any host attached to the datastore. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceInUse" type="true">ResourceInUse</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ResourceBusy} {@term error} indicates that the {@term operation}</text>
          <text>could not be completed because a resource it needs is busy.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to power off a virtual machine that is in the process of being</text>
          <text>powered on. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to remove a VMFS datastore when there is a virtual machine</text>
          <text>registered on any host attached to the datastore. The</text>
          <text>{@link ResourceInUse} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="ResourceInUse" namespace="com.vmware.vapi.std.errors" fingerprint="9b368626754ac184c472d483b510b993638acc90">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.ResourceInUse" type="true" tag="name">ResourceInUse</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> could not be completed because a resource is in use. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to remove a VMFS datastore when the is a virtual machine registered on any host attached to the datastore. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to add a virtual switch if the physical network adapter being bridged is already in use. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to power off a virtual machine that is in the process of being powered on. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceBusy" type="true">ResourceBusy</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ResourceInUse} {@term error} indicates that the {@term operation}</text>
          <text>could not be completed because a resource is in use.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to remove a VMFS datastore when the is a virtual machine</text>
          <text>registered on any host attached to the datastore. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to add a virtual switch if the physical network adapter being</text>
          <text>bridged is already in use. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to power off a virtual machine that is in the process of being</text>
          <text>powered on. The {@link ResourceBusy} {@term error} would be used instead.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="ResourceInaccessible" namespace="com.vmware.vapi.std.errors" fingerprint="aa30ec22076c3c07a334ef53c25a66c1b12e8359">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.ResourceInaccessible" type="true" tag="name">ResourceInaccessible</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> could not be completed because an entity is not accessible. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Attempt to invoke some </text>
                <atTerm>operation</atTerm>
                <text> on a virtual machine when the virtual machine's configuration file is not accessible (for example due to a storage APD condition). </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Attempt to invoke some </text>
                <atTerm>operation</atTerm>
                <text> when the server is too busy. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ServiceUnavailable" type="true">ServiceUnavailable</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to invoke some </text>
                <atTerm>operation</atTerm>
                <text> when the server is undergoing maintenance. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ServiceUnavailable" type="true">ServiceUnavailable</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Some </text>
                <atTerm>operation</atTerm>
                <text> fails to contact VMware Tools running inside the virtual machine. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ServiceUnavailable" type="true">ServiceUnavailable</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ResourceInaccessible} {@term error} indicates that the</text>
          <text>{@term operation} could not be completed because an entity is not accessible.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Attempt to invoke some {@term operation} on a virtual machine when the</text>
          <text>virtual machine's configuration file is not accessible (for example due</text>
          <text>to a storage APD condition). &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Attempt to invoke some {@term operation} when the server is too busy.</text>
          <text>The {@link ServiceUnavailable} {@term error} would be used instead.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to invoke some {@term operation} when the server is undergoing</text>
          <text>maintenance. The {@link ServiceUnavailable} {@term error} would be used</text>
          <text>instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;Some {@term operation} fails to contact VMware Tools running inside the</text>
          <text>virtual machine. The {@link ServiceUnavailable} {@term error} would be</text>
          <text>used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="ServiceUnavailable" namespace="com.vmware.vapi.std.errors" fingerprint="633eb28ab7c3474df21cfe4d9fc046d504b7f505">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.ServiceUnavailable" type="true" tag="name">ServiceUnavailable</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>service</atTerm>
            <text> is unavailable. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Attempt to invoke a </text>
                <atTerm>operation</atTerm>
                <text> when the server is too busy. </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to invoke a </text>
                <atTerm>operation</atTerm>
                <text> when the server is undergoing maintenance. </text>
              </li>
              <text> </text>
              <li>
                <text>An </text>
                <atTerm>operation</atTerm>
                <text> fails to contact VMware Tools running inside the virtual machine. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A client provides an invalid service or operation identifier when invoking the </text>
                <atTerm>operation</atTerm>
                <text> using a dynamic interface (for example REST). The </text>
                <atLink resolved="com.vmware.vapi.std.errors.OperationNotFound" type="true">OperationNotFound</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>A client invokes the </text>
                <atTerm>operation</atTerm>
                <text> from the </text>
                <atTerm>service</atTerm>
                <text>, but that </text>
                <atTerm>service</atTerm>
                <text> has not been installed. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.OperationNotFound" type="true">OperationNotFound</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name ServiceUnavailable} {@term error} indicates that the</text>
          <text>{@term service} is unavailable.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Attempt to invoke a {@term operation} when the server is too busy.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to invoke a {@term operation} when the server is undergoing</text>
          <text>maintenance. &lt;/li&gt;</text>
          <text>&lt;li&gt;An {@term operation} fails to contact VMware Tools running inside the</text>
          <text>virtual machine. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A client provides an invalid service or operation identifier when</text>
          <text>invoking the {@term operation} using a dynamic interface (for example</text>
          <text>REST). The {@link OperationNotFound} {@term error} would be used</text>
          <text>instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;A client invokes the {@term operation} from the {@term service}, but</text>
          <text>that {@term service} has not been installed. The</text>
          <text>{@link OperationNotFound} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="TimedOut" namespace="com.vmware.vapi.std.errors" fingerprint="98311f307a95fa71c04a2a406d2dd246932ec10b">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.TimedOut" type="true" tag="name">TimedOut</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> did not complete within the allowed amount of time. The allowed amount of time might be: </text>
            <ul>
              <text> </text>
              <li>
                <text>provided by the client as an input </text>
                <atTerm>parameter</atTerm>
                <text>. </text>
              </li>
              <text> </text>
              <li>
                <text>a fixed limit of the </text>
                <atTerm>service</atTerm>
                <text> implementation that is a documented part of the contract of the </text>
                <atTerm>service</atTerm>
                <text>. </text>
              </li>
              <text> </text>
              <li>
                <text>a configurable limit used by the implementation of the </text>
                <atTerm>service</atTerm>
                <text>. </text>
              </li>
              <text> </text>
              <li>
                <text>a dynamic limit computed by the implementation of the </text>
                <atTerm>service</atTerm>
                <text>. </text>
              </li>
              <text> </text>
            </ul>
            <text> The </text>
            <atTerm>operation</atTerm>
            <text> may or may not complete after the </text>
            <atName resolved="com.vmware.vapi.std.errors.TimedOut" type="true" tag="name">TimedOut</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> was reported. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The </text>
                <atTerm>operation</atTerm>
                <text> was unable to complete within the timeout duration specified by a </text>
                <atTerm>parameter</atTerm>
                <text> of the </text>
                <atTerm>operation</atTerm>
                <text>. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A server implementation that puts requests into a queue before dispatching them might delete a request from the queue if it doesn't get dispatched within </text>
                <italic>
                  <text>n</text>
                </italic>
                <text> minutes. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ServiceUnavailable" type="true">ServiceUnavailable</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name TimedOut} {@term error} indicates that the {@term operation} did</text>
          <text>not complete within the allowed amount of time.  The allowed amount of time</text>
          <text>might be:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;provided by the client as an input {@term parameter}. &lt;/li&gt;</text>
          <text>&lt;li&gt;a fixed limit of the {@term service} implementation that is a</text>
          <text>documented part of the contract of the {@term service}. &lt;/li&gt;</text>
          <text>&lt;li&gt;a configurable limit used by the implementation of the {@term service}.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;li&gt;a dynamic limit computed by the implementation of the {@term service}.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>The {@term operation} may or may not complete after the {@name TimedOut}</text>
          <text>{@term error} was reported.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The {@term operation} was unable to complete within the timeout</text>
          <text>duration specified by a {@term parameter} of the {@term operation}.</text>
          <text>&lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A server implementation that puts requests into a queue before</text>
          <text>dispatching them might delete a request from the queue if it doesn't</text>
          <text>get dispatched within &lt;i&gt;n&lt;/i&gt; minutes.  The {@link ServiceUnavailable}</text>
          <text>{@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="TransientIndication" namespace="com.vmware.vapi.std.errors" fingerprint="17c1a3072e3152b0e6cabb03e8a200380efeecb2">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.TransientIndication" type="true" tag="name">TransientIndication</atName>
            <text> </text>
            <atTerm>structure</atTerm>
            <text> indicates whether or not the </text>
            <atTerm>error</atTerm>
            <text> is transient. </text>
            <paragraph>
              <text> Some types of </text>
              <atTerm>errors</atTerm>
              <text> are transient in certain situtations and not transient in other situtations. This </text>
              <atTerm>error</atTerm>
              <text> payload can be used to indicate to clients whether a particular </text>
              <atTerm>error</atTerm>
              <text> is transient. See </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.data" member="true">Error#data</atLink>
              <text>.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name TransientIndication} {@term structure} indicates whether or not</text>
          <text>the {@term error} is transient.</text>
          <text>&lt;p&gt;</text>
          <text>Some types of {@term errors} are transient in certain situtations and not</text>
          <text>transient in other situtations.  This {@term error} payload can be used to</text>
          <text>indicate to clients whether a particular {@term error} is transient.</text>
          <text>See {@link Error#data}.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="isTransient">
        <type primitive="boolean"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Indicates that the </text>
              <atTerm>error</atTerm>
              <text> this </text>
              <atTerm>structure</atTerm>
              <text> is attached to is transient.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Indicates that the {@term error} this {@term structure} is attached to is</text>
            <text>transient.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="UnableToAllocateResource" namespace="com.vmware.vapi.std.errors" fingerprint="d644da8c86120ad9d989882224efefdc068c1c54">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.UnableToAllocateResource" type="true" tag="name">UnableToAllocateResource</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> failed because it was unable to allocate or acquire a required resource. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to power on a virtual machine when there are not enough licenses to do so. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to power on a virtual machine that would violate a resource usage policy. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to power off a virtual machine that is in the process of being powered on. A </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceBusy" type="true">ResourceBusy</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to remove a VMFS datastore when the is a virtual machine registered on any host attached to the datastore. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceInUse" type="true">ResourceInUse</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to add a virtual switch if the physical network adapter being bridged is already in use. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceInUse" type="true">ResourceInUse</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>Attempt to invoke some </text>
                <atTerm>operation</atTerm>
                <text> on a virtual machine when the virtual machine's configuration file is not accessible (for example due to a storage APD condition). The </text>
                <atLink resolved="com.vmware.vapi.std.errors.ResourceInaccessible" type="true">ResourceInaccessible</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name UnableToAllocateResource} {@term error} indicates that the</text>
          <text>{@term operation} failed because it was unable to allocate or acquire a</text>
          <text>required resource.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to power on a virtual machine when there are not enough licenses</text>
          <text>to do so. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to power on a virtual machine that would violate a resource</text>
          <text>usage policy. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to power off a virtual machine that is in the process of being</text>
          <text>powered on. A {@link ResourceBusy} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to remove a VMFS datastore when the is a virtual machine</text>
          <text>registered on any host attached to the datastore. The</text>
          <text>{@link ResourceInUse} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to add a virtual switch if the physical network adapter being</text>
          <text>bridged is already in use. The {@link ResourceInUse} {@term error}</text>
          <text>would be used instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;Attempt to invoke some {@term operation} on a virtual machine when the</text>
          <text>virtual machine's configuration file is not accessible (for example due</text>
          <text>to a storage APD condition). The {@link ResourceInaccessible}</text>
          <text>{@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="Unauthenticated" namespace="com.vmware.vapi.std.errors" fingerprint="0e184d2bd642101097cb6fc92914d8563a45e7bb">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.Unauthenticated" type="true" tag="name">Unauthenticated</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> requires authentication and the user is not authenticated. </text>
            <paragraph>
              <text> API requests may include a security context containing user credentials. For example, the user credentials could be a SAML token, a user name and password, or the session identifier for a previously established session. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The SAML token in the request's security context has expired. </text>
              </li>
              <text> </text>
              <li>
                <text>The user name and password in the request's security context are invalid. </text>
              </li>
              <text> </text>
              <li>
                <text>The session identifier in the request's security context identifies a session that has expired. </text>
              </li>
              <text> </text>
            </ul>
            <text> Counterexamples: </text>
            <ul>
              <text> </text>
              <li>
                <text> The user is authenticated but isn't authorized to perform the requested </text>
                <atTerm>operation</atTerm>
                <text>. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.Unauthorized" type="true">Unauthorized</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> For security reasons, the </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.data" member="true">Error#data</atLink>
              <text> </text>
              <atTerm>field</atTerm>
              <text> in this </text>
              <atTerm>error</atTerm>
              <text> is </text>
              <atTerm>unset</atTerm>
              <text>, and the </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.messages" member="true">Error#messages</atLink>
              <text> </text>
              <atTerm>field</atTerm>
              <text> in this </text>
              <atTerm>error</atTerm>
              <text> does not disclose which part of the security context is correct or incorrect. For example the messages would not disclose whether a username or a password is valid or invalid, but only that a combination of username and password is invalid.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Unauthenticated} {@term error} indicates that the</text>
          <text>{@term operation} requires authentication and the user is not authenticated.</text>
          <text>&lt;p&gt;</text>
          <text>API requests may include a security context containing user credentials.</text>
          <text>For example, the user credentials could be a SAML token, a user name and</text>
          <text>password, or the session identifier for a previously established session.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The SAML token in the request's security context has expired. &lt;/li&gt;</text>
          <text>&lt;li&gt;The user name and password in the request's security context are</text>
          <text>invalid. &lt;/li&gt;</text>
          <text>&lt;li&gt;The session identifier in the request's security context identifies a</text>
          <text>session that has expired. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt; The user is authenticated but isn't authorized to perform the</text>
          <text>requested {@term operation}. The {@link Unauthorized} {@term error}</text>
          <text>would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>For security reasons, the {@link Error#data} {@term field} in this</text>
          <text>{@term error} is {@term unset}, and the {@link Error#messages} {@term field}</text>
          <text>in this {@term error} does not disclose which part of the security context is</text>
          <text>correct or incorrect.  For example the messages would not disclose whether a</text>
          <text>username or a password is valid or invalid, but only that a combination of</text>
          <text>username and password is invalid.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="Unauthorized" namespace="com.vmware.vapi.std.errors" fingerprint="6e54c0709d06a3d0351201a8233fa57b27effab0">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.Unauthorized" type="true" tag="name">Unauthorized</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the user is not authorized to perform the </text>
            <atTerm>operation</atTerm>
            <text>. </text>
            <paragraph>
              <text> API requests may include a security context containing user credentials. For example, the user credentials could be a SAML token, a user name and password, or the session identifier for a previously established session. Invoking the </text>
              <atTerm>operation</atTerm>
              <text> may require that the user identified by those credentials has particular privileges on the </text>
              <atTerm>operation</atTerm>
              <text> or on one or more resource identifiers passed to the </text>
              <atTerm>operation</atTerm>
              <text>. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The </text>
                <atTerm>operation</atTerm>
                <text> requires that the user have one or more privileges on the </text>
                <atTerm>operation</atTerm>
                <text>, but the user identified by the credentials in the security context does not have the required privileges. </text>
              </li>
              <text> </text>
              <li>
                <text>The </text>
                <atTerm>operation</atTerm>
                <text> requires that the user have one or more privileges on a resource identifier passed to the </text>
                <atTerm>operation</atTerm>
                <text>, but the user identified by the credentials in the security context does not have the required privileges. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> </text>
            </paragraph>
            <paragraph>
              <text> Counterexamples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>The SAML token in the request's security context has expired. A </text>
                <atLink resolved="com.vmware.vapi.std.errors.Unauthenticated" type="true">Unauthenticated</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>The user name and password in the request's security context are invalid. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.Unauthenticated" type="true">Unauthenticated</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
              <li>
                <text>The session identifier in the request's security context identifies a session that has expired. The </text>
                <atLink resolved="com.vmware.vapi.std.errors.Unauthenticated" type="true">Unauthenticated</atLink>
                <text> </text>
                <atTerm>error</atTerm>
                <text> would be used instead. </text>
              </li>
              <text> </text>
            </ul>
            <text> </text>
            <paragraph>
              <text> For security reasons, the </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.data" member="true">Error#data</atLink>
              <text> </text>
              <atTerm>field</atTerm>
              <text> in this </text>
              <atTerm>error</atTerm>
              <text> is </text>
              <atTerm>unset</atTerm>
              <text>, and the </text>
              <atLink resolved="com.vmware.vapi.std.errors.Error.messages" member="true">Error#messages</atLink>
              <text> </text>
              <atTerm>field</atTerm>
              <text> in this </text>
              <atTerm>error</atTerm>
              <text> does not disclose why the user is not authorized to perform the </text>
              <atTerm>operation</atTerm>
              <text>. For example the messages would not disclose which privilege the user did not have or which resource identifier the user did not have the required privilege to access. The API documentation should indicate what privileges are required.</text>
            </paragraph>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Unauthorized} {@term error} indicates that the user is not</text>
          <text>authorized to perform the {@term operation}.</text>
          <text>&lt;p&gt;</text>
          <text>API requests may include a security context containing user credentials.</text>
          <text>For example, the user credentials could be a SAML token, a user name and</text>
          <text>password, or the session identifier for a previously established session.</text>
          <text>Invoking the {@term operation} may require that the user identified by those</text>
          <text>credentials has particular privileges on the {@term operation} or on one or</text>
          <text>more  resource identifiers passed to the {@term operation}.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The {@term operation} requires that the user have one or more</text>
          <text>privileges on the {@term operation}, but the user identified by the</text>
          <text>credentials in the security context does not have the required</text>
          <text>privileges. &lt;/li&gt;</text>
          <text>&lt;li&gt;The {@term operation} requires that the user have one or more</text>
          <text>privileges on a resource identifier passed to the {@term operation},</text>
          <text>but the user identified by the credentials in the security context does</text>
          <text>not have the required privileges. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>&lt;p&gt;</text>
          <text>Counterexamples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;The SAML token in the request's security context has expired.  A</text>
          <text>{@link Unauthenticated} {@term error} would be used instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;The user name and password in the request's security context are</text>
          <text>invalid.  The {@link Unauthenticated} {@term error} would be used</text>
          <text>instead. &lt;/li&gt;</text>
          <text>&lt;li&gt;The session identifier in the request's security context identifies a</text>
          <text>session that has expired.  The {@link Unauthenticated} {@term error}</text>
          <text>would be used instead. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
          <text>&lt;p&gt;</text>
          <text>For security reasons, the {@link Error#data} {@term field} in this</text>
          <text>{@term error} is {@term unset}, and the {@link Error#messages} {@term field}</text>
          <text>in this {@term error} does not disclose why the user is not authorized to</text>
          <text>perform the {@term operation}.  For example the messages would not disclose</text>
          <text>which privilege the user did not have or which resource identifier the user</text>
          <text>did not have the required privilege to access.  The API documentation should</text>
          <text>indicate what privileges are required.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="UnexpectedInput" namespace="com.vmware.vapi.std.errors" fingerprint="dcaf22ce3acff7194e12c09a6496016f4efa1dff">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.UnexpectedInput" type="true" tag="name">UnexpectedInput</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the request contained a </text>
            <atTerm>parameter</atTerm>
            <text> or </text>
            <atTerm>field</atTerm>
            <text> whose name is not known by the server. </text>
            <paragraph>
              <text> Every </text>
              <atTerm>operation</atTerm>
              <text> expects </text>
              <atTerm>parameters</atTerm>
              <text> with known names. Some of those </text>
              <atTerm>parameters</atTerm>
              <text> may be (or contain) </text>
              <atTerm>structures</atTerm>
              <text>, and the </text>
              <atTerm>operation</atTerm>
              <text> expects those </text>
              <atTerm>structures</atTerm>
              <text> to contain </text>
              <atTerm>fields</atTerm>
              <text> with known names. If the </text>
              <atTerm>operation</atTerm>
              <text> receives </text>
              <atTerm>parameters</atTerm>
              <text> or </text>
              <atTerm>fields</atTerm>
              <text> with names that is does not expect, this </text>
              <atTerm>error</atTerm>
              <text> may be reported. </text>
            </paragraph>
            <paragraph>
              <text> This </text>
              <atTerm>error</atTerm>
              <text> can be reported by the API infrastructure for any </text>
              <atTerm>operation</atTerm>
              <text>, but it is specific to the API infrastructure, and should never be reported by the implementation of any </text>
              <atTerm>operation</atTerm>
              <text>. </text>
            </paragraph>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>A client using stubs generated from the interface specification for version2 of a </text>
                <atTerm>service</atTerm>
                <text> invokes the </text>
                <atTerm>operation</atTerm>
                <text> passing one or more </text>
                <atTerm>parameters</atTerm>
                <text> that were added in version2, but they are communicating with a server that only supports version1 of the </text>
                <atTerm>service</atTerm>
                <text>. </text>
              </li>
              <text> </text>
              <li>
                <text>A client provides an unexpected </text>
                <atTerm>parameter</atTerm>
                <text> or </text>
                <atTerm>field</atTerm>
                <text> name when invoking the </text>
                <atTerm>operation</atTerm>
                <text> using a dynamic interface (for example REST). </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name UnexpectedInput} {@term error} indicates that the request</text>
          <text>contained a {@term parameter} or {@term field} whose name is not known by</text>
          <text>the server.</text>
          <text>&lt;p&gt;</text>
          <text>Every {@term operation} expects {@term parameters} with known names.  Some of</text>
          <text>those {@term parameters} may be (or contain) {@term structures}, and the</text>
          <text>{@term operation} expects those {@term structures} to contain {@term fields}</text>
          <text>with known names. If the {@term operation} receives</text>
          <text>{@term parameters} or {@term fields} with names that is does not expect, this</text>
          <text>{@term error} may be reported.</text>
          <text>&lt;p&gt;</text>
          <text>This {@term error} can be reported by the API infrastructure for any</text>
          <text>{@term operation}, but it is specific to the API infrastructure, and should</text>
          <text>never be reported by the implementation of any {@term operation}.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;A client using stubs generated from the interface specification for</text>
          <text>version2 of a {@term service} invokes the {@term operation} passing one</text>
          <text>or more {@term parameters} that were added in version2, but they are</text>
          <text>communicating with a server that only supports version1 of the</text>
          <text>{@term service}. &lt;/li&gt;</text>
          <text>&lt;li&gt;A client provides an unexpected {@term parameter} or {@term field} name</text>
          <text>when invoking the {@term operation} using a dynamic interface (for</text>
          <text>example REST). &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
    <structure name="Unsupported" namespace="com.vmware.vapi.std.errors" fingerprint="01f4ebbd397724e3629fde60eca854b336e85278">
      <extendsType>
        <type reference="Error" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.Error"/>
      </extendsType>
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atName resolved="com.vmware.vapi.std.errors.Unsupported" type="true" tag="name">Unsupported</atName>
            <text> </text>
            <atTerm>error</atTerm>
            <text> indicates that the </text>
            <atTerm>operation</atTerm>
            <text> is not supported by the </text>
            <atTerm>service</atTerm>
            <text>. </text>
            <paragraph>
              <text> Examples: </text>
            </paragraph>
            <ul>
              <text> </text>
              <li>
                <text>Trying to hot-plug a CPU when the current configuration of the VM does not support hot-plugging of CPUs. </text>
              </li>
              <text> </text>
              <li>
                <text>Trying to change the memory size to a value that is not within the acceptable guest memory bounds supported by the virtual machine's host. </text>
              </li>
              <text> </text>
            </ul>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@name Unsupported} {@term error} indicates that the {@term operation} is</text>
          <text>not supported by the {@term service}.</text>
          <text>&lt;p&gt;</text>
          <text>Examples:</text>
          <text>&lt;ul&gt;</text>
          <text>&lt;li&gt;Trying to hot-plug a CPU when the current configuration of the VM does</text>
          <text>not support hot-plugging of CPUs. &lt;/li&gt;</text>
          <text>&lt;li&gt;Trying to change the memory size to a value that is not within the</text>
          <text>acceptable guest memory bounds supported by the virtual machine's</text>
          <text>host. &lt;/li&gt;</text>
          <text>&lt;/ul&gt;</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
    </structure>
  </package>
  <package name="com.vmware.vapi.std.interposition" fingerprint="1a98b230394310b5ed416e62340e603c48383cac">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atName resolved="com.vmware.vapi.std.interposition" pkg="true" tag="name">com.vmware.vapi.std.interposition</atName>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that TODO.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@name com.vmware.vapi.std.interposition} {@term package} provides</text>
        <text>{@term services} that TODO.</text>
      </description>
    </doc>
    <structure name="InvocationRequest" namespace="com.vmware.vapi.std.interposition" fingerprint="3995ace6528e8c5b75c099741d7c11be8990ec8e">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Information about an interposed request for operation invocation. All interposers would receive an instance of this structure as an input parameter.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Information about an interposed request for operation invocation. All</text>
          <text>interposers would receive an instance of this structure as an input</text>
          <text>parameter.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="serviceId">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Fully qualified name of the service which contains the interposed operation. In canonical format. For example org.example.hello.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Fully qualified name of the service which contains the interposed</text>
            <text>operation. In canonical format. For example org.example.hello.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="operationId">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Name of the interposed operation. In canonical format. For example say_hello.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Name of the interposed operation. In canonical format. For example</text>
            <text>say_hello.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="operationInput">
        <type primitive="Opaque"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Input of the interposed operation.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Input of the interposed operation.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="user">
        <type generic="Optional">
          <type reference="SecurityPrincipal" namespace="com.vmware.vapi.std.interposition" target="STRUCTURE" declaration="com.vmware.vapi.std.interposition.SecurityPrincipal"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>User which started the interposed operation.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>There could be no authentication information. For example when methods are invoked anonymously.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>User which started the interposed operation.</text>
          </description>
          <content type="optionalReason">
            <text>There could be no authentication information.</text>
            <text>For example when methods are invoked anonymously.</text>
          </content>
        </doc>
      </attribute>
      <attribute name="groups">
        <type generic="List">
          <type reference="SecurityPrincipal" namespace="com.vmware.vapi.std.interposition" target="STRUCTURE" declaration="com.vmware.vapi.std.interposition.SecurityPrincipal"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Groups of the user who started the interposed operation. Would be empty if there is no authentication information.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Groups of the user who started the interposed operation. Would be empty</text>
            <text>if there is no authentication information.</text>
          </description>
        </doc>
      </attribute>
    </structure>
    <structure name="InvocationResult" namespace="com.vmware.vapi.std.interposition" fingerprint="ebbdd4d2c1f001eb2ea52b331ae4dd267c8f6795">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>Information about the result from an interposed operation invocation. All POST interposers will receive an instance of this structure.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>Information about the result from an interposed operation invocation. All</text>
          <text>POST interposers will receive an instance of this structure.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <enumeration name="ResultType" namespace="com.vmware.vapi.std.interposition.InvocationResult" fingerprint="b07fe457f011dd3483c07d2d95de9f20d9613742">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the invocation result.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the invocation result.</text>
          </description>
        </doc>
        <constant name="NORMAL_RESULT">
          <type reference="ResultType" namespace="com.vmware.vapi.std.interposition.InvocationResult" target="ENUMERATION" declaration="com.vmware.vapi.std.interposition.InvocationResult.ResultType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Normal invocation result.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Normal invocation result.</text>
            </description>
          </doc>
          <value/>
        </constant>
        <constant name="ERROR_RESULT">
          <type reference="ResultType" namespace="com.vmware.vapi.std.interposition.InvocationResult" target="ENUMERATION" declaration="com.vmware.vapi.std.interposition.InvocationResult.ResultType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Error invocation result.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Error invocation result.</text>
            </description>
          </doc>
          <value/>
        </constant>
      </enumeration>
      <attribute name="resultType">
        <type reference="ResultType" namespace="com.vmware.vapi.std.interposition.InvocationResult" target="ENUMERATION" declaration="com.vmware.vapi.std.interposition.InvocationResult.ResultType"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Type of the invocation result.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Type of the invocation result.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionTag" type="java.lang.Boolean">true</property>
        </metadata>
      </attribute>
      <attribute name="output">
        <type primitive="Opaque"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Normal result value.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.std.interposition.InvocationResult.resultType" member="true" tag="name">#resultType</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.std.interposition.InvocationResult.ResultType.NORMAL_RESULT" member="true">ResultType#NORMAL_RESULT</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Normal result value.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">resultType</entry>
            <entry key="value" type="java.lang.String">NORMAL_RESULT</entry>
          </property>
        </metadata>
      </attribute>
      <attribute name="error">
        <type primitive="DynamicStructure"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Error result value.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>This </text>
              <atTerm>field</atTerm>
              <text> is optional and it is only relevant when the value of </text>
              <atName resolved="com.vmware.vapi.std.interposition.InvocationResult.resultType" member="true" tag="name">#resultType</atName>
              <text> is </text>
              <atLink resolved="com.vmware.vapi.std.interposition.InvocationResult.ResultType.ERROR_RESULT" member="true">ResultType#ERROR_RESULT</atLink>
              <text>.</text>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Error result value.</text>
          </description>
        </doc>
        <metadata>
          <property name="UnionCase" type="java.util.Map">
            <entry key="tag" type="java.lang.String">resultType</entry>
            <entry key="value" type="java.lang.String">ERROR_RESULT</entry>
          </property>
        </metadata>
      </attribute>
    </structure>
    <structure name="SecurityPrincipal" namespace="com.vmware.vapi.std.interposition" fingerprint="b50af0620bee11cbe4812966735e22a16cd1f99c">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>VMODL equivalent of com.vmware.vapi.security.PrincipalId.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>VMODL equivalent of com.vmware.vapi.security.PrincipalId.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
      </metadata>
      <attribute name="name">
        <type primitive="String"/>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Principal name.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Principal name.</text>
          </description>
        </doc>
      </attribute>
      <attribute name="domain">
        <type generic="Optional">
          <type primitive="String"/>
        </type>
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Principal domain.</text>
            </docModel>
          </descriptionModel>
          <contentModel type="optionalReason">
            <docModel>
              <text>Domain is optional in </text>
              <atCode>com.vmware.vapi.security.PrincipalId</atCode>
            </docModel>
          </contentModel>
          <description index="0">
            <text>Principal domain.</text>
          </description>
          <content type="optionalReason">
            <text>Domain is optional in {@code com.vmware.vapi.security.PrincipalId}</text>
          </content>
        </doc>
      </attribute>
    </structure>
  </package>
  <package name="com.vmware.vapi.std.introspection" fingerprint="446f0c4d5b7f5f7cf74c9c4c97899825acb4bd10">
    <doc>
      <descriptionModel index="0">
        <docModel>
          <text>The </text>
          <atLink resolved="com.vmware.vapi.std.introspection" pkg="true">com.vmware.vapi.std.introspection</atLink>
          <text> </text>
          <atTerm>package</atTerm>
          <text> provides </text>
          <atTerm>services</atTerm>
          <text> that expose basic information about the vAPI </text>
          <atTerm>services</atTerm>
          <text> registered with a vAPI provider.</text>
        </docModel>
      </descriptionModel>
      <description index="0">
        <text>The {@link com.vmware.vapi.std.introspection} {@term package} provides</text>
        <text>{@term services} that expose basic information about the vAPI</text>
        <text>{@term services} registered with a vAPI provider.</text>
      </description>
    </doc>
    <service name="Operation" namespace="com.vmware.vapi.std.introspection" fingerprint="47639924026823614409404d78d00d7737340c2a">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atLink resolved="com.vmware.vapi.std.introspection.Operation" type="true">Operation</atLink>
            <text> service provides operations to retrieve information about the operations present in a vAPI service.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@link Operation} service provides operations to retrieve</text>
          <text>information about the operations present in a vAPI service.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
      </metadata>
      <structure name="DataDefinition" namespace="com.vmware.vapi.std.introspection.Operation" fingerprint="e0e4e6834c7e5095804abddd177db0b19525a924">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>The </text>
              <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition" type="true">DataDefinition</atLink>
              <text> structure describes a vAPI data type.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>The {@link DataDefinition} structure describes a vAPI data type.</text>
          </description>
        </doc>
        <enumeration name="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" fingerprint="15c380149b686ad862ac4b4e8d99fe7ecc32bbcb">
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>The </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType" type="true">DataType</atLink>
                <text> enumeration provides values representing the data types supported by the vAPI infrastructure.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>The {@link DataType} enumeration provides values representing the data types</text>
              <text>supported by the vAPI infrastructure.</text>
            </description>
          </doc>
          <constant name="BINARY">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a binary type.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a binary type.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="BOOLEAN">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a boolean type. The possible values are True and False equivalent of the language used to invoke this operation.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a boolean type. The possible values are</text>
                <text>True and False equivalent of the language used to invoke</text>
                <text>this operation.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="DOUBLE">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a double type. It is a 64 bit floating point number.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a double type. It is a 64 bit floating point</text>
                <text>number.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="DYNAMIC_STRUCTURE">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a dynamic structure. This means, any data of type </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.STRUCTURE" member="true">DataType#STRUCTURE</atLink>
                  <text> can be used.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a dynamic structure. This means, any data of type</text>
                <text>{@link DataType#STRUCTURE} can be used.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="ERROR">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a specific error type.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a specific error type.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="ANY_ERROR">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is arbitrary error type. This means, any data of type </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.ERROR" member="true">DataType#ERROR</atLink>
                  <text> can be used.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is arbitrary error type. This means, any data of type</text>
                <text>{@link DataType#ERROR} can be used.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="LIST">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a list data type. Any value of this type can have zero or more elements in the list.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a list data type. Any value of this type can have zero</text>
                <text>or more elements in the list.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="LONG">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a long data type. It is a 64 bit signed integer number.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a long data type. It is a 64 bit signed integer number.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="OPAQUE">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is an opaque type. This means, data of any </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType" type="true">DataType</atLink>
                  <text> can be used.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is an opaque type. This means, data of any {@link DataType}</text>
                <text>can be used.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="OPTIONAL">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is an optional data type. Any value of this type can be null.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is an optional data type. Any value of this type can be null.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="SECRET">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a secret data type. This is used for sensitive information. The server will not log any data of this type and if possible wipe the data from the memory after usage.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a secret data type. This is used for sensitive information. The</text>
                <text>server will not log any data of this type and if possible wipe the data from</text>
                <text>the memory after usage.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="STRING">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a string data type. This is a unicode string.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a string data type. This is a unicode string.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="STRUCTURE">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a structure data type. A structure has string identifier and a set of fields with corresponding values.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a structure data type. A structure has string identifier and a set of fields</text>
                <text>with corresponding values.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="STRUCTURE_REF">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a structure reference. This is used to break circular dependencies in the type references. This just has a string identifier of the structure. Clients have to maintain a list of structures already visited and use that to resolve this reference.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a structure reference. This is used to break circular dependencies in the</text>
                <text>type references. This just has a string identifier of the structure. Clients have to maintain</text>
                <text>a list of structures already visited and use that to resolve this reference.</text>
              </description>
            </doc>
            <value/>
          </constant>
          <constant name="VOID">
            <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
            <doc>
              <descriptionModel index="0">
                <docModel>
                  <text>Indicates the value is a void data type.</text>
                </docModel>
              </descriptionModel>
              <description index="0">
                <text>Indicates the value is a void data type.</text>
              </description>
            </doc>
            <value/>
          </constant>
        </enumeration>
        <attribute name="type">
          <type reference="DataType" namespace="com.vmware.vapi.std.introspection.Operation.DataDefinition" target="ENUMERATION" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Data type of the value.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Data type of the value.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionTag" type="java.lang.Boolean">true</property>
          </metadata>
        </attribute>
        <attribute name="elementDefinition">
          <type reference="DataDefinition" namespace="com.vmware.vapi.std.introspection.Operation" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Contains the element definition for generic data types like List and Optional.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.type" member="true" tag="name">#type</atName>
                <text> is one of </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.OPTIONAL" member="true">DataType#OPTIONAL</atLink>
                <text> or </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.LIST" member="true">DataType#LIST</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Contains the element definition for generic data types like List and Optional.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.util.List">
                <item type="java.lang.String">OPTIONAL</item>
                <item type="java.lang.String">LIST</item>
              </entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="name">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Fully qualified name of the structure.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.type" member="true" tag="name">#type</atName>
                <text> is one of </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.STRUCTURE" member="true">DataType#STRUCTURE</atLink>
                <text>, </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.STRUCTURE_REF" member="true">DataType#STRUCTURE_REF</atLink>
                <text>, or </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.ERROR" member="true">DataType#ERROR</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Fully qualified name of the structure.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.util.List">
                <item type="java.lang.String">STRUCTURE</item>
                <item type="java.lang.String">STRUCTURE_REF</item>
                <item type="java.lang.String">ERROR</item>
              </entry>
            </property>
          </metadata>
        </attribute>
        <attribute name="fields">
          <type generic="Map">
            <type primitive="String"/>
            <type reference="DataDefinition" namespace="com.vmware.vapi.std.introspection.Operation" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Fields of the structure type. The key of the map is the canonical name of the field and the value is the </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition" type="true">DataDefinition</atLink>
                <text> for the field. The order of the structure fields defined in IDL is not maintained by the </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation" type="true">Operation</atLink>
                <text> service.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="optionalReason">
              <docModel>
                <text>This </text>
                <atTerm>field</atTerm>
                <text> is optional and it is only relevant when the value of </text>
                <atName resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.type" member="true" tag="name">#type</atName>
                <text> is one of </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.STRUCTURE" member="true">DataType#STRUCTURE</atLink>
                <text> or </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.ERROR" member="true">DataType#ERROR</atLink>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Fields of the structure type. The key of the map is the canonical name of the field</text>
              <text>and the value is the {@link DataDefinition} for the field. The order of the structure fields</text>
              <text>defined in IDL is not maintained by the {@link Operation} service.</text>
            </description>
          </doc>
          <metadata>
            <property name="UnionCase" type="java.util.Map">
              <entry key="tag" type="java.lang.String">type</entry>
              <entry key="value" type="java.util.List">
                <item type="java.lang.String">STRUCTURE</item>
                <item type="java.lang.String">ERROR</item>
              </entry>
            </property>
          </metadata>
        </attribute>
      </structure>
      <structure name="Info" namespace="com.vmware.vapi.std.introspection.Operation" fingerprint="f422be0cbd3dda1a8a59df334f735b4aaa40e1a6">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about a vAPI operation.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Information about a vAPI operation.</text>
          </description>
        </doc>
        <attribute name="inputDefinition">
          <type reference="DataDefinition" namespace="com.vmware.vapi.std.introspection.Operation" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition" type="true">DataDefinition</atLink>
                <text> describing the operation input. </text>
                <paragraph>
                  <text> The </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.type" member="true">DataDefinition#type</atLink>
                  <text> of this field will be </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.STRUCTURE" member="true">DataDefinition.DataType#STRUCTURE</atLink>
                  <text>. The keys of </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.fields" member="true">DataDefinition#fields</atLink>
                  <text> are the names of the operation parameters, and the values of </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.fields" member="true">DataDefinition#fields</atLink>
                  <text> describe the type of the operation parameters.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>{@link DataDefinition} describing the operation input.</text>
              <text>&lt;p&gt;</text>
              <text>The {@link DataDefinition#type} of this field will be</text>
              <text>{@link DataDefinition.DataType#STRUCTURE}. The keys of</text>
              <text>{@link DataDefinition#fields} are the names of the operation</text>
              <text>parameters, and the values of {@link DataDefinition#fields}</text>
              <text>describe the type of the operation parameters.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="outputDefinition">
          <type reference="DataDefinition" namespace="com.vmware.vapi.std.introspection.Operation" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition" type="true">DataDefinition</atLink>
                <text> describing the operation output.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>{@link DataDefinition} describing the operation output.</text>
            </description>
          </doc>
        </attribute>
        <attribute name="errorDefinitions">
          <type generic="List">
            <type reference="DataDefinition" namespace="com.vmware.vapi.std.introspection.Operation" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Operation.DataDefinition"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>List of </text>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition" type="true">DataDefinition</atLink>
                <text> describing the errors that the operation might report. </text>
                <paragraph>
                  <text> The </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.type" member="true">DataDefinition#type</atLink>
                  <text> of every element in this list will be </text>
                  <atLink resolved="com.vmware.vapi.std.introspection.Operation.DataDefinition.DataType.ERROR" member="true">DataDefinition.DataType#ERROR</atLink>
                  <text>.</text>
                </paragraph>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>List of {@link DataDefinition} describing the errors that the operation</text>
              <text>might report.</text>
              <text>&lt;p&gt;</text>
              <text>The {@link DataDefinition#type} of every element in this list will be</text>
              <text>{@link DataDefinition.DataType#ERROR}.</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <operation name="list" fingerprint="0ec5f18185d98d57a0cf71f5b3c366de18bc63f3">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the set of operation identifiers for a given vAPI service.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the set of operation identifiers for a given vAPI service.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>service identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>service identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the service identifier does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the service identifier does not exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type generic="Set">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>set of operation identifiers for a given vAPI service.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>set of operation identifiers for a given vAPI service.</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="14550224737126c9b6e7061c9d01439c8c44ba85">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the </text>
              <atLink resolved="com.vmware.vapi.std.introspection.Operation.Info" type="true">Info</atLink>
              <text> for a given vAPI operation.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the {@link Info} for a given vAPI operation.</text>
          </description>
        </doc>
        <parameter name="serviceId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>service identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>service identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
          </metadata>
        </parameter>
        <parameter name="operationId">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>operation identifier.</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>operation identifier.</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the operation identifier does not exist.</text>
              </docModel>
            </descriptionModel>
            <descriptionModel index="1">
              <docModel>
                <text>If the service identifier does not exist.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the operation identifier does not exist.</text>
            </description>
            <description index="1">
              <text>If the service identifier does not exist.</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.std.introspection.Operation" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Operation.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <atLink resolved="com.vmware.vapi.std.introspection.Operation.Info" type="true">Info</atLink>
                <text> for a given vAPI operation.</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>{@link Info} for a given vAPI operation.</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Provider" namespace="com.vmware.vapi.std.introspection" fingerprint="8249e35c01c837259529457c5a7cbc12c9471332">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atLink resolved="com.vmware.vapi.std.introspection.Provider" type="true">Provider</atLink>
            <text> service provides operations to retrieve information about a vAPI Provider. A provider is a container that exposes one or more vAPI services.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@link Provider} service provides operations to retrieve information about a</text>
          <text>vAPI Provider. A provider is a container that exposes one or more vAPI services.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.provider</property>
      </metadata>
      <structure name="Info" namespace="com.vmware.vapi.std.introspection.Provider" fingerprint="52394a07e54e5aeea38c3d676969c4a3e711ac1a">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about a vAPI provider</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Information about a vAPI provider</text>
          </description>
        </doc>
        <attribute name="id">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Identifier of the provider</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>When clients pass a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>parameter</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.provider</atCode>
                <text>. When </text>
                <atTerm>operations</atTerm>
                <text> return a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>result</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> will be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.provider</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Identifier of the provider</text>
            </description>
            <content type="metadata">
              <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
              <text>the {@term field} must be an identifier for the resource type: {@code com.vmware.vapi.provider}.</text>
              <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
              <text>the {@term field} will be an identifier for the resource type: {@code com.vmware.vapi.provider}.</text>
            </content>
          </doc>
        </attribute>
        <attribute name="checksum">
          <type primitive="String"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Checksum of the information present in the provider. </text>
                <paragraph>
                  <text> Clients can use this information to check if the service information has changed. When a new service is added or removed (or) one of the existing service information is modified, the value of the checksum changes. </text>
                </paragraph>
                <paragraph>
                  <text> The information used to calculate the checksum includes: </text>
                </paragraph>
                <ul>
                  <text> </text>
                  <li>
                    <text>service identifiers</text>
                  </li>
                  <text> </text>
                  <li>
                    <text>operation identifiers inside the service</text>
                  </li>
                  <text> </text>
                  <li>
                    <text>input, output and error definitions of an operation</text>
                  </li>
                  <text> </text>
                </ul>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>Checksum of the information present in the provider.</text>
              <text>&lt;p&gt;</text>
              <text>Clients can use this information to check if the service information has changed.</text>
              <text>When a new service is added or removed (or) one of the existing service information</text>
              <text>is modified, the value of the checksum changes.</text>
              <text>&lt;p&gt;</text>
              <text>The information used to calculate the checksum includes:</text>
              <text>&lt;ul&gt;</text>
              <text>&lt;li&gt;service identifiers&lt;/li&gt;</text>
              <text>&lt;li&gt;operation identifiers inside the service&lt;/li&gt;</text>
              <text>&lt;li&gt;input, output and error definitions of an operation&lt;/li&gt;</text>
              <text>&lt;/ul&gt;</text>
            </description>
          </doc>
        </attribute>
      </structure>
      <operation name="get" fingerprint="583240d0fb2850c19182ee3ae6dcae3d4b8897b0">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns a </text>
              <atLink resolved="com.vmware.vapi.std.introspection.Provider.Info" type="true">Info</atLink>
              <text> describing the vAPI provider on which the operation is invoked</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns a {@link Info} describing the vAPI provider on which</text>
            <text>the operation is invoked</text>
          </description>
        </doc>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.std.introspection.Provider" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Provider.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <atLink resolved="com.vmware.vapi.std.introspection.Provider.Info" type="true">Info</atLink>
                <text> describing the vAPI provider on which the operation is invoked</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>{@link Info} describing the vAPI provider on which the</text>
              <text>operation is invoked</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
    <service name="Service" namespace="com.vmware.vapi.std.introspection" fingerprint="86271835397ba73652457158a471acd0b0f5a7b4">
      <doc>
        <descriptionModel index="0">
          <docModel>
            <text>The </text>
            <atLink resolved="com.vmware.vapi.std.introspection.Service" type="true">Service</atLink>
            <text> service provides operations to retrieve information about the services exposed by a vAPI provider. A provider is a container that exposes one or more vAPI services.</text>
          </docModel>
        </descriptionModel>
        <description index="0">
          <text>The {@link Service} service provides operations to retrieve information about the</text>
          <text>services exposed by a vAPI provider. A provider is a container that exposes one or</text>
          <text>more vAPI services.</text>
        </description>
      </doc>
      <metadata>
        <property name="Export" type="java.lang.Boolean">true</property>
        <property name="Resource" type="java.lang.String">com.vmware.vapi.service</property>
      </metadata>
      <structure name="Info" namespace="com.vmware.vapi.std.introspection.Service" fingerprint="eb4034655706d6b47b403266f9568954b1dbf32b">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Information about a vAPI service</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Information about a vAPI service</text>
          </description>
        </doc>
        <attribute name="operations">
          <type generic="Set">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>Set of identifiers of operations present in the service</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>When clients pass a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>parameter</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> must contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>. When </text>
                <atTerm>operations</atTerm>
                <text> return a value of this </text>
                <atTerm>structure</atTerm>
                <text> as a </text>
                <atTerm>result</atTerm>
                <text>, the </text>
                <atTerm>field</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.operation</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>Set of identifiers of operations present in the service</text>
            </description>
            <content type="metadata">
              <text>When clients pass a value of this {@term structure} as a {@term parameter}, </text>
              <text>the {@term field} must contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
              <text>When {@term operations} return a value of this {@term structure} as a {@term result}, </text>
              <text>the {@term field} will contain identifiers for the resource type: {@code com.vmware.vapi.operation}.</text>
            </content>
          </doc>
          <metadata>
            <property name="Resource" type="java.lang.String">com.vmware.vapi.operation</property>
          </metadata>
        </attribute>
      </structure>
      <operation name="list" fingerprint="208c741532e61eccf25febb07b0fbefd734057ef">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the set of service identifiers.</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the set of service identifiers.</text>
          </description>
        </doc>
        <result>
          <type generic="Set">
            <type primitive="ID"/>
          </type>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>set of service identifiers</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>result</atTerm>
                <text> will contain identifiers for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>set of service identifiers</text>
            </description>
            <content type="metadata">
              <text>The {@term result} will contain identifiers for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </result>
      </operation>
      <operation name="get" fingerprint="1da1ab048a589ba9b8374e3251ffbefc5963dac9">
        <doc>
          <descriptionModel index="0">
            <docModel>
              <text>Returns the </text>
              <atLink resolved="com.vmware.vapi.std.introspection.Service.Info" type="true">Info</atLink>
              <text> for the specified service</text>
            </docModel>
          </descriptionModel>
          <description index="0">
            <text>Returns the {@link Info} for the specified service</text>
          </description>
        </doc>
        <parameter name="id">
          <type primitive="ID"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>service identifier</text>
              </docModel>
            </descriptionModel>
            <contentModel type="metadata">
              <docModel>
                <text>The </text>
                <atTerm>parameter</atTerm>
                <text> must be an identifier for the resource type: </text>
                <atCode>com.vmware.vapi.service</atCode>
                <text>.</text>
              </docModel>
            </contentModel>
            <description index="0">
              <text>service identifier</text>
            </description>
            <content type="metadata">
              <text>The {@term parameter} must be an identifier for the resource type: {@code com.vmware.vapi.service}.</text>
            </content>
          </doc>
        </parameter>
        <error name="NotFound">
          <type reference="NotFound" namespace="com.vmware.vapi.std.errors" target="STRUCTURE" declaration="com.vmware.vapi.std.errors.NotFound"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <text>If the service identifier does not exist</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>If the service identifier does not exist</text>
            </description>
          </doc>
        </error>
        <result>
          <type reference="Info" namespace="com.vmware.vapi.std.introspection.Service" target="STRUCTURE" declaration="com.vmware.vapi.std.introspection.Service.Info"/>
          <doc>
            <descriptionModel index="0">
              <docModel>
                <atLink resolved="com.vmware.vapi.std.introspection.Service.Info" type="true">Info</atLink>
                <text> for the specified service</text>
              </docModel>
            </descriptionModel>
            <description index="0">
              <text>{@link Info} for the specified service</text>
            </description>
          </doc>
        </result>
      </operation>
    </service>
  </package>
</model>
