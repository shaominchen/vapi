{
    "author": {
        "name": "com.vmware.vapi.idl.model.tools.JsonIdlWriter",
        "version": "2.6.0.4750157"
    },
    "exports": {
        "name": "com.vmware.vapi.test",
        "type": "exports",
        "packages": [
        ]
    },
    "imports": [
        {
            "name": "com.vmware.vapi.std",
            "type": "imports",
            "packages": [
                {
                    "name": "com.vmware.vapi.std",
                    "structures": [
                        {
                            "name": "AuthenticationScheme",
                            "constants": {
                                "NO_AUTHENTICATION": "NO_AUTHENTICATION",
                                "SAML_BEARER_TOKEN": "SAML_BEARER_TOKEN",
                                "SAML_HOK_TOKEN": "SAML_HOK_TOKEN",
                                "SESSION_ID": "SESSION_ID",
                                "USER_PASSWORD": "USER_PASSWORD",
                                "OAUTH_ACCESS_TOKEN": "OAUTH_ACCESS_TOKEN"
                            }
                        },
                        {
                            "name": "DynamicID"
                        },
                        {
                            "name": "LocalizableMessage"
                        }
                    ]
                },
                {
                    "name": "com.vmware.vapi.std.errors",
                    "structures": [
                        {
                            "name": "ArgumentLocations"
                        },
                        {
                            "name": "FileLocations"
                        },
                        {
                            "name": "TransientIndication"
                        }
                    ],
                    "errors": [
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "AlreadyExists"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "AlreadyInDesiredState"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "Canceled"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "ConcurrentChange"
                        },
                        {
                            "parent": "Exception",
                            "name": "Error"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "FeatureInUse"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "InternalServerError"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "InvalidArgument"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "InvalidElementConfiguration"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "InvalidElementType"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "InvalidRequest"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "NotAllowedInCurrentState"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "NotFound"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "OperationNotFound"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "ResourceBusy"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "ResourceInUse"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "ResourceInaccessible"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "ServiceUnavailable"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "TimedOut"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "UnableToAllocateResource"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "Unauthenticated"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "Unauthorized"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "UnexpectedInput"
                        },
                        {
                            "parent": "com.vmware.vapi.std.errors.Error",
                            "name": "Unsupported"
                        }
                    ]
                },
                {
                    "name": "com.vmware.vapi.std.interposition",
                    "structures": [
                        {
                            "name": "InvocationRequest"
                        },
                        {
                            "name": "InvocationResult"
                        },
                        {
                            "name": "SecurityPrincipal"
                        }
                    ]
                }
            ]
        }
    ],
    "privilege": {
        "component": {
            "name": "com.vmware.vapi.test"
        }
    },
    "authentication": {
        "component": {
            "name": "com.vmware.vapi.test"
        }
    },
    "routing": {
        "component": {
            "name": "com.vmware.vapi.test"
        }
    },
    "cli": [
        {
            "path": "com.vmware.vapi",
            "name": "test",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "echo",
            "type": "namespace",
            "description": "vAPI test interface for integration tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testvoid",
            "type": "command",
            "description": "void operation",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_void"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testboolean",
            "type": "command",
            "description": "echo a Boolean value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_boolean"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststring",
            "type": "command",
            "description": "echo a String value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_string"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testlong",
            "type": "command",
            "description": "echo a Long value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_long"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testdouble",
            "type": "command",
            "description": "echo a Double value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "double",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_double"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testbinary",
            "type": "command",
            "description": "echo a Binary value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "binary",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_binary"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testopaque",
            "type": "command",
            "description": "echo an Opaque value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "opaque",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_opaque"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testdatetime",
            "type": "command",
            "description": "echo a DateTime value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "datetime",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_date_time"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testuri",
            "type": "command",
            "description": "echo an URI value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "uri",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_uri"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testsecret",
            "type": "command",
            "description": "echo a Secret value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "secret",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_secret"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testenum",
            "type": "command",
            "description": "echo an enumeration value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "com.vmware.vapi.test.echo.test_enum",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_enum"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testid",
            "type": "command",
            "description": "echo an ID value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_id"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testbooleanlist",
            "type": "command",
            "description": "echo List of Boolean",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "boolean",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_boolean_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststringlist",
            "type": "command",
            "description": "echo List of String",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_string_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testlonglist",
            "type": "command",
            "description": "echo List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_long_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testdoublelist",
            "type": "command",
            "description": "echo List of Double",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "double",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_double_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testbinarylist",
            "type": "command",
            "description": "echo List of Binary",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "binary",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_binary_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testurilist",
            "type": "command",
            "description": "echo List of URI",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "uri",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_uri_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testsecretlist",
            "type": "command",
            "description": "echo List of Secret",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "secret",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_secret_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testdatetimelist",
            "type": "command",
            "description": "echo List of DateTime",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "datetime",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_date_time_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testenumlist",
            "type": "command",
            "description": "echo List of enum",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "com.vmware.vapi.test.echo.test_enum",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_enum_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testidlist",
            "type": "command",
            "description": "echo List of ID",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "id",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_id_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststructurelist",
            "type": "command",
            "description": "echo List of structures",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_structure_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testlonglistlist",
            "type": "command",
            "description": "echo List of List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_long_list_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testbooleanoptional",
            "type": "command",
            "description": "echo optional Boolean",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_boolean_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststringoptional",
            "type": "command",
            "description": "echo optional String",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_string_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testlongoptional",
            "type": "command",
            "description": "echo optional Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_long_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testdoubleoptional",
            "type": "command",
            "description": "echo optional Double",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "double",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_double_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testbinaryoptional",
            "type": "command",
            "description": "echo optional Binary",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "binary",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_binary_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testdatetimeoptional",
            "type": "command",
            "description": "echo optional DateTime",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "datetime",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_date_time_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testenumoptional",
            "type": "command",
            "description": "echo optional enum value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "com.vmware.vapi.test.echo.test_enum",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_enum_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testurioptional",
            "type": "command",
            "description": "echo optional URI",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "uri",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_uri_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testsecretoptional",
            "type": "command",
            "description": "echo optional Secret",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "secret",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_secret_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testidoptional",
            "type": "command",
            "description": "echo optional ID",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_id_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststructureoptional",
            "type": "command",
            "description": "echo optional structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_structure_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testlongoptionallist",
            "type": "command",
            "description": "echo optional List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "optional_list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_long_optional_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststructureoptionallist",
            "type": "command",
            "description": "echo optional List of structures",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_structure_optional_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testoptionallonglist",
            "type": "command",
            "description": "echo List of optional Long values",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list_optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_optional_long_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testoptionalstringlist",
            "type": "command",
            "description": "echo List of optional String values",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": "list_optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_optional_string_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testoptionalstructurelist",
            "type": "command",
            "description": "echo List of optional structures",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_optional_structure_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testoptionallonglistlist",
            "type": "command",
            "description": "echo List of optional List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list_optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_optional_long_list_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststructure",
            "type": "command",
            "description": "echo structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "boolean-field",
                        "short_option": "",
                        "field_name": "input.boolean_field",
                        "description": "boolean field",
                        "type": "boolean",
                        "generic": ""
                    },
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "long-field",
                        "short_option": "",
                        "field_name": "input.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "double-field",
                        "short_option": "",
                        "field_name": "input.double_field",
                        "description": "double field",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "date-time-field",
                        "short_option": "",
                        "field_name": "input.date_time_field",
                        "description": "DateTime field",
                        "type": "datetime",
                        "generic": ""
                    },
                    {
                        "long_option": "uri-field",
                        "short_option": "",
                        "field_name": "input.uri_field",
                        "description": "URI field",
                        "type": "uri",
                        "generic": ""
                    },
                    {
                        "long_option": "secret-field",
                        "short_option": "",
                        "field_name": "input.secret_field",
                        "description": "Secret field",
                        "type": "secret",
                        "generic": ""
                    },
                    {
                        "long_option": "enum-field",
                        "short_option": "",
                        "field_name": "input.enum_field",
                        "description": "field using enum",
                        "type": "com.vmware.vapi.test.echo.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "list-primitive-field",
                        "short_option": "",
                        "field_name": "input.list_primitive_field",
                        "description": "list field",
                        "type": "string",
                        "generic": "list"
                    },
                    {
                        "long_option": "optional-primitive-field",
                        "short_option": "",
                        "field_name": "input.optional_primitive_field",
                        "description": "optional String field",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "structure-field-string-field",
                        "short_option": "",
                        "field_name": "input.structure_field.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_complex",
                        "output_fields": [
                            {
                                "field_name": "boolean_field",
                                "display_name": "BooleanField"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            },
                            {
                                "field_name": "long_field",
                                "display_name": "LongField"
                            },
                            {
                                "field_name": "double_field",
                                "display_name": "DoubleField"
                            },
                            {
                                "field_name": "date_time_field",
                                "display_name": "DateTimeField"
                            },
                            {
                                "field_name": "uri_field",
                                "display_name": "UriField"
                            },
                            {
                                "field_name": "secret_field",
                                "display_name": "SecretField"
                            },
                            {
                                "field_name": "enum_field",
                                "display_name": "EnumField"
                            },
                            {
                                "field_name": "list_primitive_field",
                                "display_name": "ListPrimitiveField"
                            },
                            {
                                "field_name": "optional_primitive_field",
                                "display_name": "OptionalPrimitiveField"
                            },
                            {
                                "field_name": "structure_field",
                                "display_name": "StructureField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_structure"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testnestedstructure",
            "type": "command",
            "description": "echo nested structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "structure-field1-string-field",
                        "short_option": "",
                        "field_name": "input.structure_field1.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "structure-field2-string-field",
                        "short_option": "",
                        "field_name": "input.structure_field2.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_multiple_nested_structures",
                        "output_fields": [
                            {
                                "field_name": "structure_field1",
                                "display_name": "StructureField1"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            },
                            {
                                "field_name": "structure_field2",
                                "display_name": "StructureField2"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_nested_structure"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststandarderror",
            "type": "command",
            "description": "echo a standard vAPI error",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.errors.invalid_argument",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_standard_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststandarderrorlist",
            "type": "command",
            "description": "echo List of standard vAPI errors",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.errors.invalid_argument",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_standard_error_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststandarderroroptional",
            "type": "command",
            "description": "echo optional std error",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.errors.resource_in_use",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_standard_error_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "teststructurewithoptionallists",
            "type": "command",
            "description": "echo optional std error",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "list-of-optionals",
                        "short_option": "",
                        "field_name": "input.list_of_optionals",
                        "description": "List of optionals of type string field",
                        "type": "string",
                        "generic": "list_optional"
                    },
                    {
                        "long_option": "optional-list",
                        "short_option": "",
                        "field_name": "input.optional_list",
                        "description": "Optional list of string field",
                        "type": "string",
                        "generic": "optional_list"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.test_structure_with_optional_lists",
                        "output_fields": [
                            {
                                "field_name": "list_of_optionals",
                                "display_name": "ListOfOptionals"
                            },
                            {
                                "field_name": "optional_list",
                                "display_name": "OptionalList"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_structure_with_optional_lists"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echo",
            "name": "testemptystruct",
            "type": "command",
            "description": "echo empty struct",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo.empty_struct",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo",
                "operation_id": "test_empty_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "echoconstants",
            "type": "namespace",
            "description": "vAPI test interface for integration tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "echogenerics",
            "type": "namespace",
            "description": "vAPI test interface for integration tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testmap",
            "type": "command",
            "description": "Test for simple map as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testenummap",
            "type": "command",
            "description": "Test for map with Enum key as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_enum_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testurimap",
            "type": "command",
            "description": "Test for map with URI key as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_uri_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testcomplexmap",
            "type": "command",
            "description": "Test for complex map as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_complex_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testcomplexidmap",
            "type": "command",
            "description": "Test for complex map as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_complex_id_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testcomplexlongmap",
            "type": "command",
            "description": "Test for complex map as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_complex_long_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testset",
            "type": "command",
            "description": "Test for simple set as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_set"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testsetwithid",
            "type": "command",
            "description": "Test for simple set as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "id",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_set_with_id"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testsetwithlong",
            "type": "command",
            "description": "Test for simple set as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "long",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_set_with_long"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testsetwithenum",
            "type": "command",
            "description": "Test for set of enum as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "com.vmware.vapi.test.echo_generics.echo_enum",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_set_with_enum"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testsetwithuri",
            "type": "command",
            "description": "Test for set of URI as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "uri",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_set_with_uri"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echogenerics",
            "name": "testoptionalmap",
            "type": "command",
            "description": "Test optional map of string to string as argument and as return value.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_generics",
                "operation_id": "test_optional_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "echohasfieldsof",
            "type": "namespace",
            "description": "Specifies a test interface for VMODL2 @HasFieldsOf annotation."
        }
        ,
        {
            "path": "com.vmware.vapi.test.echohasfieldsof",
            "name": "testhasfieldsofstruct",
            "type": "command",
            "description": "echo HasFieldsOf structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-field",
                        "short_option": "",
                        "field_name": "input.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_has_fields_of",
                "operation_id": "test_has_fields_of_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echohasfieldsof",
            "name": "testnestedhasfieldsofstruct",
            "type": "command",
            "description": "echo NestedHasFieldsOf structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-field",
                        "short_option": "",
                        "field_name": "input.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-struct-field-long-field",
                        "short_option": "",
                        "field_name": "input.nested_struct_field.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-struct-field-string-field",
                        "short_option": "",
                        "field_name": "input.nested_struct_field.string_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.echo_has_fields_of",
                "operation_id": "test_nested_has_fields_of_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echohasfieldsof",
            "name": "testhasfieldsofstructfield",
            "type": "command",
            "description": "echo structure with HasFieldsOf field",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "long-field",
                        "short_option": "",
                        "field_name": "input.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-struct-field-long-field",
                        "short_option": "",
                        "field_name": "input.nested_struct_field.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-struct-field-string-field",
                        "short_option": "",
                        "field_name": "input.nested_struct_field.string_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo_has_fields_of.has_fields_of_struct",
                        "output_fields": [
                            {
                                "field_name": "long_field",
                                "display_name": "LongField"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.echo_has_fields_of.sample_struct",
                        "output_fields": [
                            {
                                "field_name": "long_field",
                                "display_name": "LongField"
                            },
                            {
                                "field_name": "nested_struct_field",
                                "display_name": "NestedStructField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo_has_fields_of",
                "operation_id": "test_has_fields_of_struct_field"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "echorecursive",
            "type": "namespace",
            "description": "vAPI test interface for integration tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test.echorecursive",
            "name": "teststructureselfrecursive",
            "type": "command",
            "description": "Echo structure.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "data",
                        "short_option": "",
                        "field_name": "input.data",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive",
                        "output_fields": [
                            {
                                "field_name": "data",
                                "display_name": "Data"
                            },
                            {
                                "field_name": "next",
                                "display_name": "Next"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo_recursive",
                "operation_id": "test_structure_self_recursive"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echorecursive",
            "name": "teststructureselfrecursiveoptional",
            "type": "command",
            "description": "Echo optional structure.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "data",
                        "short_option": "",
                        "field_name": "input.data",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive",
                        "output_fields": [
                            {
                                "field_name": "data",
                                "display_name": "Data"
                            },
                            {
                                "field_name": "next",
                                "display_name": "Next"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo_recursive",
                "operation_id": "test_structure_self_recursive_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.echorecursive",
            "name": "teststructureselfrecursivelist",
            "type": "command",
            "description": "Echo list of structures.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive",
                        "output_fields": [
                            {
                                "field_name": "data",
                                "display_name": "Data"
                            },
                            {
                                "field_name": "next",
                                "display_name": "Next"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.echo_recursive",
                "operation_id": "test_structure_self_recursive_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "errorreporting",
            "type": "namespace",
            "description": "vAPI test interface for end-to-end error reporting"
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testnoerror",
            "type": "command",
            "description": "Test operation that does not report an error",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_no_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testfiltererrors",
            "type": "command",
            "description": "Test error reporting filter - ApiProvider decorator (like Authnentication filter which reports different errors)",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "error-name",
                        "short_option": "",
                        "field_name": "error_name",
                        "description": "the cannonical name of the error to be reported by the filter",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_filter_errors"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testoperationspecificerror",
            "type": "command",
            "description": "Test operation that reports an operation-specific error (e.g",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "not used",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_operation_specific_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testoperationmultipleerrors",
            "type": "command",
            "description": "Test operation that declares multiple errors and reports different ones based on input",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "determines reported error (1:NotFound, 2:ResourceInUse, 3:InvalidElementType)",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_operation_multiple_errors"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testundeclarederror",
            "type": "command",
            "description": "Test operation that reports an error that isn't specified in the errors clause which should result in the runtime reporting an InternalServerError",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_undeclared_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testbindingspecificerror",
            "type": "command",
            "description": "Test operation that throws a programming language specific error which should result in the runtime reporting an InternalServerError",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_binding_specific_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreporting",
            "name": "testbaseerror",
            "type": "command",
            "description": "Test operation that reports the base Error type",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "report-derived-error",
                        "short_option": "",
                        "field_name": "report_derived_error",
                        "description": "if true the operation will report NotFound which clients will see as InternalServerError because NotFound is not listed in the throws clause",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting",
                "operation_id": "test_base_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "errorreportingasync",
            "type": "namespace",
            "description": "vAPI test interface for end-to-end error reporting"
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testnoerror",
            "type": "command",
            "description": "Test operation that does not report an error",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_no_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testfiltererrors",
            "type": "command",
            "description": "Test error reporting filter - ApiProvider decorator (like Authnentication filter which reports different errors)",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "error-name",
                        "short_option": "",
                        "field_name": "error_name",
                        "description": "the cannonical name of the error to be reported by the filter",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_filter_errors"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testoperationspecificerror",
            "type": "command",
            "description": "Test operation that reports an operation-specific error (e.g",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "not used",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_operation_specific_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testoperationmultipleerrors",
            "type": "command",
            "description": "Test operation that declares multiple errors and reports different ones based on input",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "determines reported error (1:NotFound, 2:ResourceInUse, 3:InvalidElementType)",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_operation_multiple_errors"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testundeclarederror",
            "type": "command",
            "description": "Test operation that reports an error that isn't specified in the errors clause which should result in the runtime reporting an InternalServerError",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_undeclared_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testbindingspecificerror",
            "type": "command",
            "description": "Test operation that throws a programming language specific error which should result in the runtime reporting an InternalServerError",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_binding_specific_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errorreportingasync",
            "name": "testbaseerror",
            "type": "command",
            "description": "Test operation that reports the base Error type",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "report-derived-error",
                        "short_option": "",
                        "field_name": "report_derived_error",
                        "description": "if true the operation will report NotFound which clients will see as InternalServerError because NotFound is not listed in the throws clause",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.error_reporting_async",
                "operation_id": "test_base_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "privilege",
            "type": "namespace",
            "description": "Sample test service for testing automatic generation of privilege documentation."
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "simpleoperation",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations without ID parameters.",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "simple_operation"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithidparameter",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a single ID parameter that has defined privilege.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "Operation to verify privilege documentation for operations with a single ID parameter that has defined privilege.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_id_parameter"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithidparameter2",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a single ID parameter that has default privilege.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "Operation to verify privilege documentation for operations with a single ID parameter that has default privilege.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_id_parameter2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithidparameters",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a ID parameters that has defined and default privileges.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "Operation to verify privilege documentation for operations with a ID parameters that has defined and default privileges.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "foreign-id",
                        "short_option": "",
                        "field_name": "foreign_id",
                        "description": "Operation to verify privilege documentation for operations with a ID parameters that has defined and default privileges.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_id_parameters"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithmapparameters1",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a map parameter whose key is ID.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id-map",
                        "short_option": "",
                        "field_name": "id_map",
                        "description": "Operation to verify privilege documentation for operations with a map parameter whose key is ID.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_map_parameters1"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithmapparameters2",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id-map",
                        "short_option": "",
                        "field_name": "id_map",
                        "description": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_map_parameters2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithmapparameters3",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id-map",
                        "short_option": "",
                        "field_name": "id_map",
                        "description": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_map_parameters3"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithmapparameters4",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id-map",
                        "short_option": "",
                        "field_name": "id_map",
                        "description": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_map_parameters4"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithstructparameter1",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "spec.id",
                        "description": "Primary key of the resource.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "foreign-id",
                        "short_option": "",
                        "field_name": "spec.foreign_id",
                        "description": "foreign id.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_struct_parameter1"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithstructparameter2",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "spec",
                        "short_option": "",
                        "field_name": "spec",
                        "description": "foreign id.",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "spec.id",
                        "description": "Primary key of the resource.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "foreign-id",
                        "short_option": "",
                        "field_name": "spec.foreign_id",
                        "description": "foreign id.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_struct_parameter2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithstructparameter3",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "spec",
                        "short_option": "",
                        "field_name": "spec",
                        "description": "foreign id.",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "spec.id",
                        "description": "Primary key of the resource.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "foreign-id",
                        "short_option": "",
                        "field_name": "spec.foreign_id",
                        "description": "foreign id.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_struct_parameter3"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithstructparameter4",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "spec",
                        "short_option": "",
                        "field_name": "spec",
                        "description": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_struct_parameter4"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationwithstructparameter5",
            "type": "command",
            "description": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields in map.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "map-field",
                        "short_option": "",
                        "field_name": "spec.map_field",
                        "description": "Map of IDs to get privileges assigned on.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_with_struct_parameter5"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationmix",
            "type": "command",
            "description": "Operation with a mix of IDL constructs.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "Map of IDs to get privileges assigned on.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "get-spec-id",
                        "short_option": "",
                        "field_name": "nested_spec.get_spec.id",
                        "description": "Primary key of the resource.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "get-spec-foreign-id",
                        "short_option": "",
                        "field_name": "nested_spec.get_spec.foreign_id",
                        "description": "foreign id.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "map-spec-map-field",
                        "short_option": "",
                        "field_name": "nested_spec.map_spec.map_field",
                        "description": "Map of IDs to get privileges assigned on.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_mix"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationmix2",
            "type": "command",
            "description": "Operation with a mix of IDL constructs.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "Map of IDs to get privileges assigned on.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "get-spec-id",
                        "short_option": "",
                        "field_name": "nested_map_spec.get_spec.id",
                        "description": "Primary key of the resource.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "get-spec-foreign-id",
                        "short_option": "",
                        "field_name": "nested_map_spec.get_spec.foreign_id",
                        "description": "foreign id.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "map-spec-map-field",
                        "short_option": "",
                        "field_name": "nested_map_spec.map_spec.map_field",
                        "description": "Map of IDs to get privileges assigned on.",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_mix2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationmix3",
            "type": "command",
            "description": "Operation with a mix of IDL constructs.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "device-type",
                        "short_option": "",
                        "field_name": "spec.device_type",
                        "description": "Device Type.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "device-id",
                        "short_option": "",
                        "field_name": "spec.device_id",
                        "description": "device ID.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_mix3"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.privilege",
            "name": "operationmix4",
            "type": "command",
            "description": "Operation with a mix of IDL constructs.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "device-type",
                        "short_option": "",
                        "field_name": "spec.device_type",
                        "description": "Device Type.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "device-id",
                        "short_option": "",
                        "field_name": "spec.device_id",
                        "description": "Device ID.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.privilege",
                "operation_id": "operation_mix4"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "routing",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.routing",
            "name": "routingtest",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.routing.routingtest",
            "name": "createvmincluster",
            "type": "command",
            "description": "Creates a new VM in a specified cluster",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "cluster-id",
                        "short_option": "",
                        "field_name": "cluster_id",
                        "description": "The name of the VM.",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "vm.id",
                        "description": "The id of the VM.",
                        "type": "id",
                        "generic": "optional"
                    },
                    {
                        "long_option": "name",
                        "short_option": "",
                        "field_name": "vm.name",
                        "description": "The name of the VM.",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.routing.routing_test",
                "operation_id": "create_vm_in_cluster"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.is",
            "name": "test",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "is",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.is",
            "name": "testmodels",
            "type": "namespace",
            "description": "Service which contains definitions of structures used to test the Inventory Service serializer."
        }
        ,
        {
            "path": "com.vmware.vapi.test.is",
            "name": "inventoryservicehelper",
            "type": "namespace",
            "description": "Service which contains definitions of structures used to test the Inventory Service serializer."
        }
        ,
        {
            "path": "com.vmware.vapi.sample",
            "name": "first",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first",
            "name": "count",
            "type": "namespace",
            "description": "A first example of the vAPI framework: a stateful counter."
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.count",
            "name": "inc",
            "type": "command",
            "description": "Increment the count.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.sample.first.count",
                "operation_id": "inc"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.count",
            "name": "dec",
            "type": "command",
            "description": "Decrement the count.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.sample.first.count",
                "operation_id": "dec"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.count",
            "name": "reset",
            "type": "command",
            "description": "Reset the count.",
            "node_metadata": {
                "service_id": "com.vmware.vapi.sample.first.count",
                "operation_id": "reset"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.count",
            "name": "get",
            "type": "command",
            "description": "Get the historical information the counter.",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.sample.first.count.properties",
                        "output_fields": [
                            {
                                "field_name": "counter",
                                "display_name": "Counter"
                            },
                            {
                                "field_name": "inc",
                                "display_name": "Inc"
                            },
                            {
                                "field_name": "dec",
                                "display_name": "Dec"
                            },
                            {
                                "field_name": "reset",
                                "display_name": "Reset"
                            },
                            {
                                "field_name": "lower_limit",
                                "display_name": "LowerLimit"
                            },
                            {
                                "field_name": "upper_limit",
                                "display_name": "UpperLimit"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.sample.first.count",
                "operation_id": "get"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.count",
            "name": "setlimits",
            "type": "command",
            "description": "Set the lower and\/or upper limit for the counter",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "lower-limit",
                        "short_option": "",
                        "field_name": "lower_limit",
                        "description": "Lower limit of the counter",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "upper-limit",
                        "short_option": "",
                        "field_name": "upper_limit",
                        "description": "Upper limit of the counter",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.sample.first.count",
                "operation_id": "set_limits"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.count",
            "name": "resetlimits",
            "type": "command",
            "description": "Reset the lower and upper limits for the counter",
            "node_metadata": {
                "service_id": "com.vmware.vapi.sample.first.count",
                "operation_id": "reset_limits"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first",
            "name": "mirror",
            "type": "namespace",
            "description": "A first example of the vAPI framework: simple string echo services."
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.mirror",
            "name": "echo",
            "type": "command",
            "description": "Echo the string from the server back to the caller.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "message",
                        "short_option": "",
                        "field_name": "message",
                        "description": "Message to echo.",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.sample.first.mirror",
                "operation_id": "echo"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.sample.first.mirror",
            "name": "sort",
            "type": "command",
            "description": "Sort strings.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "string",
                        "description": "Strings to sort.",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.sample.first.mirror",
                "operation_id": "sort"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "abort",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.abort",
            "name": "aborttestservice",
            "type": "namespace",
            "description": "vAPI client abort test interface for integration tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test.abort.aborttestservice",
            "name": "replaywithdelay",
            "type": "command",
            "description": "Test method that takes the specified amount of time (in seconds) to execut.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "delay-time",
                        "short_option": "",
                        "field_name": "delay_time",
                        "description": "specifies request execution time (in seconds)",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.abort.abort_test_service",
                "operation_id": "replay_with_delay"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "async",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.async",
            "name": "activationawareservice",
            "type": "namespace",
            "description": "Test service for activation tracking."
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.activationawareservice",
            "name": "testcancellable",
            "type": "command",
            "description": "Operation which performs a number of 100ms iterations and responds to cancel.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "iterations",
                        "short_option": "",
                        "field_name": "iterations",
                        "description": "number of 100ms iterations to perform",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.activation_aware_service",
                "operation_id": "test_cancellable"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async",
            "name": "asynchronous",
            "type": "namespace",
            "description": "Test service for asynchronous support."
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testvoid",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_void"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testvoidinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_void_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "teststring",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "some text",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_string"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "teststringinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "some text",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_string_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "teststandarderror",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_standard_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "teststandarderrorinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_standard_error_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "teststandarderrorthrowninline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_standard_error_thrown_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testunknownruntimeexception",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_unknown_runtime_exception"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testunknownruntimeexceptioninline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_unknown_runtime_exception_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testunknownruntimeexceptionthrowninline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_unknown_runtime_exception_thrown_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testactivationid",
            "type": "command",
            "description": "Operation which retrieves the activation id from the incoming execution context and returns it",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_activation_id"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testapplicationdata",
            "type": "command",
            "description": "Operation which retrieves a property from the application data of the incoming execution context and returns it",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "key",
                        "short_option": "",
                        "field_name": "key",
                        "description": "key of application property",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_application_data"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testprogressupdates",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "some text",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_progress_updates"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testsetresultandthrowinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_set_result_and_throw_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testmultiplesetresultinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_multiple_set_result_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testsetresultandseterrorinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_set_result_and_set_error_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testseterrorandthrowinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_set_error_and_throw_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testmultipleseterrorinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_multiple_set_error_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testseterrorandsetresultinline",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_set_error_and_set_result_inline"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testnullresult",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_null_result"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.async.asynchronous",
            "name": "testnullexception",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.async.asynchronous",
                "operation_id": "test_null_exception"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "cli",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli",
            "name": "collision",
            "type": "namespace",
            "description": "Class to simulate for cli option collisions"
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.collision",
            "name": "onecollision",
            "type": "command",
            "description": "one collision",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-2",
                        "short_option": "",
                        "field_name": "nested.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.cli.collision",
                "operation_id": "one_collision"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.collision",
            "name": "onecollisionreverse",
            "type": "command",
            "description": "one collision different order",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "nested.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-2",
                        "short_option": "",
                        "field_name": "field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.cli.collision",
                "operation_id": "one_collision_reverse"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.collision",
            "name": "twocollisions",
            "type": "command",
            "description": "two collisions",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-2",
                        "short_option": "",
                        "field_name": "nested.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-field",
                        "short_option": "",
                        "field_name": "nested_field",
                        "description": "nested filed",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.cli.collision",
                "operation_id": "two_collisions"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.collision",
            "name": "twocollisionsreverse",
            "type": "command",
            "description": "two collisions different order",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-field",
                        "short_option": "",
                        "field_name": "nested_field",
                        "description": "nested filed",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-2",
                        "short_option": "",
                        "field_name": "nested.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.cli.collision",
                "operation_id": "two_collisions_reverse"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.collision",
            "name": "twocollisions2",
            "type": "command",
            "description": "two collisions",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-2",
                        "short_option": "",
                        "field_name": "deep_nested.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-3",
                        "short_option": "",
                        "field_name": "deep.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.cli.collision",
                "operation_id": "two_collisions_2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.collision",
            "name": "twocollisionsnested",
            "type": "command",
            "description": "two collisions nested",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field-2",
                        "short_option": "",
                        "field_name": "deep.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "deep-field",
                        "short_option": "",
                        "field_name": "deep_nested.deep.field",
                        "description": "field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.cli.collision",
                "operation_id": "two_collisions_nested"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli",
            "name": "inputtypes",
            "type": "namespace",
            "description": "vAPI test interface for CLI input type tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.inputtypes",
            "name": "testnestedstructurewithlist",
            "type": "command",
            "description": "echo nested structure with list",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "structure-field1-long-field",
                        "short_option": "",
                        "field_name": "input.structure_field1.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "structure-field1-string-field",
                        "short_option": "",
                        "field_name": "input.structure_field1.string_field",
                        "description": "list of string field",
                        "type": "string",
                        "generic": "list"
                    },
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.cli.input_types.test_nested_structure_with_list",
                        "output_fields": [
                            {
                                "field_name": "structure_field1",
                                "display_name": "StructureField1"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.cli.input_types.test_structure_simple_list",
                        "output_fields": [
                            {
                                "field_name": "long_field",
                                "display_name": "LongField"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.cli.input_types",
                "operation_id": "test_nested_structure_with_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli",
            "name": "maps",
            "type": "namespace",
            "description": "Class to simulate for cli maps"
        }
        ,
        {
            "path": "com.vmware.vapi.test.cli.maps",
            "name": "returnmapnestedstructure",
            "type": "command",
            "description": "From given SimpleTestStructure returns MapNestedStructure structure by making the mapTestStruct property of SimpleTestStructure to map with key string and value SimpleTestStructure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "long-field",
                        "short_option": "",
                        "field_name": "input.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.cli.maps.simple_test_structure",
                        "output_fields": [
                            {
                                "field_name": "long_field",
                                "display_name": "LongField"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    },
                    {
                        "structure_id": "map-entry",
                        "output_fields": [
                            {
                                "field_name": "key",
                                "display_name": "Key"
                            },
                            {
                                "field_name": "value",
                                "display_name": "Value"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.cli.maps.map_nested_structure",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            },
                            {
                                "field_name": "map_test_struct",
                                "display_name": "MapTestStruct"
                            },
                            {
                                "field_name": "another_string_field",
                                "display_name": "AnotherStringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.cli.maps",
                "operation_id": "return_map_nested_structure"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "crud",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud",
            "name": "crudservice",
            "type": "namespace",
            "description": "Service for testing the CRUD templates"
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice",
            "name": "get",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "valid-result",
                        "short_option": "",
                        "field_name": "valid_result",
                        "description": "",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.crud.crud_object",
                        "output_fields": [
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            },
                            {
                                "field_name": "key",
                                "display_name": "Key"
                            },
                            {
                                "field_name": "value",
                                "display_name": "Value"
                            },
                            {
                                "field_name": "remove",
                                "display_name": "Remove"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service",
                "operation_id": "get"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice",
            "name": "create",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "key",
                        "short_option": "",
                        "field_name": "crud_object.key",
                        "description": "The key to be created",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "value",
                        "short_option": "",
                        "field_name": "crud_object.value",
                        "description": "The value corresponding to the key",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "remove",
                        "short_option": "",
                        "field_name": "crud_object.remove",
                        "description": "not used for updates",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service",
                "operation_id": "create"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice",
            "name": "createcrudobject2",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "key",
                        "short_option": "",
                        "field_name": "crud_object.key",
                        "description": "The key to be created",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "value",
                        "short_option": "",
                        "field_name": "crud_object.value",
                        "description": "The value corresponding to the key",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "remove",
                        "short_option": "",
                        "field_name": "crud_object.remove",
                        "description": "The value corresponding to the key",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service",
                "operation_id": "create_crud_object2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice",
            "name": "delete",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "The value corresponding to the key",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service",
                "operation_id": "delete"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice",
            "name": "update",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "crud_object.id",
                        "description": "ID of the CrudObject instance",
                        "type": "id",
                        "generic": "optional"
                    },
                    {
                        "long_option": "key",
                        "short_option": "",
                        "field_name": "crud_object.key",
                        "description": "The key to be created",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "value",
                        "short_option": "",
                        "field_name": "crud_object.value",
                        "description": "The value corresponding to the key",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service",
                "operation_id": "update"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud",
            "name": "crudservice2",
            "type": "namespace",
            "description": "Service for testing the CRUD templates used with HasFieldsOf"
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice2",
            "name": "create",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "not used for updates",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "key",
                        "short_option": "",
                        "field_name": "input.key",
                        "description": "The key to be created",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "value",
                        "short_option": "",
                        "field_name": "input.value",
                        "description": "The value corresponding to the key",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "remove",
                        "short_option": "",
                        "field_name": "input.remove",
                        "description": "not used for updates",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service2",
                "operation_id": "create"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.crud.crudservice2",
            "name": "update",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "value",
                        "short_option": "",
                        "field_name": "input.value",
                        "description": "optional field",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "required-field",
                        "short_option": "",
                        "field_name": "input.required_field",
                        "description": "required field",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.crud.crud_service2",
                "operation_id": "update"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "dynamicstructures",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.dynamicstructures",
            "name": "service1",
            "type": "namespace",
            "description": "Service1"
        }
        ,
        {
            "path": "com.vmware.vapi.test.dynamicstructures.service1",
            "name": "echo",
            "type": "command",
            "description": "Echo dynamic structure.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "struct-value-param",
                        "short_option": "",
                        "field_name": "struct_value_param",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.dynamic_structures.service1",
                "operation_id": "echo"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "enumerations",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.enumerations",
            "name": "echoenumerations",
            "type": "namespace",
            "description": "Test service which echoes various kinds of enums."
        }
        ,
        {
            "path": "com.vmware.vapi.test.enumerations.echoenumerations",
            "name": "testenumtoplevel",
            "type": "command",
            "description": "Echoes a value from an enum defined at top level scope.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "com.vmware.vapi.test.enumerations.test_enum",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.enumerations.echo_enumerations",
                "operation_id": "test_enum_top_level"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.enumerations.echoenumerations",
            "name": "testenumnestedinstruct",
            "type": "command",
            "description": "Echoes a value from an enum defined inside a top level structure.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "com.vmware.vapi.test.enumerations.test_struct.test_enum_nested_in_struct",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.enumerations.echo_enumerations",
                "operation_id": "test_enum_nested_in_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.enumerations.echoenumerations",
            "name": "testenumnestedinservice",
            "type": "command",
            "description": "Echoes a value from an enum defined inside another service.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "com.vmware.vapi.test.enumerations.test_service.test_enum_nested_in_service",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.enumerations.echo_enumerations",
                "operation_id": "test_enum_nested_in_service"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.enumerations.echoenumerations",
            "name": "testenumnestedinstructnestedinservice",
            "type": "command",
            "description": "Echoes a value from an enum defined inside a structure which is defined inside another service.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "com.vmware.vapi.test.enumerations.test_service.test_struct_nested_in_service.test_enum_nested_in_struct_nested_in_service",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.enumerations.echo_enumerations",
                "operation_id": "test_enum_nested_in_struct_nested_in_service"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.enumerations",
            "name": "testservice",
            "type": "namespace",
            "description": "Service for testing."
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "errors",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors",
            "name": "customerrorservice",
            "type": "namespace",
            "description": "A test service that uses custom errors "
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.customerrorservice",
            "name": "method",
            "type": "command",
            "description": "Test method which reports custom error.",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.errors.custom_error_service",
                "operation_id": "method"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.customerrorservice",
            "name": "echocustomerror",
            "type": "command",
            "description": "Echoes a custom error.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "input.str_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "date-time-field",
                        "short_option": "",
                        "field_name": "input.date_time_field",
                        "description": "DateTime field",
                        "type": "datetime",
                        "generic": ""
                    },
                    {
                        "long_option": "struct-field-dbl1",
                        "short_option": "",
                        "field_name": "input.struct_field.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct-field-str1",
                        "short_option": "",
                        "field_name": "input.struct_field.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct-field-id",
                        "short_option": "",
                        "field_name": "input.struct_field.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.errors.custom.custom_error",
                        "output_fields": [
                            {
                                "field_name": "str_field",
                                "display_name": "StrField"
                            },
                            {
                                "field_name": "date_time_field",
                                "display_name": "DateTimeField"
                            },
                            {
                                "field_name": "struct_field",
                                "display_name": "StructField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.custom_error_service",
                "operation_id": "echo_custom_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.customerrorservice",
            "name": "echocustomerrorlist",
            "type": "command",
            "description": "Echoes list of custom errors.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test input",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.errors.custom.custom_error",
                        "output_fields": [
                            {
                                "field_name": "str_field",
                                "display_name": "StrField"
                            },
                            {
                                "field_name": "date_time_field",
                                "display_name": "DateTimeField"
                            },
                            {
                                "field_name": "struct_field",
                                "display_name": "StructField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.custom_error_service",
                "operation_id": "echo_custom_error_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.customerrorservice",
            "name": "teststandarderroroptional",
            "type": "command",
            "description": "Echoes optional custim error.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "input.str_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "date-time-field",
                        "short_option": "",
                        "field_name": "input.date_time_field",
                        "description": "DateTime field",
                        "type": "datetime",
                        "generic": ""
                    },
                    {
                        "long_option": "struct-field-dbl1",
                        "short_option": "",
                        "field_name": "input.struct_field.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct-field-str1",
                        "short_option": "",
                        "field_name": "input.struct_field.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct-field-id",
                        "short_option": "",
                        "field_name": "input.struct_field.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.errors.custom.custom_error",
                        "output_fields": [
                            {
                                "field_name": "str_field",
                                "display_name": "StrField"
                            },
                            {
                                "field_name": "date_time_field",
                                "display_name": "DateTimeField"
                            },
                            {
                                "field_name": "struct_field",
                                "display_name": "StructField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.custom_error_service",
                "operation_id": "test_standard_error_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors",
            "name": "exceptionservice",
            "type": "namespace",
            "description": "Test service for Exception type"
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.exceptionservice",
            "name": "echoexception",
            "type": "command",
            "description": "Echoes an Exception.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "some Exception",
                        "type": "exception",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.errors.exception_service",
                "operation_id": "echo_exception"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.exceptionservice",
            "name": "echoexceptionoptional",
            "type": "command",
            "description": "Echoes an optional Exception.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "optional Exception",
                        "type": "exception",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.errors.exception_service",
                "operation_id": "echo_exception_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.exceptionservice",
            "name": "echoexceptionlist",
            "type": "command",
            "description": "Echoes an Exception list.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "Exception list",
                        "type": "exception",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.errors.exception_service",
                "operation_id": "echo_exception_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.exceptionservice",
            "name": "echocustomexception",
            "type": "command",
            "description": "Echoes a custom Exception.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "explanation",
                        "short_option": "",
                        "field_name": "input.explanation",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.errors.custom.custom_exception",
                        "output_fields": [
                            {
                                "field_name": "explanation",
                                "display_name": "Explanation"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.exception_service",
                "operation_id": "echo_custom_exception"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.exceptionservice",
            "name": "echoexceptionstruct",
            "type": "command",
            "description": "Echoes a structure which contains an Exception field.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "custom-exception-field-explanation",
                        "short_option": "",
                        "field_name": "input.custom_exception_field.explanation",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "exception-field",
                        "short_option": "",
                        "field_name": "input.exception_field",
                        "description": "Exception field",
                        "type": "exception",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.errors.custom.custom_exception",
                        "output_fields": [
                            {
                                "field_name": "explanation",
                                "display_name": "Explanation"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.errors.exception_service.exception_struct",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            },
                            {
                                "field_name": "custom_exception_field",
                                "display_name": "CustomExceptionField"
                            },
                            {
                                "field_name": "exception_field",
                                "display_name": "ExceptionField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.exception_service",
                "operation_id": "echo_exception_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.exceptionservice",
            "name": "reportcustomexception",
            "type": "command",
            "description": "Throws a user-defined Exception type.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "explanation",
                        "short_option": "",
                        "field_name": "input.explanation",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.exception_service",
                "operation_id": "report_custom_exception"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors",
            "name": "service1",
            "type": "namespace",
            "description": "Service1: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reporttoplevelerror",
            "type": "command",
            "description": "Refer to a top-level error defined the same file.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl2",
                        "short_option": "",
                        "field_name": "error.dbl2",
                        "description": "doc dbl2",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str2",
                        "short_option": "",
                        "field_name": "error.str2",
                        "description": "doc str2",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_top_level_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reporttoplevelerrorfq",
            "type": "command",
            "description": "Refer to a top-level error defined the same file with a FQ name.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl2",
                        "short_option": "",
                        "field_name": "error.dbl2",
                        "description": "doc dbl2",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str2",
                        "short_option": "",
                        "field_name": "error.str2",
                        "description": "doc str2",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_top_level_error_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reporttoplevelerrorinfile",
            "type": "command",
            "description": "Simple name used for top-level error type - OK, since it is in the same package.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "error.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "error.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_top_level_error_in_file"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reporttoplevelerrorinfilefq",
            "type": "command",
            "description": "FQ name used for error type in the same scope\/package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "error.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "error.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_top_level_error_in_file_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportnestederror",
            "type": "command",
            "description": "Simple name used for error type nested in this same service - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "error.str_field",
                        "description": "doc strField",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_nested_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportnestederrorfq",
            "type": "command",
            "description": "FQ name used for error type nested in this same service - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "error.str_field",
                        "description": "doc strField",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_nested_error_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportderivederror",
            "type": "command",
            "description": "Report an error (NestedError) that is derived from the declared error (TopLevelErrorInFile).",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "error.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "error.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_derived_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportstandarderror",
            "type": "command",
            "description": "Refer to a top-level error defined the same file and a standard error reported by the vAPI runtime using an imported name.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl2",
                        "short_option": "",
                        "field_name": "error.dbl2",
                        "description": "doc dbl2",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str2",
                        "short_option": "",
                        "field_name": "error.str2",
                        "description": "doc str2",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_standard_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportstandarderrorfq",
            "type": "command",
            "description": "Refer to a top-level error defined the same file and a standard error reported by the vAPI runtime using a fully qualified name.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl2",
                        "short_option": "",
                        "field_name": "error.dbl2",
                        "description": "doc dbl2",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str2",
                        "short_option": "",
                        "field_name": "error.str2",
                        "description": "doc str2",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_standard_error_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportambiguousnameerror",
            "type": "command",
            "description": "Refer to a locally-define error that has the same (unqualified) name as a standard error reported by the vAPI runtime.",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_ambiguous_name_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.service1",
            "name": "reportambiguousnameerrorfq",
            "type": "command",
            "description": "Use a fully-qualified name to refer to a locally-define error that has the same (unqualified) name as a standard error reported by the vAPI runtime.",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.errors.service1",
                "operation_id": "report_ambiguous_name_error_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors",
            "name": "another",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.another",
            "name": "service2",
            "type": "namespace",
            "description": "Service2: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.another.service2",
            "name": "reporttoplevelerrorimported",
            "type": "command",
            "description": "Report a top-level error type from another package - OK since it is imported.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl2",
                        "short_option": "",
                        "field_name": "error.dbl2",
                        "description": "doc dbl2",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str2",
                        "short_option": "",
                        "field_name": "error.str2",
                        "description": "doc str2",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.another.service2",
                "operation_id": "report_top_level_error_imported"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.another.service2",
            "name": "reporttoplevelextendingerror",
            "type": "command",
            "description": "Simple name used for a top-level error type from another package - OK since it is imported.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "error.str_field",
                        "description": "doc strField",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.another.service2",
                "operation_id": "report_top_level_extending_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.another.service2",
            "name": "reportnestedextendingerror",
            "type": "command",
            "description": "Report a nested error defined in this service that extends a top-level error defined in another package.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "error.str_field",
                        "description": "doc strField",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.another.service2",
                "operation_id": "report_nested_extending_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.another",
            "name": "service3",
            "type": "namespace",
            "description": "Service3: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors.another.service3",
            "name": "reporttoplevelerrorinfilefq",
            "type": "command",
            "description": "FQ name used for top-level error type from another package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "error.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "error.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.errors.another.service3",
                "operation_id": "report_top_level_error_in_file_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.errors",
            "name": "custom",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "id",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.id",
            "name": "dynamicidservice",
            "type": "namespace",
            "description": "Test the DynamicID handling in the metadata service\/client"
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.dynamicidservice",
            "name": "list",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.dynamic_ID",
                        "output_fields": [
                            {
                                "field_name": "type",
                                "display_name": "Type"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.id.dynamic_id_service",
                "operation_id": "list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.dynamicidservice",
            "name": "get",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "type",
                        "short_option": "",
                        "field_name": "id.type",
                        "description": "The type of resource being identified (for example com.acme.Person)",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id.id",
                        "description": "The identifier for a resource whose type is specified by DynamicID.type.",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.id.dynamic_id_service",
                "operation_id": "get"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.id",
            "name": "polymorphicresourceservice",
            "type": "namespace",
            "description": "vAPI test types for dynamic resource ID support"
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.polymorphicresourceservice",
            "name": "testdynamicidsupportwithouttypeholder",
            "type": "command",
            "description": "Test operation for polymorphic ID support.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "device-type",
                        "short_option": "",
                        "field_name": "device_type",
                        "description": "Test operation for polymorphic ID support.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "device-id",
                        "short_option": "",
                        "field_name": "device_id",
                        "description": "device ID",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.id.polymorphic_resource_service",
                "operation_id": "test_dynamic_id_support_without_type_holder"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.polymorphicresourceservice",
            "name": "testdynamicidsupport",
            "type": "command",
            "description": "Test operation for polymorphic ID support.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "device-type",
                        "short_option": "",
                        "field_name": "device_type",
                        "description": "device type",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "device-id",
                        "short_option": "",
                        "field_name": "device_id",
                        "description": "device ID",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.id.polymorphic_resource_service",
                "operation_id": "test_dynamic_id_support"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.polymorphicresourceservice",
            "name": "testmodelwithdynamicidsupport",
            "type": "command",
            "description": "Test operation for polymorphic ID support.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "model-id",
                        "short_option": "",
                        "field_name": "model.model_id",
                        "description": "model ID",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "device-type",
                        "short_option": "",
                        "field_name": "model.device_type",
                        "description": "device type",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "device-id",
                        "short_option": "",
                        "field_name": "model.device_id",
                        "description": "device ID",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.id.polymorphic_resource_service",
                "operation_id": "test_model_with_dynamic_id_support"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.polymorphicresourceservice",
            "name": "testoptionalmodelwithdynamicidsupport",
            "type": "command",
            "description": "test operation with optional model with polymorphic ID.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "model-id",
                        "short_option": "",
                        "field_name": "model.model_id",
                        "description": "model ID",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "device-type",
                        "short_option": "",
                        "field_name": "model.device_type",
                        "description": "device type",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "device-id",
                        "short_option": "",
                        "field_name": "model.device_id",
                        "description": "device ID",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.id.polymorphic_resource_service",
                "operation_id": "test_optional_model_with_dynamic_id_support"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.id.polymorphicresourceservice",
            "name": "applyvmpolicies",
            "type": "command",
            "description": "Test method for bug 1059199.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "vm-id",
                        "short_option": "",
                        "field_name": "vm_id",
                        "description": "VM ID",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "resource-id",
                        "short_option": "",
                        "field_name": "old_resource.resource_id",
                        "description": "resource ID",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "resource-type",
                        "short_option": "",
                        "field_name": "old_resource.resource_type",
                        "description": "resource type",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.id.polymorphic_resource_service",
                "operation_id": "apply_vm_policies"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "interop",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop",
            "name": "metadataecho",
            "type": "namespace",
            "description": "vAPI test interface for integration tests"
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testvoid",
            "type": "command",
            "description": "void operation",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_void"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testboolean",
            "type": "command",
            "description": "echo a Boolean value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_boolean"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststring",
            "type": "command",
            "description": "echo a String value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_string"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testlong",
            "type": "command",
            "description": "echo a Long value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_long"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testdouble",
            "type": "command",
            "description": "echo a Double value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "double",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_double"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testbinary",
            "type": "command",
            "description": "echo a Binary value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "binary",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_binary"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testopaque",
            "type": "command",
            "description": "echo an Opaque value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "opaque",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_opaque"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testdatetime",
            "type": "command",
            "description": "echo a DateTime value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "datetime",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_date_time"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testuri",
            "type": "command",
            "description": "echo an URI value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "uri",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_uri"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testsecret",
            "type": "command",
            "description": "echo a Secret value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "secret",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_secret"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testenum",
            "type": "command",
            "description": "echo an enumeration value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "com.vmware.vapi.test.interop.metadata_echo.test_enum",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_enum"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testid",
            "type": "command",
            "description": "echo an ID value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_id"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testbooleanlist",
            "type": "command",
            "description": "echo List of Boolean",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "boolean",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_boolean_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststringlist",
            "type": "command",
            "description": "echo List of String",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_string_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testlonglist",
            "type": "command",
            "description": "echo List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_long_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testdoublelist",
            "type": "command",
            "description": "echo List of Double",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "double",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_double_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testbinarylist",
            "type": "command",
            "description": "echo List of Binary",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "binary",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_binary_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testurilist",
            "type": "command",
            "description": "echo List of URI",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "uri",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_uri_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testsecretlist",
            "type": "command",
            "description": "echo List of Secret",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "secret",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_secret_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testdatetimelist",
            "type": "command",
            "description": "echo List of DateTime",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "datetime",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_date_time_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testenumlist",
            "type": "command",
            "description": "echo List of enum",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "com.vmware.vapi.test.interop.metadata_echo.test_enum",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_enum_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testidlist",
            "type": "command",
            "description": "echo List of ID",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "id",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_id_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststructurelist",
            "type": "command",
            "description": "echo List of structures",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_structure_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testlonglistlist",
            "type": "command",
            "description": "echo List of List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_long_list_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testbooleanoptional",
            "type": "command",
            "description": "echo optional Boolean",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_boolean_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststringoptional",
            "type": "command",
            "description": "echo optional String",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_string_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testlongoptional",
            "type": "command",
            "description": "echo optional Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_long_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testdoubleoptional",
            "type": "command",
            "description": "echo optional Double",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "double",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_double_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testbinaryoptional",
            "type": "command",
            "description": "echo optional Binary",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "binary",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_binary_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testdatetimeoptional",
            "type": "command",
            "description": "echo optional DateTime",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "datetime",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_date_time_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testenumoptional",
            "type": "command",
            "description": "echo optional enum value",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "com.vmware.vapi.test.interop.metadata_echo.test_enum",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_enum_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testurioptional",
            "type": "command",
            "description": "echo optional URI",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "uri",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_uri_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testsecretoptional",
            "type": "command",
            "description": "echo optional Secret",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "secret",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_secret_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testidoptional",
            "type": "command",
            "description": "echo optional ID",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_id_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststructureoptional",
            "type": "command",
            "description": "echo optional structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_structure_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testlongoptionallist",
            "type": "command",
            "description": "echo optional List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "optional_list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_long_optional_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststructureoptionallist",
            "type": "command",
            "description": "echo optional List of structures",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_structure_optional_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testoptionallonglist",
            "type": "command",
            "description": "echo List of optional Long values",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list_optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_optional_long_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testoptionalstringlist",
            "type": "command",
            "description": "echo List of optional String values",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "string",
                        "generic": "list_optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_optional_string_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testoptionalstructurelist",
            "type": "command",
            "description": "echo List of optional structures",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_optional_structure_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testoptionallonglistlist",
            "type": "command",
            "description": "echo List of optional List of Long",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "long",
                        "generic": "list_optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_optional_long_list_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststructure",
            "type": "command",
            "description": "echo structure",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "boolean-field",
                        "short_option": "",
                        "field_name": "input.boolean_field",
                        "description": "boolean field",
                        "type": "boolean",
                        "generic": ""
                    },
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "input.string_field",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "long-field",
                        "short_option": "",
                        "field_name": "input.long_field",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "double-field",
                        "short_option": "",
                        "field_name": "input.double_field",
                        "description": "double field",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "date-time-field",
                        "short_option": "",
                        "field_name": "input.date_time_field",
                        "description": "DateTime field",
                        "type": "datetime",
                        "generic": ""
                    },
                    {
                        "long_option": "uri-field",
                        "short_option": "",
                        "field_name": "input.uri_field",
                        "description": "URI field",
                        "type": "uri",
                        "generic": ""
                    },
                    {
                        "long_option": "secret-field",
                        "short_option": "",
                        "field_name": "input.secret_field",
                        "description": "Secret field",
                        "type": "secret",
                        "generic": ""
                    },
                    {
                        "long_option": "enum-field",
                        "short_option": "",
                        "field_name": "input.enum_field",
                        "description": "field using enum",
                        "type": "com.vmware.vapi.test.interop.metadata_echo.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "list-primitive-field",
                        "short_option": "",
                        "field_name": "input.list_primitive_field",
                        "description": "list field",
                        "type": "string",
                        "generic": "list"
                    },
                    {
                        "long_option": "optional-primitive-field",
                        "short_option": "",
                        "field_name": "input.optional_primitive_field",
                        "description": "optional String field",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "structure-field-string-field",
                        "short_option": "",
                        "field_name": "input.structure_field.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.test_structure_complex",
                        "output_fields": [
                            {
                                "field_name": "boolean_field",
                                "display_name": "BooleanField"
                            },
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            },
                            {
                                "field_name": "long_field",
                                "display_name": "LongField"
                            },
                            {
                                "field_name": "double_field",
                                "display_name": "DoubleField"
                            },
                            {
                                "field_name": "date_time_field",
                                "display_name": "DateTimeField"
                            },
                            {
                                "field_name": "uri_field",
                                "display_name": "UriField"
                            },
                            {
                                "field_name": "secret_field",
                                "display_name": "SecretField"
                            },
                            {
                                "field_name": "enum_field",
                                "display_name": "EnumField"
                            },
                            {
                                "field_name": "list_primitive_field",
                                "display_name": "ListPrimitiveField"
                            },
                            {
                                "field_name": "optional_primitive_field",
                                "display_name": "OptionalPrimitiveField"
                            },
                            {
                                "field_name": "structure_field",
                                "display_name": "StructureField"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_structure"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststandarderror",
            "type": "command",
            "description": "echo a standard vAPI error",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.errors.invalid_argument",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_standard_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststandarderrorlist",
            "type": "command",
            "description": "echo List of standard vAPI errors",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "test value",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "table",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.errors.invalid_argument",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_standard_error_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "teststandarderroroptional",
            "type": "command",
            "description": "echo optional std error",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.errors.resource_in_use",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_standard_error_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interop.metadataecho",
            "name": "testemptystruct",
            "type": "command",
            "description": "echo empty struct",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.interop.metadata_echo.empty_struct",
                        "output_fields": [
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.interop.metadata_echo",
                "operation_id": "test_empty_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "interposer",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.interposer",
            "name": "interposerservice",
            "type": "namespace",
            "description": "Test service for interposer tests."
        }
        ,
        {
            "path": "com.vmware.vapi.test.interposer.interposerservice",
            "name": "interpose",
            "type": "command",
            "description": "Sample Inteposer API.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "service-name",
                        "short_option": "",
                        "field_name": "service_name",
                        "description": "",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "operation-name",
                        "short_option": "",
                        "field_name": "operation_name",
                        "description": "",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "operation-input",
                        "short_option": "",
                        "field_name": "operation_input",
                        "description": "",
                        "type": "opaque",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.interposer.interposer_service",
                "operation_id": "interpose"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interposer",
            "name": "postinterposerservice",
            "type": "namespace",
            "description": "POST interposer service."
        }
        ,
        {
            "path": "com.vmware.vapi.test.interposer.postinterposerservice",
            "name": "interpose",
            "type": "command",
            "description": "Interposer which could throw.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "invocation-request",
                        "short_option": "",
                        "field_name": "invocation_request",
                        "description": "interposed invocation request",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "service-id",
                        "short_option": "",
                        "field_name": "invocation_request.service_id",
                        "description": "Fully qualified name of the service which contains the interposed operation",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "operation-id",
                        "short_option": "",
                        "field_name": "invocation_request.operation_id",
                        "description": "Name of the interposed operation",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "operation-input",
                        "short_option": "",
                        "field_name": "invocation_request.operation_input",
                        "description": "Input of the interposed operation.",
                        "type": "opaque",
                        "generic": ""
                    },
                    {
                        "long_option": "user-name",
                        "short_option": "",
                        "field_name": "invocation_request.user.name",
                        "description": "Principal name.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "user-domain",
                        "short_option": "",
                        "field_name": "invocation_request.user.domain",
                        "description": "Principal domain.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "groups-name",
                        "short_option": "",
                        "field_name": "invocation_request.groups.name",
                        "description": "Principal name.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "groups-domain",
                        "short_option": "",
                        "field_name": "invocation_request.groups.domain",
                        "description": "Principal domain.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "invocation-result",
                        "short_option": "",
                        "field_name": "invocation_result",
                        "description": "result of the interposed invocation",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "result-type",
                        "short_option": "",
                        "field_name": "invocation_result.result_type",
                        "description": "Type of the invocation result.",
                        "type": "com.vmware.vapi.std.interposition.invocation_result.result_type",
                        "generic": ""
                    },
                    {
                        "long_option": "output",
                        "short_option": "",
                        "field_name": "invocation_result.output",
                        "description": "Normal result value.",
                        "type": "opaque",
                        "generic": "optional"
                    },
                    {
                        "long_option": "error",
                        "short_option": "",
                        "field_name": "invocation_result.error",
                        "description": "Error result value.",
                        "type": "complex",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.interposer.post_interposer_service",
                "operation_id": "interpose"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.interposer",
            "name": "vetointerposerservice",
            "type": "namespace",
            "description": "VETO interposer service."
        }
        ,
        {
            "path": "com.vmware.vapi.test.interposer.vetointerposerservice",
            "name": "interpose",
            "type": "command",
            "description": "Interposer which could throw.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "invocation-request",
                        "short_option": "",
                        "field_name": "invocation_request",
                        "description": "invocation request",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "service-id",
                        "short_option": "",
                        "field_name": "invocation_request.service_id",
                        "description": "Fully qualified name of the service which contains the interposed operation",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "operation-id",
                        "short_option": "",
                        "field_name": "invocation_request.operation_id",
                        "description": "Name of the interposed operation",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "operation-input",
                        "short_option": "",
                        "field_name": "invocation_request.operation_input",
                        "description": "Input of the interposed operation.",
                        "type": "opaque",
                        "generic": ""
                    },
                    {
                        "long_option": "user-name",
                        "short_option": "",
                        "field_name": "invocation_request.user.name",
                        "description": "Principal name.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "user-domain",
                        "short_option": "",
                        "field_name": "invocation_request.user.domain",
                        "description": "Principal domain.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "groups-name",
                        "short_option": "",
                        "field_name": "invocation_request.groups.name",
                        "description": "Principal name.",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "groups-domain",
                        "short_option": "",
                        "field_name": "invocation_request.groups.domain",
                        "description": "Principal domain.",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.interposer.veto_interposer_service",
                "operation_id": "interpose"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "l10n",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.l10n",
            "name": "localizabletestservice",
            "type": "namespace",
            "description": "Test service which supports L10N."
        }
        ,
        {
            "path": "com.vmware.vapi.test.l10n.localizabletestservice",
            "name": "getdesciption",
            "type": "command",
            "description": "Returns a localizable value.",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.localizable_message",
                        "output_fields": [
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            },
                            {
                                "field_name": "default_message",
                                "display_name": "DefaultMessage"
                            },
                            {
                                "field_name": "args",
                                "display_name": "Args"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.l10n.localizable_test_service",
                "operation_id": "get_desciption"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.l10n.localizabletestservice",
            "name": "getlocstruct",
            "type": "command",
            "description": "Returns a struct with localizable field.",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.localizable_message",
                        "output_fields": [
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            },
                            {
                                "field_name": "default_message",
                                "display_name": "DefaultMessage"
                            },
                            {
                                "field_name": "args",
                                "display_name": "Args"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.l10n.localizable_test_service.localizable_struct",
                        "output_fields": [
                            {
                                "field_name": "string_field",
                                "display_name": "StringField"
                            },
                            {
                                "field_name": "localizable_field",
                                "display_name": "LocalizableField"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.l10n.localizable_test_service",
                "operation_id": "get_loc_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.l10n.localizabletestservice",
            "name": "receivelocmessage",
            "type": "command",
            "description": "Accepts a localizable parameter.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "loc_msg.id",
                        "description": "Unique identifier of the localizable string or message template",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "default-message",
                        "short_option": "",
                        "field_name": "loc_msg.default_message",
                        "description": "The value of this localizable string or message template in the en_US (English) locale",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "args",
                        "short_option": "",
                        "field_name": "loc_msg.args",
                        "description": "Arguments to be substituted into a message template.",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.l10n.localizable_test_service",
                "operation_id": "receive_loc_message"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.l10n.localizabletestservice",
            "name": "receivelocstruct",
            "type": "command",
            "description": "Accepts a struct with localizable field.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string-field",
                        "short_option": "",
                        "field_name": "loc_str.string_field",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "localizable-field-id",
                        "short_option": "",
                        "field_name": "loc_str.localizable_field.id",
                        "description": "Unique identifier of the localizable string or message template",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "localizable-field-default-message",
                        "short_option": "",
                        "field_name": "loc_str.localizable_field.default_message",
                        "description": "The value of this localizable string or message template in the en_US (English) locale",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "localizable-field-args",
                        "short_option": "",
                        "field_name": "loc_str.localizable_field.args",
                        "description": "Arguments to be substituted into a message template.",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.l10n.localizable_test_service",
                "operation_id": "receive_loc_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.l10n.localizabletestservice",
            "name": "echolocmessage",
            "type": "command",
            "description": "Echoes a LocalizableMessage.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "loc_msg.id",
                        "description": "Unique identifier of the localizable string or message template",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "default-message",
                        "short_option": "",
                        "field_name": "loc_msg.default_message",
                        "description": "The value of this localizable string or message template in the en_US (English) locale",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "args",
                        "short_option": "",
                        "field_name": "loc_msg.args",
                        "description": "Arguments to be substituted into a message template.",
                        "type": "string",
                        "generic": "list"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.std.localizable_message",
                        "output_fields": [
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            },
                            {
                                "field_name": "default_message",
                                "display_name": "DefaultMessage"
                            },
                            {
                                "field_name": "args",
                                "display_name": "Args"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.l10n.localizable_test_service",
                "operation_id": "echo_loc_message"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "metadata",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.metadata",
            "name": "jsonescape",
            "type": "namespace",
            "description": "Service used to test if metadata generators escape all the characters in JSON that have to be escaped"
        }
        ,
        {
            "path": "com.vmware.vapi.test.metadata.jsonescape",
            "name": "echo",
            "type": "command",
            "description": "\"Quotes\", Reverse solidus \\",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.metadata.json_escape.escape",
                        "output_fields": [
                            {
                                "field_name": "quotes",
                                "display_name": "Quotes"
                            },
                            {
                                "field_name": "reverse_solidus",
                                "display_name": "ReverseSolidus"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.metadata.json_escape",
                "operation_id": "echo"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "naming",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.naming",
            "name": "nameclashservice",
            "type": "namespace",
            "description": "Tests name clashes."
        }
        ,
        {
            "path": "com.vmware.vapi.test.naming.nameclashservice",
            "name": "get",
            "type": "command",
            "description": "Get.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "id",
                        "description": "identifier",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.naming.name_clash_service",
                "operation_id": "get"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.naming",
            "name": "vapi12canonical",
            "type": "namespace",
            "description": "Interface to test @CanonicalNames"
        }
        ,
        {
            "path": "com.vmware.vapi.test.naming.vapi12canonical",
            "name": "echo3d",
            "type": "command",
            "description": "Echo - params and result structure with interesting canonical names.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "is-cd-rom",
                        "short_option": "",
                        "field_name": "is_CD_rom",
                        "description": "is it a CD-ROM",
                        "type": "boolean",
                        "generic": ""
                    },
                    {
                        "long_option": "vds-port-1-2",
                        "short_option": "",
                        "field_name": "vDS_port_1_2",
                        "description": "vDS port 12?",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.naming.vAPI_1_2_canonical.sample_1_2",
                        "output_fields": [
                            {
                                "field_name": "vDS_port_1_2",
                                "display_name": "VDSPort12"
                            },
                            {
                                "field_name": "VMware",
                                "display_name": "VMware"
                            },
                            {
                                "field_name": "ICH_7m_present",
                                "display_name": "ICH7mPresent"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.naming.vAPI_1_2_canonical",
                "operation_id": "echo_3_D"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "python",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.python",
            "name": "keyword",
            "type": "namespace",
            "description": "Service that has names which clashes with python keywords"
        }
        ,
        {
            "path": "com.vmware.vapi.test.python.keyword",
            "name": "lambda",
            "type": "command",
            "description": "Method name and parameters clash with python keyword",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "yield",
                        "short_option": "",
                        "field_name": "yield",
                        "description": "",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "from",
                        "short_option": "",
                        "field_name": "from",
                        "description": "",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "from-2",
                        "short_option": "",
                        "field_name": "struct.from",
                        "description": "from",
                        "type": "long",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.python.keyword.pass",
                        "output_fields": [
                            {
                                "field_name": "struct",
                                "display_name": "Struct"
                            },
                            {
                                "field_name": "struct1",
                                "display_name": "Struct1"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.python.keyword.struct",
                        "output_fields": [
                            {
                                "field_name": "from",
                                "display_name": "From"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.python.keyword",
                "operation_id": "lambda"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.python.keyword",
            "name": "echo",
            "type": "command",
            "description": "test with self as the parameter",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "self",
                        "short_option": "",
                        "field_name": "self",
                        "description": "",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.python.keyword",
                "operation_id": "echo"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "security",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.security",
            "name": "authentication",
            "type": "namespace",
            "description": "Provides an authenticaion service for test purposes"
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authentication",
            "name": "authenticate",
            "type": "command",
            "description": "Test operation for SAML authn.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.authentication",
                "operation_id": "authenticate"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authentication",
            "name": "authenticateoauth",
            "type": "command",
            "description": "Test operation for OAuth2 authn.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.authentication",
                "operation_id": "authenticate_oauth"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authentication",
            "name": "authenticateuserpass",
            "type": "command",
            "description": "Test operation for user\/pass authn.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.authentication",
                "operation_id": "authenticate_user_pass"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authentication",
            "name": "authenticateuserpasssessionaware",
            "type": "command",
            "description": "Second test operation for user\/pass authn meant to be used with session aware authentication.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.authentication",
                "operation_id": "authenticate_user_pass_session_aware"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authentication",
            "name": "authenticateuserpassandnoauth",
            "type": "command",
            "description": "Test operation marked both for no authentication and user\/pass authentication.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.authentication",
                "operation_id": "authenticate_user_pass_and_no_auth"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security",
            "name": "authorization",
            "type": "namespace",
            "description": "Provides an authorization service for test purposes"
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authorization",
            "name": "authorize",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "default-resource",
                        "short_option": "",
                        "field_name": "default_resource",
                        "description": "Provides an authorization service for test purposes",
                        "type": "id",
                        "generic": ""
                    },
                    {
                        "long_option": "named-id",
                        "short_option": "",
                        "field_name": "named_id",
                        "description": "Provides an authorization service for test purposes",
                        "type": "id",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.security.authorization",
                "operation_id": "authorize"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authorization",
            "name": "authorizedefault",
            "type": "command",
            "description": "",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.security.authorization",
                "operation_id": "authorize_default"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authorization",
            "name": "authorizenested",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "struct-map",
                        "short_option": "",
                        "field_name": "structs.struct_map",
                        "description": "Provides an authorization service for test purposes",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.security.authorization",
                "operation_id": "authorize_nested"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.authorization",
            "name": "authorizemap",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "struct-map",
                        "short_option": "",
                        "field_name": "struct_map",
                        "description": "",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.security.authorization",
                "operation_id": "authorize_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security",
            "name": "sessionacceptor",
            "type": "namespace",
            "description": "Provides an test service that echos back session ID from security context."
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.sessionacceptor",
            "name": "echosessionid",
            "type": "command",
            "description": "Returns sessionId as found in request's SecurityContext.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.session_acceptor",
                "operation_id": "echo_session_id"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.sessionacceptor",
            "name": "login",
            "type": "command",
            "description": "Login with SSO token; returns session identifier.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.session_acceptor",
                "operation_id": "login"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.sessionacceptor",
            "name": "noauthn",
            "type": "command",
            "description": "Login with NoAuthentication security scheme.",
            "node_metadata": {
                "service_id": "com.vmware.vapi.test.security.session_acceptor",
                "operation_id": "no_authn"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.security.sessionacceptor",
            "name": "logout",
            "type": "command",
            "description": "Logout and clear session.",
            "node_metadata": {
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.security.session_acceptor",
                "operation_id": "logout"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "serialization",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "structures",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures",
            "name": "dynamicconversion",
            "type": "namespace",
            "description": "Test service for conversion of dynamic data"
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "create",
            "type": "command",
            "description": "Test operation",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "create-params",
                        "short_option": "",
                        "field_name": "create_params",
                        "description": "create params",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "model-name",
                        "short_option": "",
                        "field_name": "create_params.model.name",
                        "description": "Name of the model, required",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "model-description",
                        "short_option": "",
                        "field_name": "create_params.model.description",
                        "description": "Description of the model",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "create"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimplestruct",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimplelist",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimplelong",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_long"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimpledouble",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_double"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimpleboolean",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_boolean"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimplesecret",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_secret"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimpleoptional",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimplemap",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_map"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimpleset",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_set"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.dynamicconversion",
            "name": "acceptsimplebinary",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "string",
                        "short_option": "",
                        "field_name": "input.string",
                        "description": "String field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct",
                        "short_option": "",
                        "field_name": "input.struct",
                        "description": "Dynamic data\/structure field",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.dynamic_conversion",
                "operation_id": "accept_simple_binary"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures",
            "name": "includablestructures",
            "type": "namespace",
            "description": "Test service for includable structures"
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "method",
            "type": "command",
            "description": "An operation that takes 2 dynamic structures as input one of which requires certain fields to be present",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "any-value",
                        "short_option": "",
                        "field_name": "any_value",
                        "description": "unrestricted dynamic structure",
                        "type": "complex",
                        "generic": ""
                    },
                    {
                        "long_option": "shape-value",
                        "short_option": "",
                        "field_name": "shape_value",
                        "description": "dynamic structure which has-fields-of Shape",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "color",
                        "short_option": "",
                        "field_name": "shape_value.color",
                        "description": "doc",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "method"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "nested",
            "type": "command",
            "description": "An operation that takes as input a structure with a nested field that contains fields of a certain type",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "outer-perimeter-value",
                        "short_option": "",
                        "field_name": "outer_perimeter_value",
                        "description": "outer perimeter",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "perimeter",
                        "short_option": "",
                        "field_name": "outer_perimeter_value.perimeter",
                        "description": "doc",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "nested"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "list",
            "type": "command",
            "description": "This operation takes a list of dynamic structures that require certain fields to be present",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "shape-list",
                        "short_option": "",
                        "field_name": "shape_list",
                        "description": "dynamic list of structures which has-fields-of Shape",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "color",
                        "short_option": "",
                        "field_name": "shape_list.color",
                        "description": "doc",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "list"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "another",
            "type": "command",
            "description": "This operation takes as input a dynamic structure that requires fields of a type from another package to be present",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "input",
                        "short_option": "",
                        "field_name": "input",
                        "description": "doc str1",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "input.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "input.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "another"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "anothernested",
            "type": "command",
            "description": "This operation takes as input a type that has a field of type dynamic structure that requires fields of a type from another package to be present",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field",
                        "short_option": "",
                        "field_name": "spec.field",
                        "description": "doc",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "another_nested"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "multiplerestrictions",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "shape-list",
                        "short_option": "",
                        "field_name": "shape_list",
                        "description": "dynamic list of structures which has-fields-of Shape",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "color",
                        "short_option": "",
                        "field_name": "shape_list.color",
                        "description": "doc",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "shape-value",
                        "short_option": "",
                        "field_name": "shape_value",
                        "description": "dynamic structure which has-fields-of Shape",
                        "type": "complex-hasfieldsof",
                        "generic": "optional"
                    },
                    {
                        "long_option": "color-2",
                        "short_option": "",
                        "field_name": "shape_value.color",
                        "description": "doc",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "multiple_restrictions"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "echo",
            "type": "command",
            "description": "This operation takes echoes the input dynamic structure but needs the output structure to have certain fields",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "any-value",
                        "short_option": "",
                        "field_name": "any_value",
                        "description": "unrestricted dynamic structure",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "echo"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "echooptional",
            "type": "command",
            "description": "This operation takes echoes the input dynamic structure but needs the optional output structure to have certain fields",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "any-value",
                        "short_option": "",
                        "field_name": "any_value",
                        "description": "unrestricted dynamic structure",
                        "type": "complex",
                        "generic": ""
                    },
                    {
                        "long_option": "return-output",
                        "short_option": "",
                        "field_name": "return_output",
                        "description": "",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "echo_optional"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "echoshape",
            "type": "command",
            "description": "This operation takes a shape and echoes the static structure to the output",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "color",
                        "short_option": "",
                        "field_name": "shape.color",
                        "description": "doc",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.includable_structures.shape",
                        "output_fields": [
                            {
                                "field_name": "color",
                                "display_name": "Color"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "echo_shape"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "inputrefstructure",
            "type": "command",
            "description": "This operation takes a reference to a structure that contains a dynamic structure as one of its fields",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "shape",
                        "short_option": "",
                        "field_name": "peri_value.shape",
                        "description": "doc",
                        "type": "complex",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "input_ref_structure"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "getrefstructure",
            "type": "command",
            "description": "This operation returns a reference to a structure that contains a dynamic structure as one of its fields",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.includable_structures.perimeter",
                        "output_fields": [
                            {
                                "field_name": "shape",
                                "display_name": "Shape"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "get_ref_structure"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "getrefstructurebuggy",
            "type": "command",
            "description": "This operation will fail and return an InternalServerError since it tries to return a structure without certain fields required to be present",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.includable_structures.perimeter",
                        "output_fields": [
                            {
                                "field_name": "shape",
                                "display_name": "Shape"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "get_ref_structure_buggy"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "inputstaticshape",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "color",
                        "short_option": "",
                        "field_name": "input.color",
                        "description": "doc",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "input_static_shape"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.includablestructures",
            "name": "outputstaticshape",
            "type": "command",
            "description": "",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.includable_structures.shape",
                        "output_fields": [
                            {
                                "field_name": "color",
                                "display_name": "Color"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.includable_structures",
                "operation_id": "output_static_shape"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures",
            "name": "service1",
            "type": "namespace",
            "description": "Service1: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service1",
            "name": "echotoplevelstruct",
            "type": "command",
            "description": "FQ name used for structure in the same scope\/package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc dbl2",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "struct1-dbl1",
                        "short_option": "",
                        "field_name": "param.struct1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct1-str1",
                        "short_option": "",
                        "field_name": "param.struct1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct1-id",
                        "short_option": "",
                        "field_name": "param.struct1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "struct1",
                                "display_name": "Struct1"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service1",
                "operation_id": "echo_top_level_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service1",
            "name": "echotopleveloptionalfieldstruct",
            "type": "command",
            "description": "FQ name used for structure in the same scope\/package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc dbl2",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct1-dbl1",
                        "short_option": "",
                        "field_name": "param.struct1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct1-str1",
                        "short_option": "",
                        "field_name": "param.struct1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "struct1-id",
                        "short_option": "",
                        "field_name": "param.struct1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_optional_field_struct",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "struct1",
                                "display_name": "Struct1"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service1",
                "operation_id": "echo_top_level_optional_field_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service1",
            "name": "echotoplevelstructinfile",
            "type": "command",
            "description": "Simple name used for top-level struct - OK, since it is in the same package.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "param.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service1",
                "operation_id": "echo_top_level_struct_in_file"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service1",
            "name": "echotoplevelstructinfilefq",
            "type": "command",
            "description": "FQ name used for structure in the same scope\/package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "param.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service1",
                "operation_id": "echo_top_level_struct_in_file_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service1",
            "name": "echonestedstruct",
            "type": "command",
            "description": "Simple name used for structure nested in this same service - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "param.str_field",
                        "description": "doc strField",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field1-dbl1",
                        "short_option": "",
                        "field_name": "param.field1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-str1",
                        "short_option": "",
                        "field_name": "param.field1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-id",
                        "short_option": "",
                        "field_name": "param.field1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field2-dbl1",
                        "short_option": "",
                        "field_name": "param.field2.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "field2-str1",
                        "short_option": "",
                        "field_name": "param.field2.str1",
                        "description": "doc dbl2",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field2-struct1-dbl1",
                        "short_option": "",
                        "field_name": "param.field2.struct1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field2-struct1-str1",
                        "short_option": "",
                        "field_name": "param.field2.struct1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field2-struct1-id",
                        "short_option": "",
                        "field_name": "param.field2.struct1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "struct1",
                                "display_name": "Struct1"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.service1.nested_struct",
                        "output_fields": [
                            {
                                "field_name": "str_field",
                                "display_name": "StrField"
                            },
                            {
                                "field_name": "field1",
                                "display_name": "Field1"
                            },
                            {
                                "field_name": "field2",
                                "display_name": "Field2"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service1",
                "operation_id": "echo_nested_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service1",
            "name": "echonestedstructfq",
            "type": "command",
            "description": "FQ name used for structure nested in this same service - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "str-field",
                        "short_option": "",
                        "field_name": "param.str_field",
                        "description": "doc strField",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field1-dbl1",
                        "short_option": "",
                        "field_name": "param.field1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-str1",
                        "short_option": "",
                        "field_name": "param.field1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-id",
                        "short_option": "",
                        "field_name": "param.field1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field2-dbl1",
                        "short_option": "",
                        "field_name": "param.field2.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": ""
                    },
                    {
                        "long_option": "field2-str1",
                        "short_option": "",
                        "field_name": "param.field2.str1",
                        "description": "doc dbl2",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "field2-struct1-dbl1",
                        "short_option": "",
                        "field_name": "param.field2.struct1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field2-struct1-str1",
                        "short_option": "",
                        "field_name": "param.field2.struct1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field2-struct1-id",
                        "short_option": "",
                        "field_name": "param.field2.struct1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "struct1",
                                "display_name": "Struct1"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.service1.nested_struct",
                        "output_fields": [
                            {
                                "field_name": "str_field",
                                "display_name": "StrField"
                            },
                            {
                                "field_name": "field1",
                                "display_name": "Field1"
                            },
                            {
                                "field_name": "field2",
                                "display_name": "Field2"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service1",
                "operation_id": "echo_nested_struct_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures",
            "name": "service2",
            "type": "namespace",
            "description": "Service2: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service2",
            "name": "echotoplevelstructinfile",
            "type": "command",
            "description": "Simple name used for top-level struct - OK, since it is in the same package.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "param.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service2",
                "operation_id": "echo_top_level_struct_in_file"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.service2",
            "name": "echotoplevelstructinfilefq",
            "type": "command",
            "description": "FQ named used Echo top-level structure from the same package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "param.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.service2",
                "operation_id": "echo_top_level_struct_in_file_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures",
            "name": "another",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.another",
            "name": "service3",
            "type": "namespace",
            "description": "Service3: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.another.service3",
            "name": "echotoplevelstructimported",
            "type": "command",
            "description": "Simple name used for top-level structure from another package - OK since it is imported.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "param.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.another.service3",
                "operation_id": "echo_top_level_struct_imported"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.another.service3",
            "name": "echoreferringnestedstruct",
            "type": "command",
            "description": "Use nested structure which refers other structure(s).",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field1-dbl1",
                        "short_option": "",
                        "field_name": "param.field1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-str1",
                        "short_option": "",
                        "field_name": "param.field1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-id",
                        "short_option": "",
                        "field_name": "param.field1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.another.service3.referring_nested_struct",
                        "output_fields": [
                            {
                                "field_name": "field1",
                                "display_name": "Field1"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.another.service3",
                "operation_id": "echo_referring_nested_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.another.service3",
            "name": "echoreferringtoplevelstruct",
            "type": "command",
            "description": "Use top-level structure which refers other structure(s).",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "field1-dbl1",
                        "short_option": "",
                        "field_name": "param.field1.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-str1",
                        "short_option": "",
                        "field_name": "param.field1.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "field1-id",
                        "short_option": "",
                        "field_name": "param.field1.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.another.referring_top_level_struct",
                        "output_fields": [
                            {
                                "field_name": "field1",
                                "display_name": "Field1"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.another.service3",
                "operation_id": "echo_referring_top_level_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.another",
            "name": "service4",
            "type": "namespace",
            "description": "Service4: "
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures.another.service4",
            "name": "echotoplevelstructfq",
            "type": "command",
            "description": "FQ name used for top-level structure from another package - OK.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "dbl1",
                        "short_option": "",
                        "field_name": "param.dbl1",
                        "description": "doc dbl1",
                        "type": "double",
                        "generic": "optional"
                    },
                    {
                        "long_option": "str1",
                        "short_option": "",
                        "field_name": "param.str1",
                        "description": "doc str1",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "id",
                        "short_option": "",
                        "field_name": "param.id",
                        "description": "doc id",
                        "type": "id",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                        "output_fields": [
                            {
                                "field_name": "dbl1",
                                "display_name": "Dbl1"
                            },
                            {
                                "field_name": "str1",
                                "display_name": "Str1"
                            },
                            {
                                "field_name": "id",
                                "display_name": "Id"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.structures.another.service4",
                "operation_id": "echo_top_level_struct_FQ"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.structures",
            "name": "diff",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "unions",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions",
            "name": "service1",
            "type": "namespace",
            "description": "Service for testing discriminated unions support in language bindings."
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echolocalteststruct",
            "type": "command",
            "description": "Echoes a local\/nested structure value which contains a discriminated union.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "long-val",
                        "short_option": "",
                        "field_name": "input.long_val",
                        "description": "long field",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "string-val",
                        "short_option": "",
                        "field_name": "input.string_val",
                        "description": "string field",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "long_val",
                                "display_name": "LongVal"
                            },
                            {
                                "field_name": "string_val",
                                "display_name": "StringVal"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_local_test_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echolocalteststruct2",
            "type": "command",
            "description": "Echoes a local\/nested structure value which contains a multi-value case discriminated union.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "remote-host",
                        "short_option": "",
                        "field_name": "input.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "port",
                        "short_option": "",
                        "field_name": "input.port",
                        "description": "remote port",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct2",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "port",
                                "display_name": "Port"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_local_test_struct2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echoteststruct",
            "type": "command",
            "description": "Echoes a top-level structure value which contains a discriminated union.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "Field of enum type.",
                        "type": "com.vmware.vapi.test.unions.test_struct.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "long-val",
                        "short_option": "",
                        "field_name": "input.long_val",
                        "description": "long field, in the union",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "boolean-val",
                        "short_option": "",
                        "field_name": "input.boolean_val",
                        "description": "boolean field, in the union",
                        "type": "boolean",
                        "generic": "optional"
                    },
                    {
                        "long_option": "string-val",
                        "short_option": "",
                        "field_name": "input.string_val",
                        "description": "string field, in the union",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "num-uri-fields",
                        "short_option": "",
                        "field_name": "input.num_URI_fields",
                        "description": "uri field, in the union",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "uri-val",
                        "short_option": "",
                        "field_name": "input.URI_val",
                        "description": "uri field, in the union",
                        "type": "uri",
                        "generic": "optional"
                    },
                    {
                        "long_option": "double-val",
                        "short_option": "",
                        "field_name": "input.double_val",
                        "description": "double field - out of the union",
                        "type": "double",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.test_struct",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "long_val",
                                "display_name": "LongVal"
                            },
                            {
                                "field_name": "boolean_val",
                                "display_name": "BooleanVal"
                            },
                            {
                                "field_name": "string_val",
                                "display_name": "StringVal"
                            },
                            {
                                "field_name": "num_URI_fields",
                                "display_name": "NumURIFields"
                            },
                            {
                                "field_name": "URI_val",
                                "display_name": "URIVal"
                            },
                            {
                                "field_name": "double_val",
                                "display_name": "DoubleVal"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_test_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echolocalteststruct3",
            "type": "command",
            "description": "Echoes a top-level structure value which contains a union and another test structure with union.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "remote-host",
                        "short_option": "",
                        "field_name": "input.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "port",
                        "short_option": "",
                        "field_name": "input.port",
                        "description": "remote port",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-test-enum",
                        "short_option": "",
                        "field_name": "input.test_struct.test_enum",
                        "description": "Field of enum type.",
                        "type": "com.vmware.vapi.test.unions.test_struct.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "test-struct-long-val",
                        "short_option": "",
                        "field_name": "input.test_struct.long_val",
                        "description": "long field, in the union",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-boolean-val",
                        "short_option": "",
                        "field_name": "input.test_struct.boolean_val",
                        "description": "boolean field, in the union",
                        "type": "boolean",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-string-val",
                        "short_option": "",
                        "field_name": "input.test_struct.string_val",
                        "description": "string field, in the union",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-num-uri-fields",
                        "short_option": "",
                        "field_name": "input.test_struct.num_URI_fields",
                        "description": "uri field, in the union",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-uri-val",
                        "short_option": "",
                        "field_name": "input.test_struct.URI_val",
                        "description": "uri field, in the union",
                        "type": "uri",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-double-val",
                        "short_option": "",
                        "field_name": "input.test_struct.double_val",
                        "description": "double field - out of the union",
                        "type": "double",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.test_struct",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "long_val",
                                "display_name": "LongVal"
                            },
                            {
                                "field_name": "boolean_val",
                                "display_name": "BooleanVal"
                            },
                            {
                                "field_name": "string_val",
                                "display_name": "StringVal"
                            },
                            {
                                "field_name": "num_URI_fields",
                                "display_name": "NumURIFields"
                            },
                            {
                                "field_name": "URI_val",
                                "display_name": "URIVal"
                            },
                            {
                                "field_name": "double_val",
                                "display_name": "DoubleVal"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct3",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "port",
                                "display_name": "Port"
                            },
                            {
                                "field_name": "test_struct",
                                "display_name": "TestStruct"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_local_test_struct3"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echolocalteststruct4",
            "type": "command",
            "description": "Echoes a top-level structure value which contains a union and another test structure with union tag and repeated field names.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "remote-host",
                        "short_option": "",
                        "field_name": "input.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "port",
                        "short_option": "",
                        "field_name": "input.port",
                        "description": "remote port",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-test-enum",
                        "short_option": "",
                        "field_name": "input.test_struct.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "test-struct-remote-host",
                        "short_option": "",
                        "field_name": "input.test_struct.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-port",
                        "short_option": "",
                        "field_name": "input.test_struct.port",
                        "description": "remote port",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct2",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "port",
                                "display_name": "Port"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct4",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "port",
                                "display_name": "Port"
                            },
                            {
                                "field_name": "test_struct",
                                "display_name": "TestStruct"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_local_test_struct4"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echolocalteststruct5",
            "type": "command",
            "description": "Echoes a top-level structure value which contains a union and another test structure with union tag which is a union case.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "remote-host",
                        "short_option": "",
                        "field_name": "input.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-test-enum",
                        "short_option": "",
                        "field_name": "input.test_struct.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "test-struct-remote-host",
                        "short_option": "",
                        "field_name": "input.test_struct.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-port",
                        "short_option": "",
                        "field_name": "input.test_struct.port",
                        "description": "remote port",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct5",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "test_struct",
                                "display_name": "TestStruct"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct2",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "port",
                                "display_name": "Port"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_local_test_struct5"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "returnlocalteststruct6",
            "type": "command",
            "description": "From given LocalTestStruct5 returns LocalTestStruct6 structure by making the testStruct property of LocalTestStruct5 to List",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "remote-host",
                        "short_option": "",
                        "field_name": "input.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-test-enum",
                        "short_option": "",
                        "field_name": "input.test_struct.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "test-struct-remote-host",
                        "short_option": "",
                        "field_name": "input.test_struct.remote_host",
                        "description": "remote host",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "test-struct-port",
                        "short_option": "",
                        "field_name": "input.test_struct.port",
                        "description": "remote port",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct6",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "test_struct",
                                "display_name": "TestStruct"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.local_test_struct2",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "remote_host",
                                "display_name": "RemoteHost"
                            },
                            {
                                "field_name": "port",
                                "display_name": "Port"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "return_local_test_struct6"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echostructwithtwouniontags",
            "type": "command",
            "description": "Echoes a top-level structure value which contains two union tags",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum1",
                        "short_option": "",
                        "field_name": "input.test_enum1",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "test-enum2",
                        "short_option": "",
                        "field_name": "input.test_enum2",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "long-val1",
                        "short_option": "",
                        "field_name": "input.long_val1",
                        "description": "long field",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "string-val1",
                        "short_option": "",
                        "field_name": "input.string_val1",
                        "description": "string field",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-val2",
                        "short_option": "",
                        "field_name": "input.long_val2",
                        "description": "long field",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "string-val2",
                        "short_option": "",
                        "field_name": "input.string_val2",
                        "description": "string field",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.structure_with_two_union_tags",
                        "output_fields": [
                            {
                                "field_name": "test_enum1",
                                "display_name": "TestEnum1"
                            },
                            {
                                "field_name": "test_enum2",
                                "display_name": "TestEnum2"
                            },
                            {
                                "field_name": "long_val1",
                                "display_name": "LongVal1"
                            },
                            {
                                "field_name": "string_val1",
                                "display_name": "StringVal1"
                            },
                            {
                                "field_name": "long_val2",
                                "display_name": "LongVal2"
                            },
                            {
                                "field_name": "string_val2",
                                "display_name": "StringVal2"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_struct_with_two_union_tags"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echostructwithunioncaseofstruct",
            "type": "command",
            "description": "Echoes a top-level structure value which contains two union tags",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "input.test_enum",
                        "description": "enum field - union tag",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "long-val",
                        "short_option": "",
                        "field_name": "input.long_val",
                        "description": "long field",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "simple-struct-long-val",
                        "short_option": "",
                        "field_name": "input.simple_struct.long_val",
                        "description": "long field",
                        "type": "long",
                        "generic": ""
                    },
                    {
                        "long_option": "simple-struct-string-val",
                        "short_option": "",
                        "field_name": "input.simple_struct.string_val",
                        "description": "string field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.simple_struct",
                        "output_fields": [
                            {
                                "field_name": "long_val",
                                "display_name": "LongVal"
                            },
                            {
                                "field_name": "string_val",
                                "display_name": "StringVal"
                            }
                        ]
                    },
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.struct_with_union_case_of_struct",
                        "output_fields": [
                            {
                                "field_name": "test_enum",
                                "display_name": "TestEnum"
                            },
                            {
                                "field_name": "long_val",
                                "display_name": "LongVal"
                            },
                            {
                                "field_name": "simple_struct",
                                "display_name": "SimpleStruct"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_struct_with_union_case_of_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "validateunionparams",
            "type": "command",
            "description": "Test method for the validity of the union in method parameters.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "test_enum",
                        "description": "test enum",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "long-val",
                        "short_option": "",
                        "field_name": "long_val",
                        "description": "union case long value",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "string-val",
                        "short_option": "",
                        "field_name": "string_val",
                        "description": "union case string value",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "boolean-val",
                        "short_option": "",
                        "field_name": "boolean_val",
                        "description": "boolean value (not in union)",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "validate_union_params"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "validateunionparams2",
            "type": "command",
            "description": "Test method for the validity of a multi-value case union in method parameters.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "test_enum",
                        "description": "test enum",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum2",
                        "generic": ""
                    },
                    {
                        "long_option": "remote-host",
                        "short_option": "",
                        "field_name": "remote_host",
                        "description": "union case remote host address",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "port",
                        "short_option": "",
                        "field_name": "port",
                        "description": "union case port",
                        "type": "long",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "validate_union_params2"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echooptionalcasestruct",
            "type": "command",
            "description": "Echoes a local structure value which contains a discriminated union.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "tag",
                        "short_option": "",
                        "field_name": "input.tag",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": ""
                    },
                    {
                        "long_option": "long-case",
                        "short_option": "",
                        "field_name": "input.long_case",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "optional-string",
                        "short_option": "",
                        "field_name": "input.optional_string",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "required-string",
                        "short_option": "",
                        "field_name": "input.required_string",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.optional_case_struct",
                        "output_fields": [
                            {
                                "field_name": "tag",
                                "display_name": "Tag"
                            },
                            {
                                "field_name": "long_case",
                                "display_name": "LongCase"
                            },
                            {
                                "field_name": "optional_string",
                                "display_name": "OptionalString"
                            },
                            {
                                "field_name": "required_string",
                                "display_name": "RequiredString"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_optional_case_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "validateoptionalunionparams",
            "type": "command",
            "description": "Test method for the validity of the union in method parameters.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "test-enum",
                        "short_option": "",
                        "field_name": "test_enum",
                        "description": "test enum",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-val",
                        "short_option": "",
                        "field_name": "long_val",
                        "description": "union case long value",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "string-val",
                        "short_option": "",
                        "field_name": "string_val",
                        "description": "union case string value",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "optional-string-val",
                        "short_option": "",
                        "field_name": "optional_string_val",
                        "description": "union case string value",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "boolean-val",
                        "short_option": "",
                        "field_name": "boolean_val",
                        "description": "boolean value (not in union)",
                        "type": "boolean",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "validate_optional_union_params"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echooptionaltagstruct",
            "type": "command",
            "description": "Echoes a local structure value which contains a discriminated union.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "tag",
                        "short_option": "",
                        "field_name": "input.tag",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-case",
                        "short_option": "",
                        "field_name": "input.long_case",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "optional-string",
                        "short_option": "",
                        "field_name": "input.optional_string",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "required-string",
                        "short_option": "",
                        "field_name": "input.required_string",
                        "description": "Echoes a local structure value which contains a discriminated union.",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.optional_tag_struct",
                        "output_fields": [
                            {
                                "field_name": "tag",
                                "display_name": "Tag"
                            },
                            {
                                "field_name": "long_case",
                                "display_name": "LongCase"
                            },
                            {
                                "field_name": "optional_string",
                                "display_name": "OptionalString"
                            },
                            {
                                "field_name": "required_string",
                                "display_name": "RequiredString"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_optional_tag_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echooptionalbydefault",
            "type": "command",
            "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "tag",
                        "short_option": "",
                        "field_name": "input.tag",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-case",
                        "short_option": "",
                        "field_name": "input.long_case",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "optional-string",
                        "short_option": "",
                        "field_name": "input.optional_string",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "required-string",
                        "short_option": "",
                        "field_name": "input.required_string",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.union_with_optional_by_default_struct",
                        "output_fields": [
                            {
                                "field_name": "tag",
                                "display_name": "Tag"
                            },
                            {
                                "field_name": "long_case",
                                "display_name": "LongCase"
                            },
                            {
                                "field_name": "optional_string",
                                "display_name": "OptionalString"
                            },
                            {
                                "field_name": "required_string",
                                "display_name": "RequiredString"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_optional_by_default"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echooptionalbydefaultstruct",
            "type": "command",
            "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "tag",
                        "short_option": "",
                        "field_name": "input.tag",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "com.vmware.vapi.test.unions.service1.test_enum",
                        "generic": "optional"
                    },
                    {
                        "long_option": "long-case",
                        "short_option": "",
                        "field_name": "input.long_case",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "optional-string",
                        "short_option": "",
                        "field_name": "input.optional_string",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "string",
                        "generic": "optional"
                    },
                    {
                        "long_option": "required-string",
                        "short_option": "",
                        "field_name": "input.required_string",
                        "description": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.optional_by_default_struct",
                        "output_fields": [
                            {
                                "field_name": "tag",
                                "display_name": "Tag"
                            },
                            {
                                "field_name": "long_case",
                                "display_name": "LongCase"
                            },
                            {
                                "field_name": "optional_string",
                                "display_name": "OptionalString"
                            },
                            {
                                "field_name": "required_string",
                                "display_name": "RequiredString"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_optional_by_default_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echoinvalidoptionalbydefaultstruct",
            "type": "command",
            "description": "Returns an invalid structure with Union and @FieldsOptionalByDefault",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.service1.optional_by_default_struct",
                        "output_fields": [
                            {
                                "field_name": "tag",
                                "display_name": "Tag"
                            },
                            {
                                "field_name": "long_case",
                                "display_name": "LongCase"
                            },
                            {
                                "field_name": "optional_string",
                                "display_name": "OptionalString"
                            },
                            {
                                "field_name": "required_string",
                                "display_name": "RequiredString"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_invalid_optional_by_default_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "create",
            "type": "command",
            "description": "",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "format",
                        "short_option": "",
                        "field_name": "create_spec.format",
                        "description": "The format of disk",
                        "type": "com.vmware.vapi.test.unions.union_with_crud_struct.disk_format",
                        "generic": "optional"
                    },
                    {
                        "long_option": "digest-enabled",
                        "short_option": "",
                        "field_name": "create_spec.digest_enabled",
                        "description": "Indicates whether the disk backing has digest file enabled",
                        "type": "boolean",
                        "generic": "optional"
                    },
                    {
                        "long_option": "eagerly-scrub",
                        "short_option": "",
                        "field_name": "create_spec.eagerly_scrub",
                        "description": "Indicates to the underlying filesystem whether the virtual disk backing file should be scrubbed completely at this time",
                        "type": "boolean",
                        "generic": "optional"
                    },
                    {
                        "long_option": "grain-size",
                        "short_option": "",
                        "field_name": "create_spec.grain_size",
                        "description": "The grain size in kB",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "required-for-all",
                        "short_option": "",
                        "field_name": "create_spec.required_for_all",
                        "description": "UnionCase field which is required for all CRUD operation",
                        "type": "long",
                        "generic": "optional"
                    },
                    {
                        "long_option": "thin-provisioned",
                        "short_option": "",
                        "field_name": "create_spec.thin_provisioned",
                        "description": "Indicates to the underlying filesystem, whether the virtual disk backing file should be allocated lazily (using thin provisioning)",
                        "type": "boolean",
                        "generic": "optional"
                    },
                    {
                        "long_option": "write-through",
                        "short_option": "",
                        "field_name": "create_spec.write_through",
                        "description": "Indicates whether writes should go directly to the file system or should be buffered",
                        "type": "boolean",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "create"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.unions.service1",
            "name": "echoinvalidunionwithcrudstruct",
            "type": "command",
            "description": "Returns an invalid structure with Union and @Crud",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.unions.union_with_crud_struct",
                        "output_fields": [
                            {
                                "field_name": "format",
                                "display_name": "Format"
                            },
                            {
                                "field_name": "uuid",
                                "display_name": "Uuid"
                            },
                            {
                                "field_name": "change_id",
                                "display_name": "ChangeId"
                            },
                            {
                                "field_name": "content_id",
                                "display_name": "ContentId"
                            },
                            {
                                "field_name": "digest_enabled",
                                "display_name": "DigestEnabled"
                            },
                            {
                                "field_name": "eagerly_scrub",
                                "display_name": "EagerlyScrub"
                            },
                            {
                                "field_name": "grain_size",
                                "display_name": "GrainSize"
                            },
                            {
                                "field_name": "required_for_all",
                                "display_name": "RequiredForAll"
                            },
                            {
                                "field_name": "split",
                                "display_name": "Split"
                            },
                            {
                                "field_name": "thin_provisioned",
                                "display_name": "ThinProvisioned"
                            },
                            {
                                "field_name": "write_through",
                                "display_name": "WriteThrough"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.unions.service1",
                "operation_id": "echo_invalid_union_with_crud_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test",
            "name": "versioning",
            "type": "namespace",
            "description": ""
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning",
            "name": "newserver",
            "type": "namespace",
            "description": "Represents newer version of API (OldServer - previous version)"
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.newserver",
            "name": "method",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "param1",
                        "short_option": "",
                        "field_name": "param1",
                        "description": "param 1",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "param2",
                        "short_option": "",
                        "field_name": "param2",
                        "description": "param 2 (not there in old version - OldServer)",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.new_server",
                "operation_id": "method"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.newserver",
            "name": "acceptstruct",
            "type": "command",
            "description": "New operation - not there in OldServer",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "mandatory",
                        "short_option": "",
                        "field_name": "struct.mandatory",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "optional",
                        "short_option": "",
                        "field_name": "struct.optional",
                        "description": "optional field",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.new_server",
                "operation_id": "accept_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.newserver",
            "name": "returnstruct",
            "type": "command",
            "description": "New operation - not there in OldServer",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.versioning.new_server.struct",
                        "output_fields": [
                            {
                                "field_name": "mandatory",
                                "display_name": "Mandatory"
                            },
                            {
                                "field_name": "optional",
                                "display_name": "Optional"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.new_server",
                "operation_id": "return_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.newserver",
            "name": "returnoldstruct",
            "type": "command",
            "description": "Returns old struct (with less fields set)",
            "node_metadata": {
                "formatter": "simple",
                "output_field_list": [
                    {
                        "structure_id": "com.vmware.vapi.test.versioning.new_server.old_struct",
                        "output_fields": [
                            {
                                "field_name": "mandatory",
                                "display_name": "Mandatory"
                            }
                        ]
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.new_server",
                "operation_id": "return_old_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.newserver",
            "name": "accepterror",
            "type": "command",
            "description": "Accepts and error as parameter.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "mandatory",
                        "short_option": "",
                        "field_name": "param1.mandatory",
                        "description": "v1 field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "new-field",
                        "short_option": "",
                        "field_name": "param1.new_field",
                        "description": "new v2 field",
                        "type": "string",
                        "generic": "optional"
                    }
                ],
                "formatter": "simple",
                "service_id": "com.vmware.vapi.test.versioning.new_server",
                "operation_id": "accept_error"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning",
            "name": "oldserver",
            "type": "namespace",
            "description": "Represents older version of API (NewServer is the newer one)"
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.oldserver",
            "name": "method",
            "type": "command",
            "description": "Test operation.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "param1",
                        "short_option": "",
                        "field_name": "param1",
                        "description": "param 1",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.old_server",
                "operation_id": "method"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.oldserver",
            "name": "acceptstructwithoptionalstruct",
            "type": "command",
            "description": "Test operation with struct with an optional struct.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "mandatory",
                        "short_option": "",
                        "field_name": "struct.mandatory",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "optional-struct-string-field",
                        "short_option": "",
                        "field_name": "struct.optional_struct.string_field",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.old_server",
                "operation_id": "accept_struct_with_optional_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.oldserver",
            "name": "acceptstructwithliststruct",
            "type": "command",
            "description": "Test operation with struct with a list of structs.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "mandatory",
                        "short_option": "",
                        "field_name": "struct.mandatory",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "list-struct-string-field",
                        "short_option": "",
                        "field_name": "struct.list_struct.string_field",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.old_server",
                "operation_id": "accept_struct_with_list_struct"
            }
        }
        ,
        {
            "path": "com.vmware.vapi.test.versioning.oldserver",
            "name": "acceptstructwithnestedstructs",
            "type": "command",
            "description": "Test operation with struct with nested struct types.",
            "node_metadata": {
                "options": [
                    {
                        "long_option": "mandatory",
                        "short_option": "",
                        "field_name": "struct.mandatory",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "optional-struct-string-field",
                        "short_option": "",
                        "field_name": "struct.optional_struct.string_field",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "list-struct-string-field",
                        "short_option": "",
                        "field_name": "struct.list_struct.string_field",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    },
                    {
                        "long_option": "nested-struct-string-field",
                        "short_option": "",
                        "field_name": "struct.nested_struct.string_field",
                        "description": "required field",
                        "type": "string",
                        "generic": ""
                    }
                ],
                "service_id": "com.vmware.vapi.test.versioning.old_server",
                "operation_id": "accept_struct_with_nested_structs"
            }
        }
    ],
    "metamodel": {
        "component": {
            "name": "com.vmware.vapi.test",
            "documentation": "",
            "docModels": {
            },
            "metadata": {
            },
            "fingerprint": "c4a8b7f1f332f3cc923260da5cb2c0155e659954",
            "packages": [
                {
                    "name": "com.vmware.vapi.test",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                        "Component": {"value": "true"}
                    },
                    "fingerprint": "10148789fe29870de8cf83da8f3b6df195071fa4",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.id_list_structure",
                            "documentation": "doc",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "doc"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "cf4b9f9772ad6ee3363a995dda9a14e1c77ed110",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "primary",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.test.TestResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.test.TestResource.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.test.TestResource"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.test.TestResource"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "com.vmware.test.TestResource"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "ref",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.test.TestOtherResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.test.TestOtherResource.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.test.TestOtherResource"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.test.TestOtherResource"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.test.TestOtherResource"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "list_of_refs",
                                    "documentation": "doc\nreason\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.test.TestOtherResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.test.TestOtherResource.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.test.TestOtherResource"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.test.TestOtherResource"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.test.TestOtherResource"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                }
                                ,
                                {
                                    "name": "string_field",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.ovf_error",
                            "documentation": "OvfError (from vCD-e API)",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "OvfError (from vCD-e API)"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Includable": {"value": "true"}
                            },
                            "fingerprint": "9679651e595f36b8a9bb853079d1ae48678d3824",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "category",
                                    "documentation": "The error category.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The error category."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.ovf_server_error",
                            "documentation": "OvfServerError (from vCD-e API)",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "OvfServerError (from vCD-e API)"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Include": {"value": "com.vmware.vapi.test.ovf_error"}
                            },
                            "fingerprint": "e3a4a66bb3db2e68c731a9c46dd78499a270f4db",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "error",
                                    "documentation": "The error.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The error."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.error"}
                                }
                                ,
                                {
                                    "name": "category",
                                    "documentation": "The error category.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The error category."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.echo",
                            "documentation": "vAPI test interface for integration tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for integration tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "0e83dfc0ba697141bc7c46a36deb6b05ec05e247",
                            "constants": [
                                {
                                    "name": "constant_string",
                                    "documentation": "String constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "String"},
                                    "value": "val"
                                }
                                ,
                                {
                                    "name": "constant_long",
                                    "documentation": "Long constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Long constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Long"},
                                    "value": 1000000000000
                                }
                                ,
                                {
                                    "name": "constant_boolean",
                                    "documentation": "Boolean constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Boolean constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Boolean"},
                                    "value": true
                                }
                                ,
                                {
                                    "name": "constant_double",
                                    "documentation": "Double constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Double constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Double"},
                                    "value": 1.5
                                }
                                ,
                                {
                                    "name": "constant_double2",
                                    "documentation": "Double constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Double constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Double"},
                                    "value": 1.5E-9
                                }
                                ,
                                {
                                    "name": "constant_strings",
                                    "documentation": "String array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["a", "b"]
                                }
                                ,
                                {
                                    "name": "constant_longs",
                                    "documentation": "Long array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Long array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "Long"},
                                    "value": [100, 200]
                                }
                                ,
                                {
                                    "name": "constant_doubles",
                                    "documentation": "Long array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Long array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "Double"},
                                    "value": [1.5, 2.5]
                                }
                                ,
                                {
                                    "name": "constant_booleans",
                                    "documentation": "Boolean array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Boolean array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "Boolean"},
                                    "value": [true, false]
                                }
                                ,
                                {
                                    "name": "constant_strings_diff_pkg",
                                    "documentation": "String array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["com.vmware.CDROM", "com.vmware.floppy"]
                                }
                            ],
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.echo.test_enum",
                                    "documentation": "test enumumeration",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test enumumeration"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "766ce0e0ae17857dfd9d04fcc7ae0085ead39c64",
                                    "values": [
                                        {
                                            "documentation": "const one",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "const one"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "ONE"
                                        }
                                        ,
                                        {
                                            "documentation": "const two",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "const two"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                        ,
                                        {
                                            "documentation": "const three",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "const three"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "THREE"
                                        }
                                    ]
                                }
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_structure_simple",
                                    "documentation": "simple test structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "simple test structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "11d70f73fef48ebb2ed319c9f9431d7b523767aa",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_multiple_nested_structures",
                                    "documentation": "structure with the same nested structure occuring twice",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "structure with the same nested structure occuring twice"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1b3d11338d4099a85b503670c20ab30263cce613",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "structure_field1",
                                            "documentation": "field using other structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using other structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "structure_field2",
                                            "documentation": "field using other structure - second time",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using other structure - second time"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_structure_complex",
                                    "documentation": "more complex test structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "more complex test structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "311838afe55fa4d55bdcc6eae2b21780b4d55af2",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "boolean_field",
                                            "documentation": "boolean field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "boolean field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "double_field",
                                            "documentation": "double field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "double field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                        ,
                                        {
                                            "name": "date_time_field",
                                            "documentation": "DateTime field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "DateTime field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "date_time"}
                                        }
                                        ,
                                        {
                                            "name": "uri_field",
                                            "documentation": "URI field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "URI field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "URI"}
                                        }
                                        ,
                                        {
                                            "name": "secret_field",
                                            "documentation": "Secret field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Secret field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "secret"}
                                        }
                                        ,
                                        {
                                            "name": "enum_field",
                                            "documentation": "field using enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "list_primitive_field",
                                            "documentation": "list field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_primitive_field",
                                            "documentation": "optional String field\ntest needs optional",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional String field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "test needs optional"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "structure_field",
                                            "documentation": "field using other structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using other structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.nested_structure_with_id",
                                    "documentation": "Nested non-model structure with...",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested non-model structure with..."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6dae55b0cdd27eee145b05391c5a0901e2f35d23",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "foreign1",
                                            "documentation": "...ID field\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "...ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_structure_with_id",
                                    "documentation": "A test model structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A test model structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "d59c2c054b6fb045a6b7cc8969379d219ac95ecc",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "primary",
                                            "documentation": "Primary ID - the model key\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary ID - the model key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "foreign1",
                                            "documentation": "Other ID field\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Other ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "foreign2",
                                            "documentation": "Third ID field\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Third ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "nested",
                                            "documentation": "Reference to other structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Reference to other structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.nested_structure_with_id"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_structure_with_constants",
                                    "documentation": "test structure with constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test structure with constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "dbae12de84cf51bd74c94b32b82cddbf02e350d2",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                        {
                                            "name": "struct_constant_string",
                                            "documentation": "String constant in structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String constant in structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "String"},
                                            "value": "val"
                                        }
                                        ,
                                        {
                                            "name": "struct_constant_long",
                                            "documentation": "Long constant in structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Long constant in structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "Long"},
                                            "value": 100
                                        }
                                    ],
                                    "fields": [
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_structure_with_optional_id",
                                    "documentation": "A test model with optional IDs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A test model with optional IDs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "aa6f0ac2759bfee2db969f3dfaef3dd676de291a",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "primary",
                                            "documentation": "Primary ID - the model key\nreason\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary ID - the model key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "foreign",
                                            "documentation": "Other ID field\nreason\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Other ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.test_structure_with_optional_lists",
                                    "documentation": "A test model with optional list and list of optionals",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A test model with optional list and list of optionals"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6c3916e44d1ef1bdfc188314f40abc6229075ea0",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "list_of_optionals",
                                            "documentation": "List of optionals of type string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "List of optionals of type string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                        ,
                                        {
                                            "name": "optional_list",
                                            "documentation": "Optional list of string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Optional list of string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo.empty_struct",
                                    "documentation": "Empty structure (without fields)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Empty structure (without fields)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0ffb78c966af6d19268859ba8cf1b363e59225e3",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_void",
                                    "documentation": "void operation",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "void operation"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8704689b2f84ac4da55db457164f8580d09770a2",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_boolean",
                                    "documentation": "echo a Boolean value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Boolean value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e479c5d147533be2cb9d6f1d34f998da66236839",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string",
                                    "documentation": "echo a String value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a String value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b73463ab435b0637e369f9302d6bd408800854ee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long",
                                    "documentation": "echo a Long value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Long value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ff7ee22e1cc128dcbe095f82f258999877dc74f0",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "long"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_double",
                                    "documentation": "echo a Double value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Double value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4fe2fbdbe235a60aaf78e496a551a4699371bd50",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "double"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binary",
                                    "documentation": "echo a Binary value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Binary value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f16ff1fa8660e1c692056163e2806c072933d5e3",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "binary"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "binary"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_opaque",
                                    "documentation": "echo an Opaque value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an Opaque value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f794c388230d483db7215f33be37b9952ba4338f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "opaque"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "opaque"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_date_time",
                                    "documentation": "echo a DateTime value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a DateTime value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "95f020c2f0aab386c3f91493bf4ade7b8d2eb9d1",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "date_time"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "date_time"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri",
                                    "documentation": "echo an URI value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an URI value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f57171e21f9fc1c5542ca566f24eb62f38043f1c",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "URI"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "URI"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_secret",
                                    "documentation": "echo a Secret value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Secret value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e88dcefb1a27c69ebf0ad1b1c5bd9d1f944d917f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "secret"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "secret"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum",
                                    "documentation": "echo an enumeration value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an enumeration value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "35ecdefab71d79527ce97f4d680f9ff455486005",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_id",
                                    "documentation": "echo an ID value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an ID value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b2c5ecc288c143e1b7ec2694a418db196d2c0f2d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nThe parameter must be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe result will be an identifier for the resource type: com.vmware.resource_echo.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo"}
                                        },
                                        "type": {"category": "primitive", "primitive_type": "ID"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_boolean_list",
                                    "documentation": "echo List of Boolean",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Boolean"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "48e8cb44a448795f6c93d2ed42d11d88d310079a",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string_list",
                                    "documentation": "echo List of String",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of String"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1d2b9d5e99960eb7ae8212c796aa6086393fe67d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_list",
                                    "documentation": "echo List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b6392187719e0a183846d3c8a443fcb5d26f51f7",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_double_list",
                                    "documentation": "echo List of Double",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Double"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b1b878005f85ac47941ca96a1fdbb66475805410",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binary_list",
                                    "documentation": "echo List of Binary",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Binary"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3012e1b72e4e7c07caae2d0dd346dbfe6f762eae",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri_list",
                                    "documentation": "echo List of URI",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of URI"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "48b4512160e1d5e85922ccf6743839dadab5c119",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_secret_list",
                                    "documentation": "echo List of Secret",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Secret"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e4be140bfc1cd4da6e7d2b4dbaa4d57e7021eab7",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_date_time_list",
                                    "documentation": "echo List of DateTime",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of DateTime"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "398aad9aa9606b4daf76bc3ca9371b9507236256",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_list",
                                    "documentation": "echo List of enum",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of enum"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e02376a8f595eab61e69fbff90a93cec257ee5bf",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_id_list",
                                    "documentation": "echo List of ID",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of ID"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6af15c4a0cd3deb81d6abb1ad40130cee9e65597",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nThe parameter must contain identifiers for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe result will contain identifiers for the resource type: com.vmware.resource_echo.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will contain identifiers for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo"}
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_list",
                                    "documentation": "echo List of structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e4b0414e1103ebed65291fea5a7d256b11254e2c",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_list_list",
                                    "documentation": "echo List of List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "150a06d655d44f1013d1bad039a5d59caf81ebfa",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_boolean_optional",
                                    "documentation": "echo optional Boolean",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Boolean"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eacaf3cd1fa41a3635eea3cdae720e5e58be0af2",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string_optional",
                                    "documentation": "echo optional String",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional String"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9bdb271075d8bdd64461a4342045409504ecd7ef",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_optional",
                                    "documentation": "echo optional Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "07dc8691b720e9c20aff1423415833521111fa2e",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_double_optional",
                                    "documentation": "echo optional Double",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Double"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "09c2bed60558faee6c7592eab0c1c27436ac30c9",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binary_optional",
                                    "documentation": "echo optional Binary",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Binary"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "814d14d65be344d509236819c7242b4cd523a905",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_date_time_optional",
                                    "documentation": "echo optional DateTime",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional DateTime"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "08426998df4e4ba6296c7fce578f0b66b529c342",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_optional",
                                    "documentation": "echo optional enum value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional enum value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2b26661dfe05e443f4f87bbf517b997ad58f1b83",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo.test_enum"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri_optional",
                                    "documentation": "echo optional URI",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional URI"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0a482820141bc5355e8b1ac98a5bf3238a53e71f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_secret_optional",
                                    "documentation": "echo optional Secret",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Secret"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "20a8ee4fa115b299501fcc44db8522483e75c2ab",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_id_optional",
                                    "documentation": "echo optional ID",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional ID"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "497f3e283270029a5f0a01ed52bbf94103baaa55",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason\nThe parameter must be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason\nThe result will be an identifier for the resource type: com.vmware.resource_echo.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo"}
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_optional",
                                    "documentation": "echo optional structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ed84b1080595b11af68fb24a1fbfa8c92d7b8e12",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_optional_list",
                                    "documentation": "echo optional List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6f6c286315006f3c6387d0b5ca239f886f50d9b5",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_optional_list",
                                    "documentation": "echo optional List of structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional List of structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c8e175f9eed5b0f9fa82797cb9ddd5571f278764",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_long_list",
                                    "documentation": "echo List of optional Long values",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional Long values"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8be6fa9f8187d189b1aef56264bc5ceb681f70cf",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_string_list",
                                    "documentation": "echo List of optional String values",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional String values"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e4f0f4973cca4550714ce90cbc53458ee0de2d0b",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_structure_list",
                                    "documentation": "echo List of optional structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1a328cf2f83cdb629199f2a097c9122563e94d87",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_simple"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_long_list_list",
                                    "documentation": "echo List of optional List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9336a1b308296d55c903af29bbf1dea1979bfbee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure",
                                    "documentation": "echo structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b63fd9d9f4df47bedac38ebda62e48089d01273d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_complex"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_complex"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_nested_structure",
                                    "documentation": "echo nested structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo nested structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "441cc458939ebd9d69d2eea448128e362ffe6bce",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_multiple_nested_structures"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_multiple_nested_structures"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error",
                                    "documentation": "echo a standard vAPI error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a standard vAPI error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5974fe4179315a2a6f8f9bbc3351eb675f11d6f6",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_list",
                                    "documentation": "echo List of standard vAPI errors",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of standard vAPI errors"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4b8fbcf15af54eb64f4047b514651b6d58396052",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_optional",
                                    "documentation": "echo optional std error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional std error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c14701dd87225f65841bf467142984637dfc73d2",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_with_optional_lists",
                                    "documentation": "",
                                    "docModels": {
                                        "descriptions": [
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "626228769f2991b665bdddbfa0148b03a602f6dd",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_with_optional_lists"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.test_structure_with_optional_lists"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_empty_struct",
                                    "documentation": "echo empty struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo empty struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5be9fff308d29daadae42779e01a676db0727f05",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.empty_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo.empty_struct"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.echo_constants",
                            "documentation": "vAPI test interface for integration tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for integration tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "3a61d041fb8340b59f2933125bf6610dc15ef021",
                            "constants": [
                                {
                                    "name": "CDROM",
                                    "documentation": "string constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "string constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "String"},
                                    "value": "com.vmware.CDROM"
                                }
                                ,
                                {
                                    "name": "FLOPPY",
                                    "documentation": "string constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "string constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "String"},
                                    "value": "com.vmware.floppy"
                                }
                                ,
                                {
                                    "name": "USB",
                                    "documentation": "string constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "string constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "String"},
                                    "value": "com.vmware.USB"
                                }
                                ,
                                {
                                    "name": "REMOVABLE",
                                    "documentation": "string array constant of constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "string array constant of constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]
                                }
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_constants.echo_struct_constant",
                                    "documentation": "Class to test constants inside Structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Class to test constants inside Structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1795f7c7b20e16f1d7fa57d5ab8a2b88f682eb39",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                        {
                                            "name": "constant_string",
                                            "documentation": "Struct string constant",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Struct string constant"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "String"},
                                            "value": "Hello"
                                        }
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.echo_constants.echo_error_constant",
                                    "documentation": "Class to test constants inside Errors",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Class to test constants inside Errors"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d5a839afb763c5311369f9e2e21e05af8a461c45",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                        {
                                            "name": "constant_string",
                                            "documentation": "Error string constant",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Error string constant"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "String"},
                                            "value": "Error"
                                        }
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "messages",
                                            "documentation": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Stack of one or more localizable messages for human "},
                                                            {"atTerm": "error"},
                                                            {"text": " consumers. "},
                                                            {
                                                                "paragraph": [
                                                                    {"text": " The message at the top of the stack (first in the list) describes the "},
                                                                    {"atTerm": "error"},
                                                                    {"text": " from the perspective of the "},
                                                                    {"atTerm": "operation"},
                                                                    {"text": " the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."}
                                                                ]
                                                            }

                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}}
                                        }
                                        ,
                                        {
                                            "name": "data",
                                            "documentation": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \nOperations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndicationstructures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Data to facilitate clients responding to the "},
                                                            {"atTerm": "operation"},
                                                            {"text": " reporting a standard "},
                                                            {"atTerm": "error"},
                                                            {"text": " to indicating that it was unable to complete successfully. "},
                                                            {
                                                                "paragraph": [
                                                                    {"text": ""},
                                                                    {"atTerm": "Operations"},
                                                                    {"text": " may provide data that clients can use when responding to "},
                                                                    {"atTerm": "errors"},
                                                                    {"text": ". Since the data that clients need may be specific to the context of the "},
                                                                    {"atTerm": "operation"},
                                                                    {"text": " reporting the "},
                                                                    {"atTerm": "error"},
                                                                    {"text": ", different "},
                                                                    {"atTerm": "operations"},
                                                                    {"text": " that report the same "},
                                                                    {"atTerm": "error"},
                                                                    {"text": " may provide different data in the "},
                                                                    {"atTerm": "error"},
                                                                    {"text": ". The documentation for each each "},
                                                                    {"atTerm": "operation"},
                                                                    {"text": " will describe what, if any, data it provides for each "},
                                                                    {"atTerm": "error"},
                                                                    {"text": " it reports. The "},
                                                                    {"atLink": {"resolved": "com.vmware.vapi.std.errors.ArgumentLocations", "isToType": true, "text": "ArgumentLocations"}},
                                                                    {"text": ", "},
                                                                    {"atLink": {"resolved": "com.vmware.vapi.std.errors.FileLocations", "isToType": true, "text": "FileLocations"}},
                                                                    {"text": ", and "},
                                                                    {"atLink": {"resolved": "com.vmware.vapi.std.errors.TransientIndication", "isToType": true, "text": "TransientIndication"}},
                                                                    {"text": ""},
                                                                    {"atTerm": "structures"},
                                                                    {"text": " are intended as possible values for this "},
                                                                    {"atTerm": "field"},
                                                                    {"text": ". "},
                                                                    {"atLink": {"resolved": "com.vmware.vapi.std.DynamicID", "isToType": true, "text": "com.vmware.vapi.std.DynamicID"}},
                                                                    {"text": " may also be useful as a value for this "},
                                                                    {"atTerm": "field"},
                                                                    {"text": " (although that is not its primary purpose). Some "},
                                                                    {"atTerm": "services"},
                                                                    {"text": " may provide their own specific "},
                                                                    {"atTerm": "structures"},
                                                                    {"text": " for use as the value of this "},
                                                                    {"atTerm": "field"},
                                                                    {"text": " when reporting "},
                                                                    {"atTerm": "errors"},
                                                                    {"text": " from their "},
                                                                    {"atTerm": "operations"},
                                                                    {"text": "."}
                                                                ]
                                                            }

                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "Some "},
                                                        {"atTerm": "operations"},
                                                        {"text": " will not set this "},
                                                        {"atTerm": "field"},
                                                        {"text": " when reporting "},
                                                        {"atTerm": "errors"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.echo_generics",
                            "documentation": "vAPI test interface for integration tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for integration tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "969aebcdd6fd4d72be2ab53703bfdd31e7521b31",
                            "constants": [
                            ],
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.echo_generics.echo_enum",
                                    "documentation": "Test enumeration type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test enumeration type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e2a96efb6d43b3d84a6e3659915687f3b6c5b572",
                                    "values": [
                                        {
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "name": "ONE"
                                        }
                                        ,
                                        {
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                        ,
                                        {
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "name": "THREE"
                                        }
                                    ]
                                }
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.map_and_set_test_structure",
                                    "documentation": "Test structure with map and set field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with map and set field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5b75262355749269d00eec30e882214c5e0d735d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "set_field",
                                            "documentation": "Set field used for testing.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Set field used for testing."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "set_field_with_id",
                                            "documentation": "Set field used for testing.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: test_resource_id. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: test_resource_id.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Set field used for testing."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "test_resource_id"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "test_resource_id"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "test_resource_id"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "set_field_with_long",
                                            "documentation": "Set field used for testing.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Set field used for testing."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "map_field",
                                            "documentation": "Map field used for testing.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map field used for testing."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                        }
                                        ,
                                        {
                                            "name": "map_field_with_id",
                                            "documentation": "Map field used for testing.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.resource_echo_generics. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map field used for testing."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                        }
                                        ,
                                        {
                                            "name": "map_field_with_long",
                                            "documentation": "Map field used for testing.\nWhen clients pass a value of this structure as a parameter, the value in the field map must be an identifier for the resource type: test_resource_long_id. When operations return a value of this structure as a result, the value in the field map will be an identifier for the resource type: test_resource_long_id.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map field used for testing."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "test_resource_long_id"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "test_resource_long_id"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "test_resource_long_id"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "long"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.set_test_structure",
                                    "documentation": "Test structure with only set field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with only set field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f0487e1a32aaf18eab672b0c3214370045566a78",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "set_field",
                                            "documentation": "Set field used for testing.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Set field used for testing."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.map_test_structure",
                                    "documentation": "Test structure with only map field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with only map field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "bdd08ad5f8457cba7fc3cb2469b68544490ff635",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "map_field",
                                            "documentation": "Map field used for testing.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map field used for testing."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id",
                                    "documentation": "Simple structure used to test more complex map and set.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple structure used to test more complex map and set."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "c2f8d3f2de3c5436753f0dd889bfaddbca340abf",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Id of the structure.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo_generics. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.simple_structure_with_complex_id",
                                    "documentation": "Test structure with complex Id",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with complex Id"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "b38d200cbaf7c019cdbf4cde1828cf94deee2b5b",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Id of the structure.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo_generics. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "id2",
                                            "documentation": "Id of the structure.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo_generics. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"order": "2"},
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.simple_structure_with_array_of_ids",
                                    "documentation": "Test structure with array of IDs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with array of IDs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "9cd159d1d5c49ed0321a14d86666fea39175cb9f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Id of the structure.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "list_ofi_ds",
                                            "documentation": "list of IDs\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of IDs"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_list_ofi_ds",
                                            "documentation": "optional list of IDs\nreason\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional list of IDs"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                        ,
                                        {
                                            "name": "list_of_optionali_ds",
                                            "documentation": "list of optional IDs\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of optional IDs"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                        ,
                                        {
                                            "name": "list_of_structure_with_id",
                                            "documentation": "list structure with ID",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list structure with ID"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.simple_structure_with_generics_of_ids",
                                    "documentation": "Test structure with generics of IDs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with generics of IDs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "ef81730e62c75e15c26abef017a3d19187cb039c",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Id of the structure.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "optional_set_of_ids",
                                            "documentation": "optional set of Ids\nreason\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional set of Ids"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                        ,
                                        {
                                            "name": "optional_map_field_with_id",
                                            "documentation": "optional map with ID keys\nreason\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional map with ID keys"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.structure_with_secret_list",
                                    "documentation": "Simple structure for testing list of secrets functionality.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple structure for testing list of secrets functionality."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "10f86ff330282764bee0ac37609e31eaeaba3578",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "secret_list",
                                            "documentation": "List of Secret field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "List of Secret field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_generics.structure_with_secret_map",
                                    "documentation": "Simple structure for testing map of string to secrets functionality.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple structure for testing map of string to secrets functionality."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0c93ecb29df7f1816fa5f1fa24d5ba7390ef105f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "secret_map",
                                            "documentation": "Map of String to Secret field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map of String to Secret field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_map",
                                    "documentation": "Test for simple map as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for simple map as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8c7a7e613f56f415d82cff803d604ee0d9f561d9",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_map",
                                    "documentation": "Test for map with Enum key as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for map with Enum key as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0e0c9183e5c74905bca6f131f38fee20de66c1e2",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.echo_enum"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.echo_enum"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri_map",
                                    "documentation": "Test for map with URI key as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for map with URI key as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "65a3f3786607a71dc4c77eac4f2e50626a3cafee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "URI"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "URI"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_complex_map",
                                    "documentation": "Test for complex map as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for complex map as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2a71d72a862c80bba5f8e554157abfc942b2dde8",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_complex_id_map",
                                    "documentation": "Test for complex map as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for complex map as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c69196958738395314b7dc94d9f316f32cabc922",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input\nThe key in the parameter map must be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The key in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe key in the result map will be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The key in the "},
                                                    {"atTerm": "result"},
                                                    {"text": " "},
                                                    {"atTerm": "map"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo_generics"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo_generics"}
                                        },
                                        "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.simple_structure_with_id"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_complex_long_map",
                                    "documentation": "Test for complex map as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for complex map as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e8e46d5d8f8167bf1fa1e6573fbcc4e7262d29f3",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input\nThe value in the parameter map must be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The value in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "long"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe value in the result map will be an identifier for the resource type: com.vmware.resource_echo_generics.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The value in the "},
                                                    {"atTerm": "result"},
                                                    {"text": " "},
                                                    {"atTerm": "map"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo_generics"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo_generics"}
                                        },
                                        "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "long"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set",
                                    "documentation": "Test for simple set as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for simple set as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c8ad51dffb0052fed575787dae4a6019ebbcb98f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_with_id",
                                    "documentation": "Test for simple set as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for simple set as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "087c94a746634892fc1f8dea3cc9f1c71f613e4e",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input\nThe parameter must contain identifiers for the resource type: com.vmware.resource_echo_generics.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo_generics"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo_generics"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe result will contain identifiers for the resource type: com.vmware.resource_echo_generics.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will contain identifiers for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo_generics"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo_generics"}
                                        },
                                        "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_with_long",
                                    "documentation": "Test for simple set as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for simple set as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "16306c478216a76d0afa641c517ed1b2fc3baafa",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_with_enum",
                                    "documentation": "Test for set of enum as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for set of enum as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0592fbb7ea5f173ec8026eea88eb67553f2d1c3c",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.echo_enum"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.echo_generics.echo_enum"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_with_uri",
                                    "documentation": "Test for set of URI as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test for set of URI as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8ec7d52a1ee3127f1d5dfd34f5d8b3edd6d0ecff",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_map",
                                    "documentation": "Test optional map of string to string as argument and as return value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test optional map of string to string as argument and as return value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "524968f9528f061197114a007d148aefde728657",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.echo_has_fields_of",
                            "documentation": "Specifies a test interface for VMODL2 @HasFieldsOf annotation.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Specifies a test interface for VMODL2 @HasFieldsOf annotation."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "2b0f2ff3ba0849f9875400b6a08cd78af31aa1b7",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_has_fields_of.has_fields_of_struct",
                                    "documentation": "Simple HasFieldsOf structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple HasFieldsOf structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eacf103c56a6c404eedf37aaf9e134c3b1da1445",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_has_fields_of.nested_has_fields_of_struct",
                                    "documentation": "Nested HasFieldsOf structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested HasFieldsOf structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "610c2f159da8cb2b5110e836c439b7a47175d88e",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "nested_struct_field",
                                            "documentation": "Nested struct field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Nested struct field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_has_fields_of.has_fields_of_struct"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_has_fields_of.sample_struct",
                                    "documentation": "Struct with HasFieldsOf field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Struct with HasFieldsOf field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "492a7276d998c662ae94a580a483575a614af8b6",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "nested_struct_field",
                                            "documentation": "Nested struct field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Nested struct field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_has_fields_of.has_fields_of_struct"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_has_fields_of_struct",
                                    "documentation": "echo HasFieldsOf structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo HasFieldsOf structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a452e8900005062f00b268b7eb46f04363c7baf4",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nThe parameter must contain all the attributes defined in EchoHasFieldsOf.HasFieldsOfStruct.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.EchoHasFieldsOf.HasFieldsOfStruct", "isToType": true, "text": "com.vmware.vapi.test.EchoHasFieldsOf.HasFieldsOfStruct"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.echo_has_fields_of.has_fields_of_struct"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_nested_has_fields_of_struct",
                                    "documentation": "echo NestedHasFieldsOf structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo NestedHasFieldsOf structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e49f18d61e127103baf6f54b511d5bbcd7c3993f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nThe parameter must contain all the attributes defined in EchoHasFieldsOf.NestedHasFieldsOfStruct.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.EchoHasFieldsOf.NestedHasFieldsOfStruct", "isToType": true, "text": "com.vmware.vapi.test.EchoHasFieldsOf.NestedHasFieldsOfStruct"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.echo_has_fields_of.nested_has_fields_of_struct"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_has_fields_of_struct_field",
                                    "documentation": "echo structure with HasFieldsOf field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo structure with HasFieldsOf field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "033df97be3daf8a25fd9039b32f671a096714770",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_has_fields_of.sample_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_has_fields_of.sample_struct"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.echo_recursive",
                            "documentation": "vAPI test interface for integration tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for integration tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "e81053a13e67137ece9f0e1e0fc7440b53c429d2",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive",
                                    "documentation": "Structure which contains a circular type reference (to itself).",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure which contains a circular type reference (to itself)."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e12eaa568fc5a24e01d60025a11db5d95709dc55",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "data",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "next",
                                            "documentation": "reference to itself\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "reference to itself"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_structure_self_recursive",
                                    "documentation": "Echo structure.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echo structure."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5afdb1d32a923aa0c1195cb98733eef2e3d924fb",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_self_recursive_optional",
                                    "documentation": "Echo optional structure.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echo optional structure."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6f0d5d086adc4482fa3f80ca600d9dad69cc940a",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_self_recursive_list",
                                    "documentation": "Echo list of structures.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echo list of structures."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "47eaacc2e7bcc89947a4c6b95a1e73bef5c245e8",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.echo_recursive.test_structure_self_recursive"}}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.error_reporting",
                            "documentation": "vAPI test interface for end-to-end error reporting",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for end-to-end error reporting"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "b958ac692d631415e73be5bb7930dd83f47d5056",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "test_no_error",
                                    "documentation": "Test operation that does not report an error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that does not report an error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b5eedc6235ef3620f976e596b05457a279ac96d0",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_filter_errors",
                                    "documentation": "Test error reporting filter - ApiProvider decorator (like Authnentication filter which reports different errors)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test error reporting filter - ApiProvider decorator (like Authnentication filter which reports different errors)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "02334fe4271693b9a7a11f7a2115a734d79dfdad",
                                    "params": [
                                        {
                                            "name": "error_name",
                                            "documentation": "the cannonical name of the error to be reported by the filter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "the cannonical name of the error to be reported by the filter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_operation_specific_error",
                                    "documentation": "Test operation that reports an operation-specific error (e.g. NotFound)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that reports an operation-specific error (e.g. NotFound)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "62706883d0233387fef7216b5bef94435b4dfd32",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "not used",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "not used"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "unconditioanlly reports this error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "unconditioanlly reports this error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_operation_multiple_errors",
                                    "documentation": "Test operation that declares multiple errors and reports different ones based on input",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that declares multiple errors and reports different ones based on input"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "03cdc2d7342c9cb68b3047060c55b496f5bb5c2f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "determines reported error (1:NotFound, 2:ResourceInUse, 3:InvalidElementType)",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "determines reported error (1:NotFound, 2:ResourceInUse, 3:InvalidElementType)"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "for 1",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "for 1"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "for 2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "for 2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_element_type",
                                            "name": "invalid_element_type",
                                            "documentation": "for 3",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "for 3"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_element_type"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_undeclared_error",
                                    "documentation": "Test operation that reports an error that isn't specified in the errors clause which should result in the runtime reporting an InternalServerError",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that reports an error that isn't specified in the errors clause which should result in the runtime reporting an InternalServerError"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0c5173ebf9bd87a08d9ef9d070a3924a5e298584",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binding_specific_error",
                                    "documentation": "Test operation that throws a programming language specific error which should result in the runtime reporting an InternalServerError",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that throws a programming language specific error which should result in the runtime reporting an InternalServerError"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3d4ffc48306a90f973ebb2cf1d6f3acffccc93c3",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_base_error",
                                    "documentation": "Test operation that reports the base Error type",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that reports the base Error type"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "70b227405d32c8e97687b84a9317f4b49f2d4d7d",
                                    "params": [
                                        {
                                            "name": "report_derived_error",
                                            "documentation": "if true the operation will report NotFound which clients will see as InternalServerError because NotFound is not listed in the throws clause",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if true the operation will report "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.NotFound", "isToType": true, "text": "NotFound"}},
                                                            {"text": " which clients will see as InternalServerError because "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.NotFound", "isToType": true, "text": "NotFound"}},
                                                            {"text": " is not listed in the throws clause"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.error",
                                            "name": "error",
                                            "documentation": "if input is false",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if "},
                                                            {"atCode": "input"},
                                                            {"text": " is "},
                                                            {"atCode": "false"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.error_reporting_async",
                            "documentation": "vAPI test interface for end-to-end error reporting",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for end-to-end error reporting"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "2e3bb2a551356b9526b8f8600460b7a173d0630c",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "test_no_error",
                                    "documentation": "Test operation that does not report an error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that does not report an error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b5eedc6235ef3620f976e596b05457a279ac96d0",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_filter_errors",
                                    "documentation": "Test error reporting filter - ApiProvider decorator (like Authnentication filter which reports different errors)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test error reporting filter - ApiProvider decorator (like Authnentication filter which reports different errors)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "02334fe4271693b9a7a11f7a2115a734d79dfdad",
                                    "params": [
                                        {
                                            "name": "error_name",
                                            "documentation": "the cannonical name of the error to be reported by the filter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "the cannonical name of the error to be reported by the filter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_operation_specific_error",
                                    "documentation": "Test operation that reports an operation-specific error (e.g. NotFound)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that reports an operation-specific error (e.g. NotFound)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "62706883d0233387fef7216b5bef94435b4dfd32",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "not used",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "not used"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "unconditioanlly reports this error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "unconditioanlly reports this error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_operation_multiple_errors",
                                    "documentation": "Test operation that declares multiple errors and reports different ones based on input",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that declares multiple errors and reports different ones based on input"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "03cdc2d7342c9cb68b3047060c55b496f5bb5c2f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "determines reported error (1:NotFound, 2:ResourceInUse, 3:InvalidElementType)",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "determines reported error (1:NotFound, 2:ResourceInUse, 3:InvalidElementType)"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "for 1",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "for 1"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "for 2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "for 2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_element_type",
                                            "name": "invalid_element_type",
                                            "documentation": "for 3",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "for 3"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_element_type"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_undeclared_error",
                                    "documentation": "Test operation that reports an error that isn't specified in the errors clause which should result in the runtime reporting an InternalServerError",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that reports an error that isn't specified in the errors clause which should result in the runtime reporting an InternalServerError"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0c5173ebf9bd87a08d9ef9d070a3924a5e298584",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binding_specific_error",
                                    "documentation": "Test operation that throws a programming language specific error which should result in the runtime reporting an InternalServerError",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that throws a programming language specific error which should result in the runtime reporting an InternalServerError"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3d4ffc48306a90f973ebb2cf1d6f3acffccc93c3",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_base_error",
                                    "documentation": "Test operation that reports the base Error type",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation that reports the base Error type"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "70b227405d32c8e97687b84a9317f4b49f2d4d7d",
                                    "params": [
                                        {
                                            "name": "report_derived_error",
                                            "documentation": "if true the operation will report NotFound which clients will see as InternalServerError because NotFound is not listed in the throws clause",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if true the operation will report "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.NotFound", "isToType": true, "text": "NotFound"}},
                                                            {"text": " which clients will see as InternalServerError because "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.NotFound", "isToType": true, "text": "NotFound"}},
                                                            {"text": " is not listed in the throws clause"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.error",
                                            "name": "error",
                                            "documentation": "if input is false",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if "},
                                                            {"atCode": "input"},
                                                            {"text": " is "},
                                                            {"atCode": "false"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.privilege",
                            "documentation": "Sample test service for testing automatic generation of privilege documentation.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Sample test service for testing automatic generation of privilege documentation."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "0e8065707d342f2c8e6f87666a5207d5a906deb6",
                            "constants": [
                                {
                                    "name": "REMOVABLE",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]
                                }
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.privilege.get_spec",
                                    "documentation": "Get spec.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Get spec."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0ed6bc23417ce918c74b2d5bf28c8d60e2472f4c",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key of the resource.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.privilege. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key of the resource."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "foreign_id",
                                            "documentation": "foreign id.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.foreign. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.foreign.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "foreign id."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.foreign"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.foreign"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.foreign"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.privilege.map_spec",
                                    "documentation": "Spec with Map field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Spec with Map field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1c2d96e809f07295d9b35fbef0f38c9b0a4b8554",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "map_field",
                                            "documentation": "Map of IDs to get privileges assigned on.\nWhen clients pass a value of this structure as a parameter, the key and value in the field map must be an identifier for the resource type: com.vmware.vapi.privilege. When operations return a value of this structure as a result, the key and value in the field map will be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map of IDs to get privileges assigned on."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key and value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key and value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.privilege.nested_spec",
                                    "documentation": "Nested spec.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested spec."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "176c711024c04caac7550ef3ad8fc99ae9562d29",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "get_spec",
                                            "documentation": "Get spec.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Get spec."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.get_spec"}
                                        }
                                        ,
                                        {
                                            "name": "map_spec",
                                            "documentation": "Get spec.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Get spec."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.map_spec"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.privilege.nested_map_spec",
                                    "documentation": "Nested map spec.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested map spec."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "93f409b86c0db733eb8300374f4627d358106ea4",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "get_spec",
                                            "documentation": "Get spec.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vapi.privilege and the value in the field map must contain all the attributes defined in Privilege.GetSpec. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vapi.privilege and the value in the field map will contain all the attributes defined in Privilege.GetSpec.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Get spec."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": " and the value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.Privilege.GetSpec", "isToType": true, "text": "com.vmware.vapi.test.Privilege.GetSpec"}},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": " and the value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.Privilege.GetSpec", "isToType": true, "text": "com.vmware.vapi.test.Privilege.GetSpec"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.privilege.get_spec"},
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.privilege.nested_polymorphic_id_spec",
                                    "documentation": "Nested polymorphic id spec.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested polymorphic id spec."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "80201629a6cb419ca1f5a0a047f61a73a80046c3",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "device_type",
                                            "documentation": "Device Type.\nWhen clients pass a value of this structure as a parameter, the field must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Device Type."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "device_id",
                                            "documentation": "device ID.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device ID."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "device_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.privilege.nested_dynamic_id_spec",
                                    "documentation": "Nested dynamic id spec.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested dynamic id spec."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0efd103fdb58d270b177cf1531bb172c893c3f73",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "device_type",
                                            "documentation": "Device Type.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Device Type."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "device_id",
                                            "documentation": "Device ID.\nWhen clients pass a value of this structure as a parameter, the field Privilege.NestedDynamicIdSpec.device-type must contain the actual resource type. When operations return a value of this structure as a result, the field Privilege.NestedDynamicIdSpec.device-type will contain the actual resource type.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Device ID."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.Privilege.NestedDynamicIdSpec.deviceType", "isToMember": true, "text": "#deviceType", "tag": "name"}},
                                                        {"text": " must contain the actual resource type. When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.Privilege.NestedDynamicIdSpec.deviceType", "isToMember": true, "text": "#deviceType", "tag": "name"}},
                                                        {"text": " will contain the actual resource type."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": [], "typeHolder": "device_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "simple_operation",
                                    "documentation": "Operation to verify privilege documentation for operations without ID parameters.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations without ID parameters."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d44b48d240a6c79884d7666c2ec5d6eec3ea601d",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_id_parameter",
                                    "documentation": "Operation to verify privilege documentation for operations with a single ID parameter that has defined privilege.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a single ID parameter that has defined privilege."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d25acf0fd8fcccd0e9f329a1eec45ab58a729e9e",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_id_parameter2",
                                    "documentation": "Operation to verify privilege documentation for operations with a single ID parameter that has default privilege.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a single ID parameter that has default privilege."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "26eaa5af1252aa250b5bf0ca29df3020dca4ecf7",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_id_parameters",
                                    "documentation": "Operation to verify privilege documentation for operations with a ID parameters that has defined and default privileges.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a ID parameters that has defined and default privileges."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d10dac0bfd850b61d305f792de19f30ada814415",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "foreign_id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.foreign.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.foreign"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.foreign"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_map_parameters1",
                                    "documentation": "Operation to verify privilege documentation for operations with a map parameter whose key is ID.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a map parameter whose key is ID."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9297fc79729af2e22bfadffd66f149eef5835354",
                                    "params": [
                                        {
                                            "name": "id_map",
                                            "documentation": "The key in the parameter map must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The key in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_map_parameters2",
                                    "documentation": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a map parameter whose value is ID."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "bc255be2fea22205b2b99f3224a4170e166a7c7a",
                                    "params": [
                                        {
                                            "name": "id_map",
                                            "documentation": "The value in the parameter map must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The value in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_map_parameters3",
                                    "documentation": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a map parameter whose value is ID."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "7b33aa6639a9423f8b116ccbe3a94bb879bb8fdd",
                                    "params": [
                                        {
                                            "name": "id_map",
                                            "documentation": "The key and value in the parameter map must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The key and value in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_map_parameters4",
                                    "documentation": "Operation to verify privilege documentation for operations with a map parameter whose value is ID.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a map parameter whose value is ID."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "70cee907da5576ad9a50272b52e85976b8524f44",
                                    "params": [
                                        {
                                            "name": "id_map",
                                            "documentation": "The key and value in the parameter map must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The key and value in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_struct_parameter1",
                                    "documentation": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d37bc38a454a379cd4d3287b62e8ee7d5c0c76ec",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.get_spec"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_struct_parameter2",
                                    "documentation": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "acc9d4fb57467a9c649bfea94f0df802599f50ee",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "The parameter must contain all the attributes defined in Privilege.GetSpec.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.Privilege.GetSpec", "isToType": true, "text": "com.vmware.vapi.test.Privilege.GetSpec"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.privilege.get_spec"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_struct_parameter3",
                                    "documentation": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "81eac675e56ece5a616e88dc4f41079a3212093a",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "The parameter must contain all the attributes defined in Privilege.GetSpec.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.Privilege.GetSpec", "isToType": true, "text": "com.vmware.vapi.test.Privilege.GetSpec"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.privilege.get_spec"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_struct_parameter4",
                                    "documentation": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "bb25dcea360a0ec2081b94132b94beaa9b7c7eeb",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "The key in the parameter map must be an identifier for the resource type: com.vmware.vapi.privilege. The value in the parameter map must contain all the attributes defined in Privilege.GetSpec.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The key in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": ". The value in the "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.Privilege.GetSpec", "isToType": true, "text": "com.vmware.vapi.test.Privilege.GetSpec"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.privilege.get_spec"},
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_with_struct_parameter5",
                                    "documentation": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields in map.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation to verify privilege documentation for operations with a structure parameter which has ID fields in map."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4bd6443da3613a84c2b15044ca8a216b4c7dafc6",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.map_spec"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_mix",
                                    "documentation": "Operation with a mix of IDL constructs.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation with a mix of IDL constructs."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1f7e4725420e23b10e40470f21ddea6d397aa08d",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "nested_spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.nested_spec"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_mix2",
                                    "documentation": "Operation with a mix of IDL constructs.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation with a mix of IDL constructs."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a0acf9fbca16173cdc911b46c230d11ca73d3d06",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.privilege.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.privilege"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.privilege"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "nested_map_spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.nested_spec"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_mix3",
                                    "documentation": "Operation with a mix of IDL constructs.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation with a mix of IDL constructs."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "23805c1e3037ca9ce6cf446a6f6f563730a41e1b",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.nested_polymorphic_id_spec"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "operation_mix4",
                                    "documentation": "Operation with a mix of IDL constructs.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation with a mix of IDL constructs."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9a4038f36aabb39b427d9414f26f36723a0eb5d1",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.privilege.nested_dynamic_id_spec"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.routing",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "15defe5de6636b7cc4c43b930f24421cd12f94f9",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.routing.routing_test",
                            "documentation": "",
                            "docModels": {
                            },
                            "metadata": {
                            },
                            "fingerprint": "dd09fc468277dac22273777ce08a2cbb87babe28",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.routing.routing_test.vm",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "9d815842749fae9c24a5b4dd74f605082776c897",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "The id of the VM.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.foo.vm. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.foo.vm.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The id of the VM."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo.vm"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo.vm"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.foo.vm"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "name",
                                            "documentation": "The name of the VM.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The name of the VM."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "create_vm_in_cluster",
                                    "documentation": "Creates a new VM in a specified cluster. This call should be routed on clusterId",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Creates a new VM in a specified cluster. This call should be routed on clusterId"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "993ff0985a638b8a8a04fcee2881444d5c71c9a4",
                                    "params": [
                                        {
                                            "name": "cluster_id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.foo.cluster.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo.cluster"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo.cluster"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "vm",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.routing.routing_test.vm"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "The result will be an identifier for the resource type: com.vmware.resource_routerdemo.",
                                        "docModels": {
                                            "descriptions": [
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_routerdemo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_routerdemo"}
                                        },
                                        "type": {"category": "primitive", "primitive_type": "ID"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.is.test",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "97607f6764f7343a1b941e4f2bf36b3135bce15c",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.is.test.complex_model",
                            "documentation": "Model used to validate IS Serializer handling of various field types.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Model used to validate IS Serializer handling of various field types."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "36af2677579baa10fe0b1862b2d1524510a7ff91",
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.is.test.complex_model.test_enum",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4c83801080759e8d516fc16407f451c7d4eff9f2",
                                    "values": [
                                        {
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "ONE"
                                        }
                                        ,
                                        {
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                    ]
                                }
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "id",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.is.integration.complex_model. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.is.integration.complex_model.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.complex_model"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.complex_model"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "com.vmware.vapi.is.integration.complex_model"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "foreign_id",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.is.integration.complex_model. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.is.integration.complex_model.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.complex_model"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.complex_model"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.vapi.is.integration.complex_model"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "lgn",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "long"}
                                }
                                ,
                                {
                                    "name": "dbl",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "bln",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "boolean"}
                                }
                                ,
                                {
                                    "name": "str",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "dt",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "date_time"}
                                }
                                ,
                                {
                                    "name": "uri",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "URI"}
                                }
                                ,
                                {
                                    "name": "bin",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "binary"}
                                }
                                ,
                                {
                                    "name": "sec",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "secret"}
                                }
                                ,
                                {
                                    "name": "enm",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.is.test.complex_model.test_enum"}
                                }
                                ,
                                {
                                    "name": "str_list",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "str_map",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "id_set",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vapi.is.integration.complex_model. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vapi.is.integration.complex_model.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.complex_model"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.complex_model"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.vapi.is.integration.complex_model"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                                ,
                                {
                                    "name": "opt_str",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.is.test.test_model_with_ids",
                            "documentation": "Model used to validate IS Serializer ID handling.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Model used to validate IS Serializer ID handling."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "09dbe36808f0ed2445a507bb10ceed581c18852b",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "id",
                                    "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.is.integration.model_with_ids. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.is.integration.model_with_ids.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Primary key."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "com.vmware.vapi.is.integration.model_with_ids"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "optional_id",
                                    "documentation": "Optional ID\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.is.integration.model_with_ids. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.is.integration.model_with_ids.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Optional ID"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.vapi.is.integration.model_with_ids"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                                ,
                                {
                                    "name": "set_of_ids",
                                    "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vapi.is.integration.model_with_ids. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vapi.is.integration.model_with_ids.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.vapi.is.integration.model_with_ids"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                                ,
                                {
                                    "name": "set_of_strings",
                                    "documentation": "Test key",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "list_of_ids",
                                    "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.vapi.is.integration.model_with_ids. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.vapi.is.integration.model_with_ids.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will contain identifiers for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.vapi.is.integration.model_with_ids"}
                                    },
                                    "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                                ,
                                {
                                    "name": "list_of_strings",
                                    "documentation": "Test key",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "map_with_id_key",
                                    "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.vapi.is.integration.model_with_ids. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.vapi.is.integration.model_with_ids.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the key in the "},
                                                {"atTerm": "field"},
                                                {"text": " "},
                                                {"atTerm": "map"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the key in the "},
                                                {"atTerm": "field"},
                                                {"text": " "},
                                                {"atTerm": "map"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.model_with_ids"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.vapi.is.integration.model_with_ids"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "nested_model",
                                    "documentation": "Test key",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.is.test.nested_model"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.is.test.nested_model",
                            "documentation": "",
                            "docModels": {
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "c90679c525c4e015d851ba72e5654c063936c9b1",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "nested_id",
                                    "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.is.integration.nested_model. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.is.integration.nested_model.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test key"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.nested_model"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.is.integration.nested_model"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "com.vmware.vapi.is.integration.nested_model"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                            ]
                        }
                    ],
                    "services": [
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.is",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "1b4566a216a1d52b906b166b229e41b3c9264f13",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.is.tag_model",
                            "documentation": "Definition of a tag construct that is part of the Tagging Service. A tag can be attached to vSphere objects.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Definition of a tag construct that is part of the Tagging Service. A tag can be attached to vSphere objects."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "5d64376efe63c38e57ce2c1746c27bf323e2098a",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "id",
                                    "documentation": "ID of the tag.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.cis.tagging.Tag. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.cis.tagging.Tag.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "ID of the tag."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.cis.tagging.Tag"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.cis.tagging.Tag"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "com.vmware.cis.tagging.Tag"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "category_id",
                                    "documentation": "ID of the parent category in which this tag will be created.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.cis.tagging.Category. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.cis.tagging.Category.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "ID of the parent category in which this tag will be created."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.cis.tagging.Category"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.cis.tagging.Category"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "com.vmware.cis.tagging.Category"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "name",
                                    "documentation": "Display name of the tag.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Display name of the tag."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "description",
                                    "documentation": "Tag description.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Tag description."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "used_by",
                                    "documentation": "A tag can be used by various users. To add to this set, the user needs to have edit privilege on the tag. Similarly, to unsubscribe from this tag, you need edit privilege on the tag. A user should not modify other users subscription from this set.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A tag can be used by various users. To add to this set, the user needs to have edit privilege on the tag. Similarly, to unsubscribe from this tag, you need edit privilege on the tag. A user should not modify other users subscription from this set."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.is.top_level_model",
                            "documentation": "doc",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "doc"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "23d5e9e52f8545e014925f529bd8bb541dc51955",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "primary",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.test.TestResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.test.TestResource.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.test.TestResource"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.test.TestResource"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "com.vmware.test.TestResource"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.is.test_models",
                            "documentation": "Service which contains definitions of structures used to test the Inventory Service serializer.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service which contains definitions of structures used to test the Inventory Service serializer."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "fbb2693879e561e0d6d154a1c1a126a8cad569dd",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.test_models.test_model",
                                    "documentation": "Resource model.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "976f0fdc54f525b43f1684abc35a13ec94443a0f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.test_models. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.test_models.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.test_models"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "optional_id",
                                            "documentation": "Optional ID\nreason\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.test_models. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.test_models.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Optional ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.test_models"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "set_of_ids",
                                            "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.test_models. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.test_models.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.test_models"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "set_of_strings",
                                            "documentation": "Test key",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "list_of_ids",
                                            "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.test_models. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.test_models.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.test_models"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "list_of_strings",
                                            "documentation": "Test key",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "map_with_id_key",
                                            "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.test_models. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.test_models.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.test_models"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "nested_model",
                                            "documentation": "Test key",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.test_models.nested_model"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.test_models.nested_model",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "b42a0ac23a8371f16aea1c67d1bf288f22e78649",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "nested_id",
                                            "documentation": "Test key\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.test_models. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.test_models.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Test key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.test_models"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.test_models"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.test_models.test_model_with_polymorphic_resource",
                                    "documentation": "Resource model.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "3f2999a6cca1ed3e1c9433e60b67c13b86b7df8c",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field TestModels.TestModelWithPolymorphicResource.resource-type must contain the actual resource type. When operations return a value of this structure as a result, the field TestModels.TestModelWithPolymorphicResource.resource-type will contain the actual resource type.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.is.TestModels.TestModelWithPolymorphicResource.resourceType", "isToMember": true, "text": "#resourceType", "tag": "name"}},
                                                        {"text": " must contain the actual resource type. When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.is.TestModels.TestModelWithPolymorphicResource.resourceType", "isToMember": true, "text": "#resourceType", "tag": "name"}},
                                                        {"text": " will contain the actual resource type."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": [], "typeHolder": "resource_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "resource_type",
                                            "documentation": "Primary key resource type",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key resource type"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.test_models.simple_structure_with_array_of_ids",
                                    "documentation": "Test structure with array of IDs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test structure with array of IDs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "b3f8c7d8e0db695c95f51696f9910b493d379f6f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Id of the structure.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "optional_list_ofi_ds",
                                            "documentation": "optional list of IDs\nreason\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional list of IDs"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                        ,
                                        {
                                            "name": "list_of_optionali_ds",
                                            "documentation": "list of optional IDs\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of optional IDs"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                        ,
                                        {
                                            "name": "list_of_structure_with_id",
                                            "documentation": "list structure with ID",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list structure with ID"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.test_models.nested_model"}}
                                        }
                                        ,
                                        {
                                            "name": "map_id_to_list_of_ids",
                                            "documentation": "When clients pass a value of this structure as a parameter, the key and value in the field map must be an identifier for the resource type: com.vmware.foo. When operations return a value of this structure as a result, the key and value in the field map will be an identifier for the resource type: com.vmware.foo.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key and value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key and value in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.foo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.foo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.is.inventory_service_helper",
                            "documentation": "Service which contains definitions of structures used to test the Inventory Service serializer.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service which contains definitions of structures used to test the Inventory Service serializer."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "5fcbe3eb27a89853df594fc37bc667170b719725",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_dynamic_structure_field",
                                    "documentation": "Resource model which has a dynamic structure field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has a dynamic structure field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "0182724fa6604bf114c416b9b4c2cde8f11ebf22",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "struct",
                                            "documentation": "Any structure.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Any structure."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.structure_with_dynamic_field",
                                    "documentation": "Ordinary structure which has a dynamic structure field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Ordinary structure which has a dynamic structure field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "17583ac88e75369fd9aff389c863428e15707af2",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "struct",
                                            "documentation": "Any structure.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Any structure."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_optional_of_structure_with_dynamic_field",
                                    "documentation": "Resource model which has Optional of structure with a dynamic field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has Optional of structure with a dynamic field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "4c75ac37c6b6f38c70de5c6326411c3fad4cb237",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "optional",
                                            "documentation": "Any structure.\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Any structure."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.structure_with_dynamic_field"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_list_of_structure_with_dynamic_field",
                                    "documentation": "Resource model which has List of structure with a dynamic field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has List of structure with a dynamic field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "4ce12e8db02bffeda40eaf7d2fde5a7adeabe001",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "list",
                                            "documentation": "list",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.structure_with_dynamic_field"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_map_of_structure_with_dynamic_field",
                                    "documentation": "Resource model which has Map of structure with a dynamic field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has Map of structure with a dynamic field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "3dee17702a09752fcd48cac9559fa9d09f3fe9a9",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "map",
                                            "documentation": "map",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "map"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.structure_with_dynamic_field"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_list_of_dynamic_structure_field",
                                    "documentation": "Resource model which has a list of dynamic structure field. NOT SUPPORTED - negative test case",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has a list of dynamic structure field. "},
                                                    {
                                                        "bold": [
                                                            {"text": "NOT SUPPORTED"}
                                                        ]
                                                    }
,
                                                    {"text": " - negative test case"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "98313fe0bf0cbef83f5007097fc82e7453ce51b1",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "list",
                                            "documentation": "list",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_map_of_dynamic_structure_field",
                                    "documentation": "Resource model which has a Map of dynamic structure field. NOT SUPPORTED - negative test case",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has a Map of dynamic structure field. "},
                                                    {
                                                        "bold": [
                                                            {"text": "NOT SUPPORTED"}
                                                        ]
                                                    }
,
                                                    {"text": " - negative test case"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "ea0767ab5fc148f05493cebca55042b69d15f444",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "map",
                                            "documentation": "list",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_opaque_field",
                                    "documentation": "Resource model which has an opaque field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has an opaque field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "d75500901871757472f44e3b5e542bad24468ecf",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "opaq",
                                            "documentation": "Any data value.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Any data value."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "opaque"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.library",
                                    "documentation": "Library from vCD-e API",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Library from vCD-e API"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "Includable": {"value": "true"},
                                        "Create": {"value": "OPTIONAL"},
                                        "Read": {"value": "REQUIRED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "fb65d5f9146579c405df7a819207ca829f9a4c6a",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "content_version",
                                            "documentation": "content version\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "content version"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "creation_date",
                                            "documentation": "creation date\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "creation date"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                        ,
                                        {
                                            "name": "current_storage_backings",
                                            "documentation": "current storage backings\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "current storage backings"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing"}}}
                                        }
                                        ,
                                        {
                                            "name": "description",
                                            "documentation": "description\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "description"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "last_modified_date",
                                            "documentation": "last modified date\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "last modified date"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                        ,
                                        {
                                            "name": "name",
                                            "documentation": "name\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "name"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "storage_backings",
                                            "documentation": "storage backings\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "storage backings"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing"}}}
                                        }
                                        ,
                                        {
                                            "name": "type",
                                            "documentation": "type\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "type"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "version",
                                            "documentation": "version\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It must be provided for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "version"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It must be provided for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.local_library",
                                    "documentation": "LocalLibrary from vCD-e API",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "LocalLibrary from vCD-e API"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "Model": {"value": "true"},
                                        "Include": {"value": "com.vmware.vapi.test.is.inventory_service_helper.library"},
                                        "Create": {"value": "OPTIONAL"},
                                        "Read": {"value": "REQUIRED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "5074ea094037ebfef49f1470a8befb7d4545d45a",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "ID\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.content.Library.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.content.Library"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.content.Library"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"},
                                                "Resource": {"value": "com.vmware.content.Library"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "publish_info",
                                            "documentation": "publish info\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "publish info"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.publish_info"}}
                                        }
                                        ,
                                        {
                                            "name": "content_version",
                                            "documentation": "content version\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "content version"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "creation_date",
                                            "documentation": "creation date\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "creation date"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                        ,
                                        {
                                            "name": "current_storage_backings",
                                            "documentation": "current storage backings\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "current storage backings"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing"}}}
                                        }
                                        ,
                                        {
                                            "name": "description",
                                            "documentation": "description\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "description"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "last_modified_date",
                                            "documentation": "last modified date\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "last modified date"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                        ,
                                        {
                                            "name": "name",
                                            "documentation": "name\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "name"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "storage_backings",
                                            "documentation": "storage backings\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "storage backings"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing"}}}
                                        }
                                        ,
                                        {
                                            "name": "type",
                                            "documentation": "type\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "type"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is not used for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "version",
                                            "documentation": "version\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It must be provided for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "version"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It must be provided for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing",
                                    "documentation": "StorageBacking from vCD-e API",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "StorageBacking from vCD-e API"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "Includable": {"value": "true"},
                                        "Create": {"value": "OPTIONAL"},
                                        "Read": {"value": "REQUIRED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "10c74e660f0ba46273cdd25e2e76f3ab8c744e19",
                                    "enumerations": [
                                        {
                                            "name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing.authentication_method",
                                            "documentation": "Authn method enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Authn method enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "fingerprint": "ffcc1fc883c8b48e9821af376c8fc7ea27ac11ad",
                                            "values": [
                                                {
                                                    "documentation": "password",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "password"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "PASSWORD"
                                                }
                                                ,
                                                {
                                                    "documentation": "no authn",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "no authn"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "NONE"
                                                }
                                            ]
                                        }
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "storage_uri",
                                            "documentation": "storage URI",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "storage URI"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "URI"}
                                        }
                                        ,
                                        {
                                            "name": "authentication_method",
                                            "documentation": "authn method",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "authn method"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"},
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.storage_backing.authentication_method"}
                                        }
                                        ,
                                        {
                                            "name": "user_name",
                                            "documentation": "user name\nThis field is optional and it is only relevant when the value of InventoryServiceHelper.StorageBacking.authentication-method is PASSWORD.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "user name"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.StorageBacking.authenticationMethod", "isToMember": true, "text": "#authenticationMethod", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.StorageBacking.AuthenticationMethod.PASSWORD", "isToMember": true, "text": "AuthenticationMethod#PASSWORD"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "authentication_method", "value": ["PASSWORD"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "password",
                                            "documentation": "password\nThis field is optional and it is only relevant when the value of InventoryServiceHelper.StorageBacking.authentication-method is PASSWORD.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "password"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.StorageBacking.authenticationMethod", "isToMember": true, "text": "#authenticationMethod", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.StorageBacking.AuthenticationMethod.PASSWORD", "isToMember": true, "text": "AuthenticationMethod#PASSWORD"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "authentication_method", "value": ["PASSWORD"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.publish_info",
                                    "documentation": "PublishInfo vCD-e API",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "PublishInfo vCD-e API"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "Includable": {"value": "true"},
                                        "Create": {"value": "OPTIONAL"},
                                        "Read": {"value": "REQUIRED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "8150415dc4c82aca5b0e8f8a2ec70b2e3f70b7e2",
                                    "enumerations": [
                                        {
                                            "name": "com.vmware.vapi.test.is.inventory_service_helper.publish_info.authentication_method",
                                            "documentation": "Authn method enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Authn method enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "fingerprint": "a4845696edd0bf14f424234ae180d49a1817880a",
                                            "values": [
                                                {
                                                    "documentation": "basic authn",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "basic authn"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "BASIC"
                                                }
                                                ,
                                                {
                                                    "documentation": "no authn",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "no authn"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "NONE"
                                                }
                                            ]
                                        }
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "authentication_method",
                                            "documentation": "authn method",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "authn method"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"},
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.publish_info.authentication_method"}
                                        }
                                        ,
                                        {
                                            "name": "password",
                                            "documentation": "pasword\nThis field is optional and it is only relevant when the value of InventoryServiceHelper.PublishInfo.authentication-method is BASIC.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "pasword"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.PublishInfo.authenticationMethod", "isToMember": true, "text": "#authenticationMethod", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.PublishInfo.AuthenticationMethod.BASIC", "isToMember": true, "text": "AuthenticationMethod#BASIC"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "authentication_method", "value": ["BASIC"]},
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "OPTIONAL"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                        ,
                                        {
                                            "name": "published",
                                            "documentation": "published\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "published"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                        ,
                                        {
                                            "name": "publish_url",
                                            "documentation": "publish URL",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "publish URL"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "URI"}
                                        }
                                        ,
                                        {
                                            "name": "user_name",
                                            "documentation": "user name\nThis field is optional and it is only relevant when the value of InventoryServiceHelper.PublishInfo.authentication-method is BASIC.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "user name"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.PublishInfo.authenticationMethod", "isToMember": true, "text": "#authenticationMethod", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.is.InventoryServiceHelper.PublishInfo.AuthenticationMethod.BASIC", "isToMember": true, "text": "AuthenticationMethod#BASIC"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "authentication_method", "value": ["BASIC"]},
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "OPTIONAL"},
                                                "Update": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.vm_policy_params",
                                    "documentation": "A tuple representation of a VM and its desired Policies, along with any associated parameters.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A tuple representation of a VM and its desired Policies, along with any associated parameters."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"},
                                        "Crud": {"value": "true"}
                                    },
                                    "fingerprint": "50953064af370860de8cd60a00a4bd1f1cddf8ce",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "vm_id",
                                            "documentation": "Identifier of the VM, Optional when the VM is not yet created\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It must be provided for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.VirtualMachine.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Identifier of the VM, Optional when the VM is not yet created"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It must be provided for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.VirtualMachine"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.VirtualMachine"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"},
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.VirtualMachine"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "policy_params",
                                            "documentation": "Map of Policy ID to SinglePolicyParams across different Policies desired by this VM.\nThis field must be provided for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.Policy. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.Policy.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map of Policy ID to SinglePolicyParams across different Policies desired by this VM."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will not be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.Policy"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.Policy"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "REQUIRED"},
                                                "Read": {"value": "UNUSED"},
                                                "Update": {"value": "OPTIONAL"},
                                                "Resource": {"value": "com.vmware.Policy"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.single_policy_params"}}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.single_policy_params",
                                    "documentation": "Parameters for an individual Policy desired by the VM.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Parameters for an individual Policy desired by the VM."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "FieldsOptionalByDefault": {"value": "true"},
                                        "Create": {"value": "REQUIRED"},
                                        "Read": {"value": "UNUSED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "290d3cf91b116d89504230cd631397c87a3ae728",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "policy_id",
                                            "documentation": "Identifier of the Policy in this association.\nThis field must be provided for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.Policy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.Policy.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Identifier of the Policy in this association."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will not be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.Policy"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.Policy"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.Policy"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "policy_value",
                                            "documentation": "The desired value of this Policy. This is extension specific. PolicyValue is typically implemented with a constraint on the PolicyOptions that are available for a ProvisioningPolicy. This is typically Extension specific, and that's why PolicyValue is modeled a completely opaque object to the PBM system. The conceptual modeling of PolicyValue is to enable specifying policy requirements for a VM in this manner: {Provisioning Policy Foo := Policy Value } For e.g. {Location := Palo Alto || Fremont} {Anti-Affinity Policy := {Group-1, Group-2}}\nThis field must be provided for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The desired value of this Policy. This is extension specific. PolicyValue is typically implemented with a constraint on the PolicyOptions that are available for a ProvisioningPolicy. This is typically Extension specific, and that's why PolicyValue is modeled a completely opaque object to the PBM system. The conceptual modeling of PolicyValue is to enable specifying policy requirements for a VM in this manner: {Provisioning Policy Foo := Policy Value } For e.g. {Location := Palo Alto || Fremont} {Anti-Affinity Policy := {Group-1, Group-2}}"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will not be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                        ,
                                        {
                                            "name": "remove",
                                            "documentation": "Optional flag indicating whether the Policy association is to be removed for this VM.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Optional flag indicating whether the Policy association is to be removed for this VM."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is not used for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will not be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.tag_policy_spec",
                                    "documentation": "Structure containing all state of the TagPolicy extension for a VM.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure containing all state of the TagPolicy extension for a VM."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b940c3a61958c04d9746f24a3cb1a787a4bddf77",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                        {
                                            "name": "FIELD_NAME",
                                            "documentation": "Constant used to reference the dynamic field name in VmPolicyModel",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Constant used to reference the dynamic field name in VmPolicyModel"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "String"},
                                            "value": "tagPolicySpec"
                                        }
                                    ],
                                    "fields": [
                                        {
                                            "name": "policy_value_map",
                                            "documentation": "Map with policyId as the key and TagPolicyValue as the policy subscription value. VM may have zero, one, or multiple tag policies (0-N) associated with it. If TagPolicyValue is unset for a particular policy during update, that policy will be removed from the VM.\nTagPolicyValue is unset if policy is to be removed\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.TagPolicy. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.TagPolicy.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map with policyId as the key and TagPolicyValue as the policy subscription value. VM may have zero, one, or multiple tag policies (0-N) associated with it. If TagPolicyValue is unset for a particular policy during update, that policy will be removed from the VM."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "TagPolicyValue is unset if policy is to be removed"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.TagPolicy"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.TagPolicy"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.TagPolicy"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.tag_policy_value"}}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.tag_policy_value",
                                    "documentation": "TagBasedPolicyValue represents a specific instance of a Policy. ProvisioningPolicies are consumed by Vms via TagBasedPolicyValue. TagBasedPolicyValue is typically implemented with a constraint on the PolicyTags that are available for a Policy. The conceptual modeling of TagBasedPolicyValue is to enable specifying policy requirements for a VM in this manner: {Policy Foo := Tag Based Policy Value } For e.g. {Location := Palo Alto || Fremont}",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "TagBasedPolicyValue represents a specific instance of a Policy. ProvisioningPolicies are consumed by Vms via TagBasedPolicyValue. TagBasedPolicyValue is typically implemented with a constraint on the PolicyTags that are available for a Policy. The conceptual modeling of TagBasedPolicyValue is to enable specifying policy requirements for a VM in this manner: {Policy Foo := Tag Based Policy Value } For e.g. {Location := Palo Alto || Fremont}"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f6dd224a911487663fec0bbcfa48288493ad7824",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "policy_tag_id",
                                            "documentation": "Identifier of the desired Tag.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.TagPolicyOption. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.TagPolicyOption.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Identifier of the desired Tag."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.TagPolicyOption"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.TagPolicyOption"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.TagPolicyOption"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.anti_affinity_policy_spec",
                                    "documentation": "Structure containing all state of the AntiAffinityPolicy extension for a VM.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure containing all state of the AntiAffinityPolicy extension for a VM."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0ad0c59330f5fd3a0b314f1263fa8d413b97d824",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                        {
                                            "name": "FIELD_NAME",
                                            "documentation": "Constant used to reference the dynamic field name in VmPolicyModel",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Constant used to reference the dynamic field name in VmPolicyModel"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "String"},
                                            "value": "antiAffinityPolicySpec"
                                        }
                                    ],
                                    "fields": [
                                        {
                                            "name": "policy_value",
                                            "documentation": "VM may have anti-affinity policy enabled or disabled. Optional policyValue is unset if no policy is (or should be) associated with the VM.\nAntiAffinityPolicyValue is unset if policy is to be removed",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "VM may have anti-affinity policy enabled or disabled. Optional policyValue is unset if no policy is (or should be) associated with the VM."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "AntiAffinityPolicyValue is unset if policy is to be removed"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.is.inventory_service_helper.anti_affinity_policy_value"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.anti_affinity_policy_value",
                                    "documentation": "AntiAffinityPolicyValue represents the value supported for an Anti-Affinity Provisioning Policy. It can specify one or more Availability Groups that a VM should be mapped to. The conceptual modeling of AntiAffinityPolicyValue is to enable specifying policy requirements for a VM in this manner: {Policy Foo := AntiAffinityPolicyValue } For e.g. {Location := Group1 || Group2}",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "AntiAffinityPolicyValue represents the value supported for an Anti-Affinity Provisioning Policy. It can specify one or more Availability Groups that a VM should be mapped to. The conceptual modeling of AntiAffinityPolicyValue is to enable specifying policy requirements for a VM in this manner: {Policy Foo := AntiAffinityPolicyValue } For e.g. {Location := Group1 || Group2}"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f0c1add7cb1f1b586275211dd1805aa22d04ecd2",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "anti_affinity_policy_id",
                                            "documentation": "Id of the AntiAffinityPolicy the VM wishes to subscribe to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.AvailabilityGroup. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.AvailabilityGroup.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Id of the AntiAffinityPolicy the VM wishes to subscribe to."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.AvailabilityGroup"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.AvailabilityGroup"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.AvailabilityGroup"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.vm_policy_model",
                                    "documentation": "A tuple representation of a VM and its desired Policies, along with any associated parameters that can be dynamically added by individual extensions.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A tuple representation of a VM and its desired Policies, along with any associated parameters that can be dynamically added by individual extensions."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"},
                                        "Crud": {"value": "true"}
                                    },
                                    "fingerprint": "b6ef67100bee09d48542df105f8774812181586d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "vm_id",
                                            "documentation": "Identifier of the VM, Optional when the VM is not yet created\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It must be provided for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.VirtualMachine.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Identifier of the VM, Optional when the VM is not yet created"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It must be provided for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.VirtualMachine"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.VirtualMachine"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"},
                                                "Read": {"value": "REQUIRED"},
                                                "Update": {"value": "REQUIRED"},
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.VirtualMachine"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.is.inventory_service_helper.model_with_nested_maps",
                                    "documentation": "Resource model which has Map of structure with a dynamic field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Resource model which has Map of structure with a dynamic field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "397f58bf7956a2e522d2b086a54654a0812ce75e",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "id",
                                            "documentation": "Primary key.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary key."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "map1",
                                            "documentation": "map\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "map"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                        ,
                                        {
                                            "name": "map2",
                                            "documentation": "map\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "map"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "ID"}}}
                                        }
                                        ,
                                        {
                                            "name": "map3",
                                            "documentation": "map\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: com.vmware.inventory_service_helper. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: com.vmware.inventory_service_helper.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "map"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the key in the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atTerm": "map"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.inventory_service_helper"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.inventory_service_helper"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "ID"}, "map_value_type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.sample.first",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "d8456e707f859c23e19b055ea275dd3ce79f2902",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.sample.first.count",
                            "documentation": "A first example of the vAPI framework: a stateful counter.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "A first example of the vAPI framework: a stateful counter."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "c7c7307d108187ec68afd52d7fb548d6b3b8728e",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.sample.first.count.properties",
                                    "documentation": "Data type representing an item in the sample store inventory.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Data type representing an item in the sample store inventory."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "508e6c6d284e0ab9db71515923948254463d6d15",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "counter",
                                            "documentation": "The current counter value.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The current counter value."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "inc",
                                            "documentation": "The number of calls to inc.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The number of calls to inc."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "dec",
                                            "documentation": "The number of calls to dec.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The number of calls to dec."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "reset",
                                            "documentation": "The number of calls to reset.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The number of calls to reset."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "lower_limit",
                                            "documentation": "The smallest value allowed for counter If unset, there is no limit.\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The smallest value allowed for counter If unset, there is no limit."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "upper_limit",
                                            "documentation": "The largest value allowed for counter If unset, there is no limit.\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The largest value allowed for counter If unset, there is no limit."}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "inc",
                                    "documentation": "Increment the count.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Increment the count."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "66e5fb0783acfd491dcdb5c8590e1d9f50dc5cb3",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state",
                                            "name": "not_allowed_in_current_state",
                                            "documentation": "if the count would be larger than the upper limit.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if the count would be larger than the upper limit."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "Value after increment.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "Value after increment."}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "long"}
                                    }
                                }
                                ,
                                {
                                    "name": "dec",
                                    "documentation": "Decrement the count.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Decrement the count."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c674ed4f425f7825bae47cb3c9c76af766bf3d56",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state",
                                            "name": "not_allowed_in_current_state",
                                            "documentation": "if the count would be smaller than the lower limit.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if the count would be smaller than the lower limit."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "Value after decrement.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "Value after decrement."}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "long"}
                                    }
                                }
                                ,
                                {
                                    "name": "reset",
                                    "documentation": "Reset the count.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Reset the count."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5bdf2f15cd9a8c62b9bba5b74a382be33e7b8bb3",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "get",
                                    "documentation": "Get the historical information the counter.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Get the historical information the counter."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3fd83e1aacbe2893276ead814b6aab20681babe3",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "Historical information for counter.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "Historical information for counter."}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.sample.first.count.properties"}
                                    }
                                }
                                ,
                                {
                                    "name": "set_limits",
                                    "documentation": "Set the lower and\/or upper limit for the counter",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Set the lower and\/or upper limit for the counter"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "515062276834e96c599bdbfef379b362b5722c29",
                                    "params": [
                                        {
                                            "name": "lower_limit",
                                            "documentation": "Lower limit of the counter\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Lower limit of the counter"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "upper_limit",
                                            "documentation": "Upper limit of the counter\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Upper limit of the counter"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument",
                                            "name": "invalid_argument",
                                            "documentation": "if lowerLimit > upperLimit",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if lowerLimit > upperLimit"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state",
                                            "name": "not_allowed_in_current_state",
                                            "documentation": "if upperLimit is omitted and lowerLimit > the existing upper limit or lowerLimit is omitted and upperLimit < the existing lower limit.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "if upperLimit is omitted and lowerLimit > the existing upper limit or lowerLimit is omitted and upperLimit < the existing lower limit."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "reset_limits",
                                    "documentation": "Reset the lower and upper limits for the counter",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Reset the lower and upper limits for the counter"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "606f340708eb143e3d283147e419613a52953ea1",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.sample.first.mirror",
                            "documentation": "A first example of the vAPI framework: simple string echo services.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "A first example of the vAPI framework: simple string echo services."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "ee5a058b0aa33ca612853e97bd910874d6a2e29a",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "echo",
                                    "documentation": "Echo the string from the server back to the caller.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echo the string from the server back to the caller."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "7d9013af2ba6f40584072eab423844ea4d8d4026",
                                    "params": [
                                        {
                                            "name": "message",
                                            "documentation": "Message to echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Message to echo."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "The same message.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "The same message."}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "sort",
                                    "documentation": "Sort strings.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Sort strings."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a1427a863b7085b4bf41262231ada1e86a1dffd1",
                                    "params": [
                                        {
                                            "name": "string",
                                            "documentation": "Strings to sort.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Strings to sort."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "Sorted strings.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "Sorted strings."}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.abort",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "30f1f7c7c5ab9d468e40bc9e78a82b02eea9d969",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.abort.abort_test_service",
                            "documentation": "vAPI client abort test interface for integration tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI client abort test interface for integration tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "6aaa430b925f48e87f05727a33191f1201c821e5",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "replay_with_delay",
                                    "documentation": "Test method that takes the specified amount of time (in seconds) to execut.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test method that takes the specified amount of time (in seconds) to execut."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "047e3b15992d639c43f35d79807fe27e3e498801",
                                    "params": [
                                        {
                                            "name": "delay_time",
                                            "documentation": "specifies request execution time (in seconds)",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "specifies request execution time (in seconds)"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.async",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "76a5442c78cf88821cd63b362d3ae90ea826137f",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.async.activation_aware_service",
                            "documentation": "Test service for activation tracking.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service for activation tracking."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "10ba1bce59e5e2e36f1357305dd6afc7f408e46c",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "test_cancellable",
                                    "documentation": "Operation which performs a number of 100ms iterations and responds to cancel.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation which performs a number of 100ms iterations and responds to cancel."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "fd27ea2970f804d8ab6aa18cde4d377a7bc5a828",
                                    "params": [
                                        {
                                            "name": "iterations",
                                            "documentation": "number of 100ms iterations to perform",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "number of 100ms iterations to perform"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state",
                                            "name": "not_allowed_in_current_state",
                                            "documentation": "invocation has been canceled",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "invocation has been canceled"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "the number of iterations (same as the input)",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the number of iterations (same as the input)"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "long"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.async.asynchronous",
                            "documentation": "Test service for asynchronous support.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service for asynchronous support."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "bb83c38607bde66bd2ecb7c1fab4e80c5aa802fd",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "test_void",
                                    "documentation": "\nOperation with void return type. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation with void return type. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8704689b2f84ac4da55db457164f8580d09770a2",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_void_inline",
                                    "documentation": "\nOperation with void return type. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation with void return type. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "334dc6accfca352d72b7987c8d6c4d95f8e12b23",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string",
                                    "documentation": "\nOperation with non-void return type. Echoes the input. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation with non-void return type. Echoes the input. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b73463ab435b0637e369f9302d6bd408800854ee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "some text",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "some text"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the same as the input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the same as the input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string_inline",
                                    "documentation": "\nOperation with non-void return type. Echoes the input. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation with non-void return type. Echoes the input. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "93781e38f71d16ac4988f9ce41195b6ca3c9592f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "some text",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "some text"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the same as the input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the same as the input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error",
                                    "documentation": "\nOperation which declares and reports a standard error. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which declares and reports a standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6a5369778306740df3b24dd8b479cbd60576922b",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_inline",
                                    "documentation": "\nOperation which declares and reports a standard error. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which declares and reports a standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ea55880522dc5dcc7ba0ca33ddde6b007e5376d6",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_thrown_inline",
                                    "documentation": "\nOperation which declares and throws a standard error. \n\nThe operation is executed synchronously inside the binding method. \n\nThe operation does not set the exception via the async handle, but directly throws it.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which declares and throws a standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation does not set the exception via the async handle, but directly throws it."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b535e0931f4b5ee99c74f032d863ef60537261ee",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_unknown_runtime_exception",
                                    "documentation": "\nOperation which reports a runtime exception that does not represent a standard error. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which reports a runtime exception that does not represent a standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8d44fbb6152349317e0619bb9e2942b77bf2e3a6",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_unknown_runtime_exception_inline",
                                    "documentation": "\nOperation which reports a runtime exception that does not represent a standard error. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which reports a runtime exception that does not represent a standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cefb6325b8778c1c66c1c7b7952b3bfd303d1aaa",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_unknown_runtime_exception_thrown_inline",
                                    "documentation": "\nOperation which throws a runtime exception that does not represent a standard error. \n\nThe operation is executed synchronously inside the binding method. \n\nThe operation does not set the exception via the async handle, but directly throws it.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which throws a runtime exception that does not represent a standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation does not set the exception via the async handle, but directly throws it."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "51cbcd36240fe753c5a7345377ebde4b59e08f1d",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_activation_id",
                                    "documentation": "Operation which retrieves the activation id from the incoming execution context and returns it. Returns null if there is no activation id.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation which retrieves the activation id from the incoming execution context and returns it. Returns null if there is no activation id."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "659d6c0883f7202d7200455f2c76db46cdc80d8e",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the activation id or null\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the activation id or null"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_application_data",
                                    "documentation": "Operation which retrieves a property from the application data of the incoming execution context and returns it. Returns null if there is no application data property for the specified key.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Operation which retrieves a property from the application data of the incoming execution context and returns it. Returns null if there is no application data property for the specified key."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3eba7fbd6a8941249c1a0d2cf8ae7db8ca2c8d67",
                                    "params": [
                                        {
                                            "name": "key",
                                            "documentation": "key of application property",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "key of application property"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the value of the property or null\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the value of the property or null"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_progress_updates",
                                    "documentation": "\nOperation which produces a few progress updates and finally it echoes the input in the operation result. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which produces a few progress updates and finally it echoes the input in the operation result. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "47d5c64f635c92ad386d5fdd947537b19ec7cc7a",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "some text",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "some text"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the same as the input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the same as the input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_result_and_throw_inline",
                                    "documentation": "\nOperation which completes the invocation twice - first with the string \"first\" and after that throws a ResourceInUse. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which completes the invocation twice - first with the string \"first\" and after that throws a ResourceInUse. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "81a08635158a4b9fa79b100694924074d0aeaebc",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "the string \"first\"",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the string \"first\""}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_multiple_set_result_inline",
                                    "documentation": "\nOperation which completes the invocation twice - first with the string \"first\" and after that with the string \"second\". \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which completes the invocation twice - first with the string \"first\" and after that with the string \"second\". "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "99c84378f451724b7bcab36b48e91c6d01d5254b",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the string \"first\"",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the string \"first\""}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_result_and_set_error_inline",
                                    "documentation": "\nOperation which completes the invocation twice - first with the string \"first\" and after that with ResourceInUse standard error. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which completes the invocation twice - first with the string \"first\" and after that with ResourceInUse standard error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6cc098ed2c7cfb31b10da6274b2a4914f63addd7",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "the string \"first\"",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the string \"first\""}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_error_and_throw_inline",
                                    "documentation": "\nOperation which completes the invocation twice - first sets a ResourceInUse error and then throws a RuntimeException. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which completes the invocation twice - first sets a ResourceInUse error and then throws a RuntimeException. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2bd4caaeff2d68d87a9c638b2e0e89f3db5af590",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "nothing",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "nothing"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_multiple_set_error_inline",
                                    "documentation": "\nOperation which completes the invocation twice - first sets a ResourceInUse error and then sets a RuntimeException. \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which completes the invocation twice - first sets a ResourceInUse error and then sets a RuntimeException. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9db6528a50034424e75db076e935c49df9226c77",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "nothing",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "nothing"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_set_error_and_set_result_inline",
                                    "documentation": "\nOperation which completes the invocation twice - first sets a ResourceInUse standard error and after that sets the string \"second\". \n\nThe operation is executed synchronously inside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which completes the invocation twice - first sets a ResourceInUse standard error and after that sets the string \"second\". "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed synchronously inside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4ed95dbbb49219c441bccc27aa721c1bf5af8bfe",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use",
                                            "name": "resource_in_use",
                                            "documentation": "standard error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "standard error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "nothing",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "nothing"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_null_result",
                                    "documentation": "\nOperation which sets null result. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which sets "},
                                                            {
                                                                "code": [
                                                                    {"text": "null"}
                                                                ]
                                                            }
,
                                                            {"text": " result. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e25a574c9ffb2684671dc6d394ee1613a9782c1b",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "nothing",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "nothing"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_null_exception",
                                    "documentation": "\nOperation which sets null error. \n\nThe operation is executed asynchronously outside the binding method.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {
                                                        "paragraph": [
                                                            {"text": "Operation which sets "},
                                                            {
                                                                "code": [
                                                                    {"text": "null"}
                                                                ]
                                                            }
,
                                                            {"text": " error. "}
                                                        ]
                                                    }
,
                                                    {
                                                        "paragraph": [
                                                            {"text": "The operation is executed asynchronously outside the binding method."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "dd2a3da582b810aa1cd3f3f418de6efd4d44b113",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "nothing",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "nothing"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.cli",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "33c948cd4e34dbaab7aab7b1afc069bc525f3a21",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.cli.collision",
                            "documentation": "Class to simulate for cli option collisions",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Class to simulate for cli option collisions"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "d75f9c271a3181616a1d4502d2e2a3a0e595c287",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.collision.nested",
                                    "documentation": "nested",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "nested"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5ab75cb63197f414407be1ebb7bb193d37282f77",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.collision.deep",
                                    "documentation": "deep",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "deep"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "71e18184966056c5c1abbcdee40b4f533ac965d6",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.collision.deep_nested",
                                    "documentation": "deep nested",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "deep nested"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c01ff52fbf0e0312f2ecf2e4ef427a9a4a9a5dac",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "deep",
                                            "documentation": "deep field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "deep field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.deep"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "one_collision",
                                    "documentation": "one collision",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "one collision"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a9701fcfa1cdbed518552bdb31c07e97461f0b36",
                                    "params": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "nested",
                                            "documentation": "nested",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.nested"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "one_collision_reverse",
                                    "documentation": "one collision different order",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "one collision different order"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2ed3209c7deae769b7b595952127f920f0280ccf",
                                    "params": [
                                        {
                                            "name": "nested",
                                            "documentation": "nested",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.nested"}
                                        }
                                        ,
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "two_collisions",
                                    "documentation": "two collisions",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "two collisions"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "27d5cf9796b5a359d8a7732cacb8e0f422ca566a",
                                    "params": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "nested",
                                            "documentation": "nested",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.nested"}
                                        }
                                        ,
                                        {
                                            "name": "nested_field",
                                            "documentation": "nested filed",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested filed"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "two_collisions_reverse",
                                    "documentation": "two collisions different order",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "two collisions different order"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "01fe6a65c2e3413b4acbfaa76724365072d2aefa",
                                    "params": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "nested_field",
                                            "documentation": "nested filed",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested filed"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "nested",
                                            "documentation": "nested",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.nested"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "two_collisions_2",
                                    "documentation": "two collisions",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "two collisions"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "86510c25cf20fbce026380590a9a2d3bfe102901",
                                    "params": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "deep_nested",
                                            "documentation": "deep nested",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "deep nested"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.deep"}
                                        }
                                        ,
                                        {
                                            "name": "deep",
                                            "documentation": "deep",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "deep"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.deep"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "two_collisions_nested",
                                    "documentation": "two collisions nested",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "two collisions nested"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "53e0bf30eb30ae9730d47b4dd7624cc1dfaa99a9",
                                    "params": [
                                        {
                                            "name": "field",
                                            "documentation": "field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "deep",
                                            "documentation": "deep",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "deep"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.deep"}
                                        }
                                        ,
                                        {
                                            "name": "deep_nested",
                                            "documentation": "deep nested",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "deep nested"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.collision.deep_nested"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.cli.input_types",
                            "documentation": "vAPI test interface for CLI input type tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for CLI input type tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "5d837fd83ed5efc1aa86b26901edb207d844b2a9",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.input_types.test_structure_simple_list",
                                    "documentation": "simple test structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "simple test structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1814f1340485b20fa162d9fe1814da24d042585e",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "list of string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.input_types.test_nested_structure_with_list",
                                    "documentation": "structure with nested structure with list field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "structure with nested structure with list field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "36b20abcf414085fe405b1c23f1ac652d041aba4",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "structure_field1",
                                            "documentation": "field using another structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using another structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.input_types.test_structure_simple_list"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_nested_structure_with_list",
                                    "documentation": "echo nested structure with list",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo nested structure with list"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6bcb0f9b54bde1842a7f490ecd3b353cecc065f6",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.input_types.test_nested_structure_with_list"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "list of struct",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "list of struct"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.input_types.test_nested_structure_with_list"}}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.cli.maps",
                            "documentation": "Class to simulate for cli maps",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Class to simulate for cli maps"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "fe286360f57b28640b42956e1f48886c08550dda",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.maps.simple_test_structure",
                                    "documentation": "simple test structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "simple test structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "7b73f5365e8ba6462afb27cfcdec266ae7bc4b0d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.cli.maps.map_nested_structure",
                                    "documentation": "Structure with with map of nested SimpleTestStructure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure with with map of nested SimpleTestStructure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1b8a761c144a15b4c554aa09440ceec5d62d04e3",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "map_test_struct",
                                            "documentation": "map of SimpleTestStructure structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "map of SimpleTestStructure structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.maps.simple_test_structure"}}
                                        }
                                        ,
                                        {
                                            "name": "another_string_field",
                                            "documentation": "another string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "another string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "return_map_nested_structure",
                                    "documentation": "From given SimpleTestStructure returns MapNestedStructure structure by making the mapTestStruct property of SimpleTestStructure to map with key string and value SimpleTestStructure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "From given SimpleTestStructure returns MapNestedStructure structure by making the mapTestStruct property of SimpleTestStructure to map with key string and value SimpleTestStructure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "28875d838875ad268cbec9392c0ea3a771cfec7b",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.maps.simple_test_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "MapNestedStructure object constructed from input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "MapNestedStructure object constructed from "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.cli.maps.map_nested_structure"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.crud",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "c4c745b5331488c667e6811065dbfc7ba6e1057b",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.crud.crud_object",
                            "documentation": "Test vmodl for CRUD annotations",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test vmodl for CRUD annotations"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Crud": {"value": "true"},
                                "Model": {"value": "true"},
                                "Read": {"value": "REQUIRED"},
                                "Create": {"value": "REQUIRED"},
                                "Update": {"value": "OPTIONAL"}
                            },
                            "fingerprint": "4d14178acbb23f997a806277d3b086e0a86861d7",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "id",
                                    "documentation": "ID of the CrudObject instance\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.CrudObject. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.CrudObject.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "ID of the CrudObject instance"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is not used for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.CrudObject"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "com.vmware.vapi.CrudObject"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Create": {"value": "UNUSED"},
                                        "Resource": {"value": "com.vmware.vapi.CrudObject"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                                ,
                                {
                                    "name": "key",
                                    "documentation": "The key to be created\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The key to be created"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " must be provided for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "value",
                                    "documentation": "The value corresponding to the key\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The value corresponding to the key"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "OPTIONAL"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "remove",
                                    "documentation": "not used for updates\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "not used for updates"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " must be provided for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is not used for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Update": {"value": "UNUSED"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.crud.crud_object_includable",
                            "documentation": "Test vmodl for CRUD annotations with included structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test vmodl for CRUD annotations with included structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Crud": {"value": "true"},
                                "Read": {"value": "OPTIONAL"},
                                "Create": {"value": "OPTIONAL"},
                                "Update": {"value": "OPTIONAL"},
                                "Include": {"value": "com.vmware.vapi.test.crud.required_field"}
                            },
                            "fingerprint": "05cfa0dc710680d09bff6fc43c52595c679bf5c3",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "value",
                                    "documentation": "optional field\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "optional field"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It is optional in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "required_field",
                                    "documentation": "required field\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "required field"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It is optional in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.crud.required_field",
                            "documentation": "Data class containing required field",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Data class containing required field"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Includable": {"value": "true"},
                                "Crud": {"value": "true"},
                                "Read": {"value": "OPTIONAL"},
                                "Create": {"value": "OPTIONAL"},
                                "Update": {"value": "OPTIONAL"}
                            },
                            "fingerprint": "dc92b7c8aafd09660dd10f8b74bc8ebc6dad6e3b",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "required_field",
                                    "documentation": "required field\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "required field"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It is optional in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.crud.crud_service",
                            "documentation": "Service for testing the CRUD templates",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service for testing the CRUD templates"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "47821f1ceab9f03c0cd347964eae6f39e7bdb81e",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.crud.crud_service.crud_object2",
                                    "documentation": "Test vmodl for CRUD annotations",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test vmodl for CRUD annotations"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "Read": {"value": "REQUIRED"},
                                        "Create": {"value": "REQUIRED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "2f54ac61e6a6da20254a5cf83d0f95dff4235b46",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "key",
                                            "documentation": "The key to be created\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The key to be created"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "value",
                                            "documentation": "The value corresponding to the key\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The value corresponding to the key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "remove",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "Create": {"value": "UNUSED"},
                                                "Read": {"value": "UNUSED"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "get",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e5e3fb95b5e72953ecadd82ad58e6e6062de5c3b",
                                    "params": [
                                        {
                                            "name": "valid_result",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "valid or invalid result depending on the input parameter",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "valid or invalid result depending on the input parameter"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.crud.crud_object"}
                                    }
                                }
                                ,
                                {
                                    "name": "create",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eeafc592dab0b256091996557dc7125fbbbfc174",
                                    "params": [
                                        {
                                            "name": "crud_object",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.crud.crud_object"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "create_crud_object2",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9cb67e0b4d40077e2d2f90bf87af0a41262d0ca1",
                                    "params": [
                                        {
                                            "name": "crud_object",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.crud.crud_service.crud_object2"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "delete",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "667f12609521c4d6ab80abf44baccabe389661cf",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.CrudObject.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.CrudObject"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.CrudObject"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "update",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "15e46f5716972badeee108037a3fce3caf5a11da",
                                    "params": [
                                        {
                                            "name": "crud_object",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.crud.crud_object"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.crud.crud_service2",
                            "documentation": "Service for testing the CRUD templates used with HasFieldsOf",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service for testing the CRUD templates used with HasFieldsOf"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "f859fbf0a9212dac1245886009115fc3be48b087",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "create",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b91c89067514c109b4328b8c2fb563ce5d2b80e0",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "The parameter must contain all the attributes defined in CrudObject.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.crud.CrudObject", "isToType": true, "text": "com.vmware.vapi.test.crud.CrudObject"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.crud.crud_object"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "update",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "477e7f336f1eed9dea8dbdaedbf3c8b28310bbb9",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.crud.crud_object_includable"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.dynamic_structures",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "d59ceb9286973241e633b8faab196befdf826077",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.dynamic_structures.service1",
                            "documentation": "Service1",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service1"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "2c052850612734871cd59c82250d9ff395ce87fc",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.dynamic_structures.service1.sample_struct",
                                    "documentation": "SampleStruct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "SampleStruct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6220f028438d3f9ca2a53471afd492813d60763e",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "foo",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "bar",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo",
                                    "documentation": "Echo dynamic structure.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echo dynamic structure."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "21933bcc10e5ea68ad8675e3e08c4b9e5a9b53b1",
                                    "params": [
                                        {
                                            "name": "struct_value_param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as structValueParam",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "structValueParam"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.enumerations",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "9087342c082fa5e8515b1b5995979a90065f9b35",
                    "enumerations": [
                        {
                            "name": "com.vmware.vapi.test.enumerations.test_enum",
                            "documentation": "Enum defined at top level scope.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Enum defined at top level scope."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "5d44e38f8b25e2c670161dc488d10f992b98ff08",
                            "values": [
                                {
                                    "documentation": "enum constant two",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "enum constant two"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "name": "TWO"
                                }
                                ,
                                {
                                    "documentation": "enum constant three",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "enum constant three"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "name": "THREE"
                                }
                                ,
                                {
                                    "documentation": "enum constant four",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "enum constant four"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "name": "FOUR"
                                }
                            ]
                        }
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.enumerations.test_struct",
                            "documentation": "Top level structure for testing.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top level structure for testing."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "bd131e715c3be0dded004c35175096aa12cefc3e",
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.enumerations.test_struct.test_enum_nested_in_struct",
                                    "documentation": "Enum defined inside a top level structure.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Enum defined inside a top level structure."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "61086e0df571e6e43d82b751a58bdaf52d8650a6",
                                    "values": [
                                        {
                                            "documentation": "enum constant two",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant two"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant three",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant three"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "THREE"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant four",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant four"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "FOUR"
                                        }
                                    ]
                                }
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "field_enum_nested_in_struct",
                                    "documentation": "Field of enum type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Field of enum type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_struct.test_enum_nested_in_struct"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.enumerations.echo_enumerations",
                            "documentation": "Test service which echoes various kinds of enums.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service which echoes various kinds of enums."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "aefe9d6bcb8c4a45a19d227b1bd14f14c5b868a1",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "test_enum_top_level",
                                    "documentation": "Echoes a value from an enum defined at top level scope.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a value from an enum defined at top level scope."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "62bb1947b01c4a2551325dbe6274e34ed8090e8f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_enum"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_enum"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_nested_in_struct",
                                    "documentation": "Echoes a value from an enum defined inside a top level structure.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a value from an enum defined inside a top level structure."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d07160751deb9aee1a67aeb24137ff79d1bcdaee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_struct.test_enum_nested_in_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_struct.test_enum_nested_in_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_nested_in_service",
                                    "documentation": "Echoes a value from an enum defined inside another service.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a value from an enum defined inside another service."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f6407de9fdaccc1faf7bb80877b8f13ac4c6b45c",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_service.test_enum_nested_in_service"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_service.test_enum_nested_in_service"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_nested_in_struct_nested_in_service",
                                    "documentation": "Echoes a value from an enum defined inside a structure which is defined inside another service.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a value from an enum defined inside a structure which is defined inside another service."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b1d76d13fee79cf09ab007b4972277396fa1a350",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_service.test_struct_nested_in_service.test_enum_nested_in_struct_nested_in_service"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_service.test_struct_nested_in_service.test_enum_nested_in_struct_nested_in_service"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.enumerations.test_service",
                            "documentation": "Service for testing.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service for testing."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "350b7073a332d6c63f0deb5633cdc14be9d0c944",
                            "constants": [
                            ],
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.enumerations.test_service.test_enum_nested_in_service",
                                    "documentation": "Enum defined inside a service.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Enum defined inside a service."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ee4a4fd4ac5a09ad7ba5f0055d5bb55a7aeb06e6",
                                    "values": [
                                        {
                                            "documentation": "enum constant two",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant two"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant three",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant three"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "THREE"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant four",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant four"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "FOUR"
                                        }
                                    ]
                                }
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.enumerations.test_service.test_struct_nested_in_service",
                                    "documentation": "Structure defined inside a service.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure defined inside a service."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ab16fd8bff0ebfe920a9950d16f9450da5af09c8",
                                    "enumerations": [
                                        {
                                            "name": "com.vmware.vapi.test.enumerations.test_service.test_struct_nested_in_service.test_enum_nested_in_struct_nested_in_service",
                                            "documentation": "Enum defined inside a structure which is defined inside a service.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Enum defined inside a structure which is defined inside a service."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "fingerprint": "186ad34f29c69fd53d3193a318770ec469628cc1",
                                            "values": [
                                                {
                                                    "documentation": "enum constant two",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "enum constant two"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "TWO"
                                                }
                                                ,
                                                {
                                                    "documentation": "enum constant three",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "enum constant three"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "THREE"
                                                }
                                                ,
                                                {
                                                    "documentation": "enum constant four",
                                                    "docModels": {
                                                        "descriptions": [
                                                            {
                                                                "docModel": [
                                                                    {"text": "enum constant four"}
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "metadata": {
                                                    },
                                                    "name": "FOUR"
                                                }
                                            ]
                                        }
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "field_enum_nested_in_struct_nested_in_service",
                                            "documentation": "Field of enum type.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Field of enum type."}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.enumerations.test_service.test_struct_nested_in_service.test_enum_nested_in_struct_nested_in_service"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.errors",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "a7a8637da2dfa69751933174021c670a5dfe7cb0",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.top_level_error",
                            "documentation": "Top-level error type",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level error type"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "ErrorType": {"value": "Exception"}
                            },
                            "fingerprint": "93285c1b74c11ba1be9f97d4438adf169840d3b2",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "dbl2",
                                    "documentation": "doc dbl2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "str2",
                                    "documentation": "doc str2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.extending_top_level_error",
                            "documentation": "Top-level error type extending an type-level error type in the same package",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level error type extending an type-level error type in the same package"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "3d95eeeaa921d61b11a453d3f46310badff52e9d",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "str_field",
                                    "documentation": "doc strField",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc strField"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "dbl2",
                                    "documentation": "doc dbl2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "str2",
                                    "documentation": "doc str2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.extending_top_level_error_in_file",
                            "documentation": "Top-level error type extending an type-level error type in the same package from another file",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level error type extending an type-level error type in the same package from another file"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "e2c065a48cdfbb1bf59d3707fa3818e8720468ff",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "str_field",
                                    "documentation": "doc strField",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc strField"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "dbl1",
                                    "documentation": "doc dbl1\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl1"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                }
                                ,
                                {
                                    "name": "str1",
                                    "documentation": "doc str1\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str1"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.operation_not_found",
                            "documentation": "An error type whose (unqualified) name is the same as a standard error reported by the vAPI runtime.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "An error type whose (unqualified) name is the same as a standard error reported by the vAPI runtime."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "ErrorType": {"value": "Exception"}
                            },
                            "fingerprint": "ae871285f20081991c309d01afaf41d94a2cc230",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.top_level_error_in_file",
                            "documentation": "Top-level error type",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level error type"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "ErrorType": {"value": "Exception"}
                            },
                            "fingerprint": "1cdf90148b43f15911ca3e9dcb618b7734863a2d",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "dbl1",
                                    "documentation": "doc dbl1\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl1"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                }
                                ,
                                {
                                    "name": "str1",
                                    "documentation": "doc str1\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str1"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.errors.custom_error_service",
                            "documentation": "A test service that uses custom errors \n   - to be reported\/thrown from method(s)\n   - as method param and return values\n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "A test service that uses custom errors "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": "to be reported\/thrown from method(s)"}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": "as method param and return values"}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "3cbf5a7ff0243a907b3f847cd88db9dce209d7ce",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "method",
                                    "documentation": "Test method which reports custom error.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test method which reports custom error."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b0e2675979451c3fd8eb0547d1eb2021f0ad98d5",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error",
                                            "name": "custom_error",
                                            "documentation": "always thrown",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "always thrown"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_custom_error",
                                    "documentation": "Echoes a custom error.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a custom error."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f18491e0b46ffe8da5ba5297c2e7939b5863568f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_custom_error_list",
                                    "documentation": "Echoes list of custom errors.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes list of custom errors."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "aa2027e9fc64a7eaf9cceb3eac38dbe91def44c4",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_optional",
                                    "documentation": "Echoes optional custim error.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes optional custim error."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "02b787fdcf9a960348dccce558b9ae27a6dc05cc",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_error"}}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.errors.exception_service",
                            "documentation": "Test service for Exception type",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service for Exception type"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "1e7f5c8d6b2afb316b5ecc0498e90603d3731e5a",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.errors.exception_service.exception_struct",
                                    "documentation": "Structure which contains an Exception field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure which contains an Exception field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a2f38822b1b448ca2bcb7d13156ee8c908f55206",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "custom_exception_field",
                                            "documentation": "Custom Exception field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Custom Exception field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_exception"}
                                        }
                                        ,
                                        {
                                            "name": "exception_field",
                                            "documentation": "Exception field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Exception field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "exception"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo_exception",
                                    "documentation": "Echoes an Exception.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes an Exception."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a9c2da81e55093a9ff3c82e6ff76771ac5d4aa39",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "some Exception",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "some Exception"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "exception"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "exception"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_exception_optional",
                                    "documentation": "Echoes an optional Exception.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes an optional Exception."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3a04a2d7362e6128dd8595802e7b836f4814bb54",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "optional Exception\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional Exception"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "exception"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "exception"}}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_exception_list",
                                    "documentation": "Echoes an Exception list.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes an Exception list."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2d2432a1ad4bfaca25c1f1940d9fa53d6a392071",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "Exception list",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Exception list"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "exception"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "exception"}}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_custom_exception",
                                    "documentation": "Echoes a custom Exception.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a custom Exception."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cf372ffd01b4ab1669c828e0d1aba267c76cfe5d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "custom Exception",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "custom Exception"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_exception"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_exception"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_exception_struct",
                                    "documentation": "Echoes a structure which contains an Exception field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a structure which contains an Exception field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "199e203e703b6feada4a98a1e4d20d9662587005",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "structure which contains an Exception field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "structure which contains an Exception field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.exception_service.exception_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.exception_service.exception_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_custom_exception",
                                    "documentation": "Throws a user-defined Exception type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Throws a user-defined Exception type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f5304da42d6fb6a46743d5fde4cf723e4745cba1",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "custom Exception",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "custom Exception"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_exception"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_exception",
                                            "name": "custom_exception",
                                            "documentation": "same as input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.custom.custom_exception"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.errors.service1",
                            "documentation": "Service1: \n   -  declares a nested error type\n   -  uses top-level error type from same package\n   -  uses nested (in itself) error type\n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service1: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " declares a nested error type"}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level error type from same package"}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses nested (in itself) error type"}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "9041f1572fa42b9e0db5918e84af04d46f756f09",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.errors.service1.nested_error",
                                    "documentation": "Nested error type that extends an top-level error type from another file",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested error type that extends an top-level error type from another file"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c8c673428b1a6fad7566cdbc8d5a0cfc8b7e2bc0",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field",
                                            "documentation": "doc strField",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc strField"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "dbl1",
                                            "documentation": "doc dbl1\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc dbl1"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                        }
                                        ,
                                        {
                                            "name": "str1",
                                            "documentation": "doc str1\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc str1"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.errors.service1.another_nested_error",
                                    "documentation": "Nested error type that extends an top-level error type",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested error type that extends an top-level error type"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cbf723fe6b6dd9b6d204bc6bc40952f1a92fe94d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field",
                                            "documentation": "doc strField",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc strField"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "dbl2",
                                            "documentation": "doc dbl2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc dbl2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                        ,
                                        {
                                            "name": "str2",
                                            "documentation": "doc str2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc str2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.errors.service1.extending_nested_error",
                                    "documentation": "Nested error type that extends another (nested) error type in the same interface",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested error type that extends another (nested) error type in the same interface"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9245d5d12ec9131f06fadaa11679e2f405e90334",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field2",
                                            "documentation": "doc strField2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc strField2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "str_field",
                                            "documentation": "doc strField",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc strField"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "dbl1",
                                            "documentation": "doc dbl1\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc dbl1"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                        }
                                        ,
                                        {
                                            "name": "str1",
                                            "documentation": "doc str1\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc str1"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "report_top_level_error",
                                    "documentation": "Refer to a top-level error defined the same file.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Refer to a top-level error defined the same file."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e1082f4f84a1392461ee5be0131bca419b018117",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error",
                                            "name": "top_level_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_top_level_error_FQ",
                                    "documentation": "Refer to a top-level error defined the same file with a FQ name.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Refer to a top-level error defined the same file with a FQ name."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0dbc554e0f172abed0267c69ebe1f06deb6d378a",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error",
                                            "name": "top_level_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_top_level_error_in_file",
                                    "documentation": "Simple name used for top-level error type - OK, since it is in the same package.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for top-level error type - OK, since it is in the same package."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4f0f896c42a85af4a724605969c25468d53b830c",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file",
                                            "name": "top_level_error_in_file",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_top_level_error_in_file_FQ",
                                    "documentation": "FQ name used for error type in the same scope\/package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for error type in the same scope\/package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4512ffb933d98f2c3bf8f022c65922c0b0e0f60e",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file",
                                            "name": "top_level_error_in_file",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_nested_error",
                                    "documentation": "Simple name used for error type nested in this same service - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for error type nested in this same service - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "bc27c2535c8ccf8a123c03545e2dbe20274207d0",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.service1.nested_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.service1.nested_error",
                                            "name": "nested_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.service1.nested_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_nested_error_FQ",
                                    "documentation": "FQ name used for error type nested in this same service - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for error type nested in this same service - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4b76c762ab70bf13e85442674a15cc041f13c7e5",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.service1.nested_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.service1.nested_error",
                                            "name": "nested_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.service1.nested_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_derived_error",
                                    "documentation": "Report an error (NestedError) that is derived from the declared error (TopLevelErrorInFile).",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Report an error (NestedError) that is derived from the declared error (TopLevelErrorInFile)."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f49db5e60ba67dc66d390fc630abf4379237e2eb",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file",
                                            "name": "top_level_error_in_file",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_standard_error",
                                    "documentation": "Refer to a top-level error defined the same file and a standard error reported by the vAPI runtime using an imported name.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Refer to a top-level error defined the same file and a standard error reported by the vAPI runtime using an imported name."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2f0cf6431811058b7a3cf0a7664c8dcf7e74ded6",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error",
                                            "name": "top_level_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument",
                                            "name": "invalid_argument",
                                            "documentation": "just in the declaration; never reported",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "just in the declaration; never reported"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_standard_error_FQ",
                                    "documentation": "Refer to a top-level error defined the same file and a standard error reported by the vAPI runtime using a fully qualified name.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Refer to a top-level error defined the same file and a standard error reported by the vAPI runtime using a fully qualified name."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ede92e21d0665b255c0fdeccb68e8e1e7678ce2b",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error",
                                            "name": "top_level_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                        ,
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument",
                                            "name": "invalid_argument",
                                            "documentation": "just in the declaration; never reported",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "just in the declaration; never reported"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_ambiguous_name_error",
                                    "documentation": "Refer to a locally-define error that has the same (unqualified) name as a standard error reported by the vAPI runtime.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Refer to a locally-define error that has the same (unqualified) name as a standard error reported by the vAPI runtime."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "de785685be2afdaa9d47e71cbcc5049a6b3ab9ea",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.operation_not_found"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.operation_not_found",
                                            "name": "operation_not_found",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.operation_not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_ambiguous_name_error_FQ",
                                    "documentation": "Use a fully-qualified name to refer to a locally-define error that has the same (unqualified) name as a standard error reported by the vAPI runtime.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Use a fully-qualified name to refer to a locally-define error that has the same (unqualified) name as a standard error reported by the vAPI runtime."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a10d136676e1eed2064366c3fec56967cba1a21b",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.operation_not_found"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.operation_not_found",
                                            "name": "operation_not_found",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.operation_not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.errors.another",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "fbb80bf28e5e2ff9c293732317fd4c867af706dd",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.another.top_level_extending_error",
                            "documentation": "Top-level structure which extends error type from another package.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level structure which extends error type from another package."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "1c4413f2d328f7c9e1733d03544c2bb85c4a2871",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "str_field",
                                    "documentation": "doc strField",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc strField"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "dbl2",
                                    "documentation": "doc dbl2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "str2",
                                    "documentation": "doc str2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.errors.another.service2",
                            "documentation": "Service2: \n   -  uses top-level error type from another package by importing it \n   -  uses error type nested in service (Service1) from another package by importing it \n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service2: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level error type from another package by importing it "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses error type nested in service (Service1) from another package by importing it "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "e7d5d7050ec3a7e2a02690c4b96bdb038119f9ae",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.errors.another.service2.nested_extending_error",
                                    "documentation": "Extend a top-level error type from another package - OK since it is imported",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Extend a top-level error type from another package - OK since it is imported"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6ec4190efd1f65400c9f6aa68a3cc0955a2788fe",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field",
                                            "documentation": "doc strField",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc strField"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "dbl2",
                                            "documentation": "doc dbl2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc dbl2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                        ,
                                        {
                                            "name": "str2",
                                            "documentation": "doc str2",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc str2"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "report_top_level_error_imported",
                                    "documentation": "Report a top-level error type from another package - OK since it is imported.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Report a top-level error type from another package - OK since it is imported."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2169142df8c8865b4bfebfdbb7480542803d3f23",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error",
                                            "name": "top_level_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_top_level_extending_error",
                                    "documentation": "Simple name used for a top-level error type from another package - OK since it is imported.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for a top-level error type from another package - OK since it is imported."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cf6496bbc6f17756b6947404a3ec8f1aa0d34bba",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.another.top_level_extending_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.another.top_level_extending_error",
                                            "name": "top_level_extending_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.another.top_level_extending_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "report_nested_extending_error",
                                    "documentation": "Report a nested error defined in this service that extends a top-level error defined in another package.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Report a nested error defined in this service that extends a top-level error defined in another package."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8102b178dc979a6ae5d6af197417ff5d57d81843",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.another.service2.nested_extending_error"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.another.service2.nested_extending_error",
                                            "name": "nested_extending_error",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.another.service2.nested_extending_error"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.errors.another.service3",
                            "documentation": "Service3: \n   -  uses top-level error type from another package by FQ name \n   -  uses error type nested in service (Service1) from another package by FQ name \n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service3: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level error type from another package by FQ name "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses error type nested in service (Service1) from another package by FQ name "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "9b0fbb7a2d819972ae5d893ff660609f06251291",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "report_top_level_error_in_file_FQ",
                                    "documentation": "FQ name used for top-level error type from another package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for top-level error type from another package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4512ffb933d98f2c3bf8f022c65922c0b0e0f60e",
                                    "params": [
                                        {
                                            "name": "error",
                                            "documentation": "error to report",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "error to report"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file",
                                            "name": "top_level_error_in_file",
                                            "documentation": "same as error parameter",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "same as "},
                                                            {"atCode": "error"},
                                                            {"text": " parameter"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.errors.top_level_error_in_file"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.errors.custom",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "240119fd8d8c770cee1c6f55961bd88c73b9b3f9",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.custom.custom_derived_includer_error",
                            "documentation": "Custom error type which derives from another custom error type and includes third type",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Custom error type which derives from another custom error type and includes third type"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Include": {"value": "com.vmware.vapi.test.errors.custom.includable_description"}
                            },
                            "fingerprint": "98ba2418f9345c09f22c4f2b0ed9e641140c9514",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "error_code",
                                    "documentation": "Error code",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Error code"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "long"}
                                }
                                ,
                                {
                                    "name": "description",
                                    "documentation": "Description",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Description"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "str_field",
                                    "documentation": "String field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "date_time_field",
                                    "documentation": "DateTime field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "DateTime field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "date_time"}
                                }
                                ,
                                {
                                    "name": "struct_field",
                                    "documentation": "structure field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "structure field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                }
                                ,
                                {
                                    "name": "messages",
                                    "documentation": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Stack of one or more localizable messages for human "},
                                                    {"atTerm": "error"},
                                                    {"text": " consumers. "},
                                                    {
                                                        "paragraph": [
                                                            {"text": " The message at the top of the stack (first in the list) describes the "},
                                                            {"atTerm": "error"},
                                                            {"text": " from the perspective of the "},
                                                            {"atTerm": "operation"},
                                                            {"text": " the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}}
                                }
                                ,
                                {
                                    "name": "data",
                                    "documentation": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \nOperations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndicationstructures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Data to facilitate clients responding to the "},
                                                    {"atTerm": "operation"},
                                                    {"text": " reporting a standard "},
                                                    {"atTerm": "error"},
                                                    {"text": " to indicating that it was unable to complete successfully. "},
                                                    {
                                                        "paragraph": [
                                                            {"text": ""},
                                                            {"atTerm": "Operations"},
                                                            {"text": " may provide data that clients can use when responding to "},
                                                            {"atTerm": "errors"},
                                                            {"text": ". Since the data that clients need may be specific to the context of the "},
                                                            {"atTerm": "operation"},
                                                            {"text": " reporting the "},
                                                            {"atTerm": "error"},
                                                            {"text": ", different "},
                                                            {"atTerm": "operations"},
                                                            {"text": " that report the same "},
                                                            {"atTerm": "error"},
                                                            {"text": " may provide different data in the "},
                                                            {"atTerm": "error"},
                                                            {"text": ". The documentation for each each "},
                                                            {"atTerm": "operation"},
                                                            {"text": " will describe what, if any, data it provides for each "},
                                                            {"atTerm": "error"},
                                                            {"text": " it reports. The "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.ArgumentLocations", "isToType": true, "text": "ArgumentLocations"}},
                                                            {"text": ", "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.FileLocations", "isToType": true, "text": "FileLocations"}},
                                                            {"text": ", and "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.TransientIndication", "isToType": true, "text": "TransientIndication"}},
                                                            {"text": ""},
                                                            {"atTerm": "structures"},
                                                            {"text": " are intended as possible values for this "},
                                                            {"atTerm": "field"},
                                                            {"text": ". "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.DynamicID", "isToType": true, "text": "com.vmware.vapi.std.DynamicID"}},
                                                            {"text": " may also be useful as a value for this "},
                                                            {"atTerm": "field"},
                                                            {"text": " (although that is not its primary purpose). Some "},
                                                            {"atTerm": "services"},
                                                            {"text": " may provide their own specific "},
                                                            {"atTerm": "structures"},
                                                            {"text": " for use as the value of this "},
                                                            {"atTerm": "field"},
                                                            {"text": " when reporting "},
                                                            {"atTerm": "errors"},
                                                            {"text": " from their "},
                                                            {"atTerm": "operations"},
                                                            {"text": "."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "Some "},
                                                {"atTerm": "operations"},
                                                {"text": " will not set this "},
                                                {"atTerm": "field"},
                                                {"text": " when reporting "},
                                                {"atTerm": "errors"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.custom.custom_derived_includer_exception",
                            "documentation": "Custom Exception type which derives from another custom Exception type and includes third type",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Custom Exception type which derives from another custom Exception type and includes third type"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Include": {"value": "com.vmware.vapi.test.errors.custom.includable_description"}
                            },
                            "fingerprint": "52cb367b89ca3642d8668405e87ebc2838712cd2",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "major_code",
                                    "documentation": "Major error code",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Major error code"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "long"}
                                }
                                ,
                                {
                                    "name": "minor_code",
                                    "documentation": "Minor error code",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Minor error code"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "long"}
                                }
                                ,
                                {
                                    "name": "description",
                                    "documentation": "Description",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Description"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "explanation",
                                    "documentation": "String field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.custom.custom_error",
                            "documentation": "A custom errors for testing purposes. \n\nExtends from std.Error and defines several fields.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "A custom errors for testing purposes. "},
                                            {
                                                "paragraph": [
                                                ]
                                            }
,
                                            {"text": "Extends from std.Error and defines several fields."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "7fcbab0afe9de0a48afd7a419c36da17c09e7823",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "str_field",
                                    "documentation": "String field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "date_time_field",
                                    "documentation": "DateTime field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "DateTime field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "date_time"}
                                }
                                ,
                                {
                                    "name": "struct_field",
                                    "documentation": "structure field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "structure field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                }
                                ,
                                {
                                    "name": "messages",
                                    "documentation": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Stack of one or more localizable messages for human "},
                                                    {"atTerm": "error"},
                                                    {"text": " consumers. "},
                                                    {
                                                        "paragraph": [
                                                            {"text": " The message at the top of the stack (first in the list) describes the "},
                                                            {"atTerm": "error"},
                                                            {"text": " from the perspective of the "},
                                                            {"atTerm": "operation"},
                                                            {"text": " the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}}
                                }
                                ,
                                {
                                    "name": "data",
                                    "documentation": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \nOperations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndicationstructures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Data to facilitate clients responding to the "},
                                                    {"atTerm": "operation"},
                                                    {"text": " reporting a standard "},
                                                    {"atTerm": "error"},
                                                    {"text": " to indicating that it was unable to complete successfully. "},
                                                    {
                                                        "paragraph": [
                                                            {"text": ""},
                                                            {"atTerm": "Operations"},
                                                            {"text": " may provide data that clients can use when responding to "},
                                                            {"atTerm": "errors"},
                                                            {"text": ". Since the data that clients need may be specific to the context of the "},
                                                            {"atTerm": "operation"},
                                                            {"text": " reporting the "},
                                                            {"atTerm": "error"},
                                                            {"text": ", different "},
                                                            {"atTerm": "operations"},
                                                            {"text": " that report the same "},
                                                            {"atTerm": "error"},
                                                            {"text": " may provide different data in the "},
                                                            {"atTerm": "error"},
                                                            {"text": ". The documentation for each each "},
                                                            {"atTerm": "operation"},
                                                            {"text": " will describe what, if any, data it provides for each "},
                                                            {"atTerm": "error"},
                                                            {"text": " it reports. The "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.ArgumentLocations", "isToType": true, "text": "ArgumentLocations"}},
                                                            {"text": ", "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.FileLocations", "isToType": true, "text": "FileLocations"}},
                                                            {"text": ", and "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.errors.TransientIndication", "isToType": true, "text": "TransientIndication"}},
                                                            {"text": ""},
                                                            {"atTerm": "structures"},
                                                            {"text": " are intended as possible values for this "},
                                                            {"atTerm": "field"},
                                                            {"text": ". "},
                                                            {"atLink": {"resolved": "com.vmware.vapi.std.DynamicID", "isToType": true, "text": "com.vmware.vapi.std.DynamicID"}},
                                                            {"text": " may also be useful as a value for this "},
                                                            {"atTerm": "field"},
                                                            {"text": " (although that is not its primary purpose). Some "},
                                                            {"atTerm": "services"},
                                                            {"text": " may provide their own specific "},
                                                            {"atTerm": "structures"},
                                                            {"text": " for use as the value of this "},
                                                            {"atTerm": "field"},
                                                            {"text": " when reporting "},
                                                            {"atTerm": "errors"},
                                                            {"text": " from their "},
                                                            {"atTerm": "operations"},
                                                            {"text": "."}
                                                        ]
                                                    }

                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "Some "},
                                                {"atTerm": "operations"},
                                                {"text": " will not set this "},
                                                {"atTerm": "field"},
                                                {"text": " when reporting "},
                                                {"atTerm": "errors"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.custom.custom_exception",
                            "documentation": "Custom Exception type",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Custom Exception type"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "ErrorType": {"value": "Exception"}
                            },
                            "fingerprint": "989f329612d6e8763d2debba85184b6a4567dd15",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "explanation",
                                    "documentation": "String field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.custom.empty_custom_derived_exception",
                            "documentation": "Custom Exception type with no fields which derives from another custom Exception type with no fields",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Custom Exception type with no fields which derives from another custom Exception type with no fields"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "f500daba13df9054ea5891241f3b9ca1ed11b1b0",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                            ]
                        }
                        ,
                        {
                            "type": "Error",
                            "name": "com.vmware.vapi.test.errors.custom.empty_custom_exception",
                            "documentation": "Custom Exception type with no fields",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Custom Exception type with no fields"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "ErrorType": {"value": "Exception"}
                            },
                            "fingerprint": "50927d11eb4b3ddf7f9dea5ed81fe510eeb14de3",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.errors.custom.includable_description",
                            "documentation": "Includable mixin which provides a description field",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Includable mixin which provides a description field"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Includable": {"value": "true"}
                            },
                            "fingerprint": "6fda3b2e81bd589f1d0c308f9c95bd63d1da1948",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "description",
                                    "documentation": "Description",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Description"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                    ],
                    "services": [
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.id",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "b20deda88d0775dfbb637cace32d969d1e46af12",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.id.top_level_test_structure_with_dynamic_id",
                            "documentation": "simple top level test structure for polymorphic resoruce ID support",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "simple top level test structure for polymorphic resoruce ID support"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "eb15c06b04835dd13522e4c4e9a2b73f5f99b44a",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "device_type",
                                    "documentation": "device type\nWhen clients pass a value of this structure as a parameter, the field must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "device type"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be one of "},
                                                {"atCode": "com.vmware.CDROM"},
                                                {"text": ", "},
                                                {"atCode": "com.vmware.floppy"},
                                                {"text": ", or "},
                                                {"atCode": "com.vmware.USB"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be one of "},
                                                {"atCode": "com.vmware.CDROM"},
                                                {"text": ", "},
                                                {"atCode": "com.vmware.floppy"},
                                                {"text": ", or "},
                                                {"atCode": "com.vmware.USB"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "device_id",
                                    "documentation": "device ID\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "device ID"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for one of these resource types: "},
                                                {"atCode": "com.vmware.CDROM"},
                                                {"text": ", "},
                                                {"atCode": "com.vmware.floppy"},
                                                {"text": ", or "},
                                                {"atCode": "com.vmware.USB"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for one of these resource types: "},
                                                {"atCode": "com.vmware.CDROM"},
                                                {"text": ", "},
                                                {"atCode": "com.vmware.floppy"},
                                                {"text": ", or "},
                                                {"atCode": "com.vmware.USB"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "device_type"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.id.dynamic_id_service",
                            "documentation": "Test the DynamicID handling in the metadata service\/client",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test the DynamicID handling in the metadata service\/client"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "55a775d91965a4b9b78b6b7b23ffd60ebd465c56",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "list",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "267b230c416864359c7c5a36dcec3f228d94a229",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "list of dynamic ids",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "list of dynamic ids"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.dynamic_ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "get",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "127fbe49d636973424eab31e79d3e41ab65f0e74",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.dynamic_ID"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "DynamicStructure",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "DynamicStructure"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.id.polymorphic_resource_service",
                            "documentation": "vAPI test types for dynamic resource ID support",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test types for dynamic resource ID support"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "1e2e1e36fe250509f086c4bfdd42e35c619feec1",
                            "constants": [
                                {
                                    "name": "REMOVABLE",
                                    "documentation": "Test array of constants for polymorphic resource IDs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test array of constants for polymorphic resource IDs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]
                                }
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_model_with_dynamic_id",
                                    "documentation": "simple test model for polymorphic resoruce ID support",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "simple test model for polymorphic resoruce ID support"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "20c139cbfa7c444516226e4f9b4b1ee4293ba12e",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "model_id",
                                            "documentation": "model ID\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.dynamic_resource_test. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.dynamic_resource_test.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "model ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.dynamic_resource_test"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.dynamic_resource_test"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.dynamic_resource_test"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "device_type",
                                            "documentation": "device type\nWhen clients pass a value of this structure as a parameter, the field must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device type"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "device_id",
                                            "documentation": "device ID\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "device_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_structure_with_dynamic_id",
                                    "documentation": "simple test structure for polymorphic resoruce ID support",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "simple test structure for polymorphic resoruce ID support"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0c666124cb6065e932426a796ad81b0e44703e20",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "device_id",
                                            "documentation": "device ID\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "device_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "device_type",
                                            "documentation": "device type\nWhen clients pass a value of this structure as a parameter, the field must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device type"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_any_resource_support",
                                    "documentation": "test structure for any resource type support",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test structure for any resource type support"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "10aa7f1504c9f56a8c26ec7fd44405bca4b3d1f7",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "resource_type",
                                            "documentation": "resource type",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "resource type"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "resource_id",
                                            "documentation": "resource ID\nWhen clients pass a value of this structure as a parameter, the field PolymorphicResourceService.TestAnyResourceSupport.resource-type must contain the actual resource type. When operations return a value of this structure as a result, the field PolymorphicResourceService.TestAnyResourceSupport.resource-type will contain the actual resource type.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "resource ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.id.PolymorphicResourceService.TestAnyResourceSupport.resourceType", "isToMember": true, "text": "#resourceType", "tag": "name"}},
                                                        {"text": " must contain the actual resource type. When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.id.PolymorphicResourceService.TestAnyResourceSupport.resourceType", "isToMember": true, "text": "#resourceType", "tag": "name"}},
                                                        {"text": " will contain the actual resource type."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": [], "typeHolder": "resource_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_resource",
                                    "documentation": "test object for bug 1059199",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test object for bug 1059199"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6a5480cdb556485cdd01b828eb1713e63d805c8f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "resource_id",
                                            "documentation": "resource ID\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "resource ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "resource_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "resource_type",
                                            "documentation": "resource type\nWhen clients pass a value of this structure as a parameter, the field must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB. When operations return a value of this structure as a result, the field will be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "resource type"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_dynamic_id_support_without_type_holder",
                                    "documentation": "Test operation for polymorphic ID support.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation for polymorphic ID support."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "569d285c6bae71b985c2bbcd33f62454711320c2",
                                    "params": [
                                        {
                                            "name": "device_type",
                                            "documentation": "The parameter must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "device_id",
                                            "documentation": "device ID\nThe parameter must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "device_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_dynamic_id_support",
                                    "documentation": "Test operation for polymorphic ID support.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation for polymorphic ID support."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4a0edbe163a6a8bfa16d5d1b5646d41d0d7c7b58",
                                    "params": [
                                        {
                                            "name": "device_type",
                                            "documentation": "device type\nThe parameter must be one of com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device type"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be one of "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "IsOneOf": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "device_id",
                                            "documentation": "device ID\nThe parameter must be an identifier for one of these resource types: com.vmware.CDROM, com.vmware.floppy, or com.vmware.USB.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "device ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for one of these resource types: "},
                                                        {"atCode": "com.vmware.CDROM"},
                                                        {"text": ", "},
                                                        {"atCode": "com.vmware.floppy"},
                                                        {"text": ", or "},
                                                        {"atCode": "com.vmware.USB"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": ["com.vmware.CDROM", "com.vmware.floppy", "com.vmware.USB"], "typeHolder": "device_type"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_model_with_dynamic_id_support",
                                    "documentation": "Test operation for polymorphic ID support.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation for polymorphic ID support."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "886720edac1a0365f8adcad3eac198d76e1bfe09",
                                    "params": [
                                        {
                                            "name": "model",
                                            "documentation": "test model with dynamic ID",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test model with dynamic ID"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_model_with_dynamic_id"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_model_with_dynamic_id_support",
                                    "documentation": "test operation with optional model with polymorphic ID.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test operation with optional model with polymorphic ID."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "7caffa32c1787489bfd60c83ad17d98421314e31",
                                    "params": [
                                        {
                                            "name": "model",
                                            "documentation": "optional test model with dynamic ID\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional test model with dynamic ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_model_with_dynamic_id"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "apply_vm_policies",
                                    "documentation": "Test method for bug 1059199.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test method for bug 1059199."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "228b0352e9e9a54f4b25ee9fa4568c3410120830",
                                    "params": [
                                        {
                                            "name": "vm_id",
                                            "documentation": "VM ID\nThe parameter must be an identifier for the resource type: some.resource.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "VM ID"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "some.resource"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "some.resource"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "old_resource",
                                            "documentation": "old resource\noldResource is not required when the VM is newly created",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "old resource"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "oldResource is not required when the VM is newly created"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.id.polymorphic_resource_service.test_resource"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.interop",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "ab170f2e9b95cffd4dffbcb5c540e337ad439631",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.interop.metadata_union",
                            "documentation": "Top level Structure.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top level Structure."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "35bd007a2d35f16476c2fcff3023eba5d58a8725",
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.interop.metadata_union.test_enum",
                                    "documentation": "Enum defined inside a top level structure; used for union tag type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Enum defined inside a top level structure; used for union tag type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "94ef547ff1fd5f15c5d5ae0faae7bcd9bf4fd0e5",
                                    "values": [
                                        {
                                            "documentation": "enum constant - LONG",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - LONG"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "LONG"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - BOOLEAN",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - BOOLEAN"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "BOOLEAN"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - STRING",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - STRING"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "STRING"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - NONE",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - NONE"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "NONE"
                                        }
                                    ]
                                }
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "test_enum",
                                    "documentation": "Field of enum type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Field of enum type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "UnionTag": {"value": "true"}
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_union.test_enum"}
                                }
                                ,
                                {
                                    "name": "long_val",
                                    "documentation": "long field, in the union\nThis field is optional and it is only relevant when the value of MetadataUnion.test-enum is LONG.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "long field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["LONG"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                }
                                ,
                                {
                                    "name": "boolean_val",
                                    "documentation": "boolean field, in the union\nThis field is optional and it is only relevant when the value of MetadataUnion.test-enum is BOOLEAN.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "boolean field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.TestEnum.BOOLEAN", "isToMember": true, "text": "TestEnum#BOOLEAN"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["BOOLEAN"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "bool_val",
                                    "documentation": "boolean field 2, in the union\nThis field is optional and it is only relevant when the value of MetadataUnion.test-enum is BOOLEAN.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "boolean field 2, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.TestEnum.BOOLEAN", "isToMember": true, "text": "TestEnum#BOOLEAN"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["BOOLEAN"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "string_val",
                                    "documentation": "string field, in the union\nThis field is optional and it is only relevant when the value of MetadataUnion.test-enum is one of STRING or NONE.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "string field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is one of "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                {"text": " or "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.interop.MetadataUnion.TestEnum.NONE", "isToMember": true, "text": "TestEnum#NONE"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["STRING", "NONE"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "double_val",
                                    "documentation": "double field - out of the union",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "double field - out of the union"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.interop.metadata_echo",
                            "documentation": "vAPI test interface for integration tests",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "vAPI test interface for integration tests"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "a29a2c247d4381b15ac16ab237eb5d9cf7b531d2",
                            "constants": [
                                {
                                    "name": "constant_string",
                                    "documentation": "String constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "String"},
                                    "value": "val"
                                }
                                ,
                                {
                                    "name": "constant_long",
                                    "documentation": "Long constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Long constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Long"},
                                    "value": 1000000000000
                                }
                                ,
                                {
                                    "name": "constant_boolean",
                                    "documentation": "Boolean constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Boolean constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Boolean"},
                                    "value": true
                                }
                                ,
                                {
                                    "name": "constant_double",
                                    "documentation": "Double constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Double constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Double"},
                                    "value": 1.5
                                }
                                ,
                                {
                                    "name": "constant_double2",
                                    "documentation": "Double constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Double constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "Double"},
                                    "value": 1.5E-9
                                }
                                ,
                                {
                                    "name": "constant_strings",
                                    "documentation": "String array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["a", "b"]
                                }
                                ,
                                {
                                    "name": "constant_longs",
                                    "documentation": "Long array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Long array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "Long"},
                                    "value": [100, 200]
                                }
                                ,
                                {
                                    "name": "constant_doubles",
                                    "documentation": "Double array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Double array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "Double"},
                                    "value": [1.5, 2.5]
                                }
                                ,
                                {
                                    "name": "constant_booleans",
                                    "documentation": "Boolean array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Boolean array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "Boolean"},
                                    "value": [true, false]
                                }
                            ],
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.test_enum",
                                    "documentation": "test enumumeration",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test enumumeration"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "72361d11a8ccd808b0e8e2280b2a2e0a1c4e3310",
                                    "values": [
                                        {
                                            "documentation": "const one",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "const one"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "ONE"
                                        }
                                        ,
                                        {
                                            "documentation": "const two",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "const two"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                        ,
                                        {
                                            "documentation": "const three",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "const three"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "THREE"
                                        }
                                    ]
                                }
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple",
                                    "documentation": "simple test structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "simple test structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e26f1cdc5dd7999e04b42efe9dc77cf0ff2ff5c0",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_complex",
                                    "documentation": "more complex test structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "more complex test structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cd6a2fe6e4120ab09c5a553035b899a2bae03975",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "boolean_field",
                                            "documentation": "boolean field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "boolean field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "long_field",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "double_field",
                                            "documentation": "double field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "double field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                        ,
                                        {
                                            "name": "date_time_field",
                                            "documentation": "DateTime field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "DateTime field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "date_time"}
                                        }
                                        ,
                                        {
                                            "name": "uri_field",
                                            "documentation": "URI field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "URI field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "URI"}
                                        }
                                        ,
                                        {
                                            "name": "secret_field",
                                            "documentation": "Secret field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Secret field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "secret"}
                                        }
                                        ,
                                        {
                                            "name": "enum_field",
                                            "documentation": "field using enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "list_primitive_field",
                                            "documentation": "list field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_primitive_field",
                                            "documentation": "optional String field\ntest needs optional",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional String field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "test needs optional"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "structure_field",
                                            "documentation": "field using other structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "field using other structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.nested_structure_with_id",
                                    "documentation": "Nested non-model structure with...",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested non-model structure with..."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4bc1cc0acb127e752bbd92e625c76ca077c55af2",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "foreign1",
                                            "documentation": "...ID field\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "...ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_with_id",
                                    "documentation": "A test model structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A test model structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "7320a3a18194c4cad980f16340740a1c5a6260e5",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "primary",
                                            "documentation": "Primary ID - the model key\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary ID - the model key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "foreign1",
                                            "documentation": "Other ID field\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Other ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "foreign2",
                                            "documentation": "Third ID field\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Third ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "string_field",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "nested",
                                            "documentation": "Reference to other structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Reference to other structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.nested_structure_with_id"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_with_constants",
                                    "documentation": "A test structure with constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A test structure with constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "26c1449a634dc861d27b0f5cbad9e5ee694c2359",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                        {
                                            "name": "struct_constant_string",
                                            "documentation": "String constant in structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String constant in structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "String"},
                                            "value": "val"
                                        }
                                        ,
                                        {
                                            "name": "struct_constant_long",
                                            "documentation": "Long constant in structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Long constant in structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "Primitive", "type": "Long"},
                                            "value": 100
                                        }
                                    ],
                                    "fields": [
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_with_optional_id",
                                    "documentation": "A test model with optional IDs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "A test model with optional IDs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Model": {"value": "true"}
                                    },
                                    "fingerprint": "20390551ef14e73499970789c065522819fba578",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "primary",
                                            "documentation": "Primary ID - the model key\nreason\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Primary ID - the model key"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "ModelKey": {"value": "true"},
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                        ,
                                        {
                                            "name": "foreign",
                                            "documentation": "Other ID field\nreason\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.resource_echo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Other ID field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.interop.metadata_echo.empty_struct",
                                    "documentation": "Empty structure (without fields)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Empty structure (without fields)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8e2cbd47cc5daad729b488bdd10c5b6f91ccb852",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "test_void",
                                    "documentation": "void operation",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "void operation"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8704689b2f84ac4da55db457164f8580d09770a2",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_boolean",
                                    "documentation": "echo a Boolean value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Boolean value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e479c5d147533be2cb9d6f1d34f998da66236839",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string",
                                    "documentation": "echo a String value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a String value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b73463ab435b0637e369f9302d6bd408800854ee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long",
                                    "documentation": "echo a Long value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Long value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ff7ee22e1cc128dcbe095f82f258999877dc74f0",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "long"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_double",
                                    "documentation": "echo a Double value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Double value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4fe2fbdbe235a60aaf78e496a551a4699371bd50",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "double"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binary",
                                    "documentation": "echo a Binary value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Binary value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f16ff1fa8660e1c692056163e2806c072933d5e3",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "binary"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "binary"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_opaque",
                                    "documentation": "echo an Opaque value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an Opaque value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f794c388230d483db7215f33be37b9952ba4338f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "opaque"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "opaque"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_date_time",
                                    "documentation": "echo a DateTime value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a DateTime value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "95f020c2f0aab386c3f91493bf4ade7b8d2eb9d1",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "date_time"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "date_time"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri",
                                    "documentation": "echo an URI value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an URI value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f57171e21f9fc1c5542ca566f24eb62f38043f1c",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "URI"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "URI"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_secret",
                                    "documentation": "echo a Secret value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a Secret value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e88dcefb1a27c69ebf0ad1b1c5bd9d1f944d917f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "secret"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "secret"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum",
                                    "documentation": "echo an enumeration value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an enumeration value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "76a966fea74d14ede2be0d07b8836949aafc979e",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_id",
                                    "documentation": "echo an ID value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo an ID value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b2c5ecc288c143e1b7ec2694a418db196d2c0f2d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nThe parameter must be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe result will be an identifier for the resource type: com.vmware.resource_echo.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo"}
                                        },
                                        "type": {"category": "primitive", "primitive_type": "ID"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_boolean_list",
                                    "documentation": "echo List of Boolean",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Boolean"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "48e8cb44a448795f6c93d2ed42d11d88d310079a",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string_list",
                                    "documentation": "echo List of String",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of String"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1d2b9d5e99960eb7ae8212c796aa6086393fe67d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_list",
                                    "documentation": "echo List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b6392187719e0a183846d3c8a443fcb5d26f51f7",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_double_list",
                                    "documentation": "echo List of Double",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Double"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b1b878005f85ac47941ca96a1fdbb66475805410",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binary_list",
                                    "documentation": "echo List of Binary",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Binary"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3012e1b72e4e7c07caae2d0dd346dbfe6f762eae",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri_list",
                                    "documentation": "echo List of URI",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of URI"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "48b4512160e1d5e85922ccf6743839dadab5c119",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_secret_list",
                                    "documentation": "echo List of Secret",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of Secret"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e4be140bfc1cd4da6e7d2b4dbaa4d57e7021eab7",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_date_time_list",
                                    "documentation": "echo List of DateTime",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of DateTime"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "398aad9aa9606b4daf76bc3ca9371b9507236256",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_list",
                                    "documentation": "echo List of enum",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of enum"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ee1a31ef3887c39d86c87112d54db60324aa0873",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_id_list",
                                    "documentation": "echo List of ID",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of ID"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6af15c4a0cd3deb81d6abb1ad40130cee9e65597",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nThe parameter must contain identifiers for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain identifiers for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nThe result will contain identifiers for the resource type: com.vmware.resource_echo.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will contain identifiers for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo"}
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_list",
                                    "documentation": "echo List of structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0a4ae81deb57517716d340bbaaee9e13b02ef024",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_list_list",
                                    "documentation": "echo List of List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "150a06d655d44f1013d1bad039a5d59caf81ebfa",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_boolean_optional",
                                    "documentation": "echo optional Boolean",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Boolean"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eacaf3cd1fa41a3635eea3cdae720e5e58be0af2",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_string_optional",
                                    "documentation": "echo optional String",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional String"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9bdb271075d8bdd64461a4342045409504ecd7ef",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_optional",
                                    "documentation": "echo optional Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "07dc8691b720e9c20aff1423415833521111fa2e",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_double_optional",
                                    "documentation": "echo optional Double",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Double"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "09c2bed60558faee6c7592eab0c1c27436ac30c9",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_binary_optional",
                                    "documentation": "echo optional Binary",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Binary"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "814d14d65be344d509236819c7242b4cd523a905",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "binary"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_date_time_optional",
                                    "documentation": "echo optional DateTime",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional DateTime"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "08426998df4e4ba6296c7fce578f0b66b529c342",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "date_time"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_enum_optional",
                                    "documentation": "echo optional enum value",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional enum value"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eddb6be7c55dce6ea9a8d00f366fba778a65921b",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_enum"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_uri_optional",
                                    "documentation": "echo optional URI",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional URI"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0a482820141bc5355e8b1ac98a5bf3238a53e71f",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_secret_optional",
                                    "documentation": "echo optional Secret",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional Secret"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "20a8ee4fa115b299501fcc44db8522483e75c2ab",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "secret"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_id_optional",
                                    "documentation": "echo optional ID",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional ID"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "497f3e283270029a5f0a01ed52bbf94103baaa55",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason\nThe parameter must be an identifier for the resource type: com.vmware.resource_echo.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.resource_echo"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.resource_echo"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason\nThe result will be an identifier for the resource type: com.vmware.resource_echo.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will be an identifier for the resource type: "},
                                                    {"atCode": "com.vmware.resource_echo"},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                            "Resource": {"value": "com.vmware.resource_echo"}
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_optional",
                                    "documentation": "echo optional structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6769470d84c4e49af9bc7853a6ff5b1320c1552a",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_long_optional_list",
                                    "documentation": "echo optional List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6f6c286315006f3c6387d0b5ca239f886f50d9b5",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure_optional_list",
                                    "documentation": "echo optional List of structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional List of structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ac341d80867d9301c80a225c53393759724c1802",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_long_list",
                                    "documentation": "echo List of optional Long values",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional Long values"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8be6fa9f8187d189b1aef56264bc5ceb681f70cf",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_string_list",
                                    "documentation": "echo List of optional String values",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional String values"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e4f0f4973cca4550714ce90cbc53458ee0de2d0b",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_structure_list",
                                    "documentation": "echo List of optional structures",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional structures"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5a0fa8cba7c6dc4a0c92cedf50f19e17ead5f885",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_simple"}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_optional_long_list_list",
                                    "documentation": "echo List of optional List of Long",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of optional List of Long"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9336a1b308296d55c903af29bbf1dea1979bfbee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_structure",
                                    "documentation": "echo structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "982dc28403f33f07d401c3c9224eecb5edb657fc",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_complex"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.test_structure_complex"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error",
                                    "documentation": "echo a standard vAPI error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo a standard vAPI error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5974fe4179315a2a6f8f9bbc3351eb675f11d6f6",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_list",
                                    "documentation": "echo List of standard vAPI errors",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo List of standard vAPI errors"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4b8fbcf15af54eb64f4047b514651b6d58396052",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_argument"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_standard_error_optional",
                                    "documentation": "echo optional std error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo optional std error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c14701dd87225f65841bf467142984637dfc73d2",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input\nreason",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "optionalReason": 
                                            {
                                                "docModel": [
                                                    {"text": "reason"}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.resource_in_use"}}
                                    }
                                }
                                ,
                                {
                                    "name": "test_empty_struct",
                                    "documentation": "echo empty struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "echo empty struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e8ecac66e5a7b02d17ba19df3db1b4fbf889bed6",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test value",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test value"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.empty_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.interop.metadata_echo.empty_struct"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.interposer",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "90dae2ffe5294a1f2c251f7f5fabb35b8c212ed6",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.interposer.interposer_service",
                            "documentation": "Test service for interposer tests.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service for interposer tests."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "f4c8945a04224f0dfa5a5184396208105dd2270d",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "interpose",
                                    "documentation": "Sample Inteposer API.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Sample Inteposer API."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b7640462d1c89e962d065c5960e9e00e3a40112a",
                                    "params": [
                                        {
                                            "name": "service_name",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "operation_name",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "operation_input",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "opaque"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_request",
                                            "name": "invalid_request",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.invalid_request"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.interposer.post_interposer_service",
                            "documentation": "POST interposer service.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "POST interposer service."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "5aa1afeeb869ca8b46b7501f082919bf2f69c6f6",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "interpose",
                                    "documentation": "Interposer which could throw.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Interposer which could throw."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "25cd5c032627b834ef61407080597aafbe837572",
                                    "params": [
                                        {
                                            "name": "invocation_request",
                                            "documentation": "interposed invocation request\nThe parameter must contain all the attributes defined in InvocationRequest.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "interposed invocation request"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.std.interposition.InvocationRequest", "isToType": true, "text": "com.vmware.vapi.std.interposition.InvocationRequest"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.std.interposition.invocation_request"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                        ,
                                        {
                                            "name": "invocation_result",
                                            "documentation": "result of the interposed invocation\nThe parameter must contain all the attributes defined in InvocationResult.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "result of the interposed invocation"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.std.interposition.InvocationResult", "isToType": true, "text": "com.vmware.vapi.std.interposition.InvocationResult"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.std.interposition.invocation_result"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state",
                                            "name": "not_allowed_in_current_state",
                                            "documentation": "interposer error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "interposer error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.interposer.veto_interposer_service",
                            "documentation": "VETO interposer service.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "VETO interposer service."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "8dd406d0b08d9eb06ff73b81b627c253623054eb",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "interpose",
                                    "documentation": "Interposer which could throw.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Interposer which could throw."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "91a06670c8164c3d60f28c327240766ce4cb0470",
                                    "params": [
                                        {
                                            "name": "invocation_request",
                                            "documentation": "invocation request\nThe parameter must contain all the attributes defined in InvocationRequest.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "invocation request"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.std.interposition.InvocationRequest", "isToType": true, "text": "com.vmware.vapi.std.interposition.InvocationRequest"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.std.interposition.invocation_request"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state",
                                            "name": "not_allowed_in_current_state",
                                            "documentation": "interposer error",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "interposer error"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_allowed_in_current_state"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.l10n",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "bbb2d25c4f95de8eda25cc7d7c334bbb59175d55",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.l10n.localizable_test_service",
                            "documentation": "Test service which supports L10N.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service which supports L10N."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "57735bdb7e83c7ba55ea58791df511721574173a",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.l10n.localizable_test_service.localizable_struct",
                                    "documentation": "Test struct with localizable field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test struct with localizable field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "95dac2b22625eeeb8643d5b37e9664986a4f3f88",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string_field",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "localizable_field",
                                            "documentation": "localizable field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "localizable field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "get_desciption",
                                    "documentation": "Returns a localizable value.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Returns a localizable value."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d55247c0a13026fb25655ac17f0190ced0d93b45",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "description as localizable message",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "description as localizable message"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}
                                    }
                                }
                                ,
                                {
                                    "name": "get_loc_struct",
                                    "documentation": "Returns a struct with localizable field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Returns a struct with localizable field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "efbefb0ec73224f11f66c7d8b30b27739e77102b",
                                    "params": [
                                    ],
                                    "errors": [
                                        {
                                            "user_defined_type_name": "com.vmware.vapi.std.errors.not_found",
                                            "name": "not_found",
                                            "documentation": "never thrown",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "never thrown"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.errors.not_found"}
                                        }
                                    ],
                                    "result": {
                                        "documentation": "a fixed localizable message",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "a fixed localizable message"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.l10n.localizable_test_service.localizable_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "receive_loc_message",
                                    "documentation": "Accepts a localizable parameter.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Accepts a localizable parameter."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c8356b7fa3d351e05e416a16a0da3c0535520de3",
                                    "params": [
                                        {
                                            "name": "loc_msg",
                                            "documentation": "a localizable message",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "a localizable message"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the id of locMsg",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the id of "},
                                                        {"atCode": "locMsg"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "receive_loc_struct",
                                    "documentation": "Accepts a struct with localizable field.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Accepts a struct with localizable field."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ada89c5a0f1ecdd77e7934c3b19798e4dcad259a",
                                    "params": [
                                        {
                                            "name": "loc_str",
                                            "documentation": "a struct with localizable field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "a struct with localizable field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.l10n.localizable_test_service.localizable_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the id of the localizable message",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the id of the localizable message"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_loc_message",
                                    "documentation": "Echoes a LocalizableMessage.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a LocalizableMessage."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e799f3f80886a2a133837d4d2ad5f81165707a51",
                                    "params": [
                                        {
                                            "name": "loc_msg",
                                            "documentation": "a localizable message",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "a localizable message"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as locMsg",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "locMsg"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.std.localizable_message"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.metadata",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "b5af9d0cc7b524cad248a5ff6e3c6deb78794ffc",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.metadata.json_escape",
                            "documentation": "Service used to test if metadata generators escape all the characters in JSON that have to be escaped",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service used to test if metadata generators escape all the characters in JSON that have to be escaped"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "9cf90651cf1c814f56317ac9e511157825f83e07",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.metadata.json_escape.escape",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6cf006ac661df0a444129033508000969b34eadb",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "quotes",
                                            "documentation": "\"Quotes\" in the documentation",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "\"Quotes\" in the documentation"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "reverse_solidus",
                                            "documentation": "Reverse Solidus \\ in the documentation",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Reverse Solidus \\ in the documentation"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo",
                                    "documentation": "\"Quotes\", Reverse solidus \\",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"Quotes\", Reverse solidus \\"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "51900cec870653ca7dd2e1f54a188d8598fe62be",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.metadata.json_escape.escape"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.naming",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "267ca6950c301c2399f58759260e3b24e97013b1",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.naming.field_name",
                            "documentation": "This class tests the different ways to declare field names and ensures that further toolkit changes will not break the bindings generation.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "This class tests the different ways to declare field names and ensures that further toolkit changes will not break the bindings generation."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "2db3428e818e1105a2572228caf20aaf76b7702c",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "v_cloud",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "V_app",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "V_app"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "URL",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "va_pp",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "v_UR_lv",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "_underscore",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "_underscore"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "_Underscore_cap",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "_Underscore_cap"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "__double",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "__double"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "__Double_cap",
                                    "documentation": "\"strange\" field name",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "\"strange\" field name"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "__Double_cap"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.naming.name_clash_service",
                            "documentation": "Tests name clashes.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Tests name clashes."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "a7e28477c9770d5a4bb9da9f6ac87ee55bf18a7a",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.naming.name_clash_service.get_input",
                                    "documentation": "GetInput - same name as the input structure for get() above",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "GetInput - same name as the input structure for get() above"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1f13029b523fe4b3fdda907709e45d250a099a9c",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "input",
                                            "documentation": "input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "get",
                                    "documentation": "Get.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Get."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1b5d2944d22bd525f96df63bb6ed16f70257fb53",
                                    "params": [
                                        {
                                            "name": "id",
                                            "documentation": "identifier",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "identifier"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.naming.vAPI_1_2_canonical",
                            "documentation": "Interface to test @CanonicalNames",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Interface to test @CanonicalNames"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "CanonicalName": {"value": "vAPI_1_2_canonical"}
                            },
                            "fingerprint": "2a7e3e81ea5d88a040fd9593d3e5b5bcacb56363",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.naming.vAPI_1_2_canonical.sample_1_2",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "sample_1_2"}
                                    },
                                    "fingerprint": "79c344bb47701e0355f657c0f780e1e5cfd597d9",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "vDS_port_1_2",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "CanonicalName": {"value": "vDS_port_1_2"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                        ,
                                        {
                                            "name": "VMware",
                                            "documentation": "doc\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "CanonicalName": {"value": "VMware"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                        ,
                                        {
                                            "name": "ICH_7m_present",
                                            "documentation": "doc\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "CanonicalName": {"value": "ICH_7m_present"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo_3_D",
                                    "documentation": "Echo - params and result structure with interesting canonical names.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echo - params and result structure with interesting canonical names."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "echo_3_D"}
                                    },
                                    "fingerprint": "5f5c4fc13e2a463255694dbe3ee2745d60ccd4ab",
                                    "params": [
                                        {
                                            "name": "is_CD_rom",
                                            "documentation": "is it a CD-ROM",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "is it a CD-ROM"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "CanonicalName": {"value": "is_CD_rom"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                        ,
                                        {
                                            "name": "vDS_port_1_2",
                                            "documentation": "vDS port 12?\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "vDS port 12?"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "CanonicalName": {"value": "vDS_port_1_2"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "structure with result",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "structure with result"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.naming.vAPI_1_2_canonical.sample_1_2"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.python",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "dc718502478169864362d9a84c8f89ac32dae095",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.python.keyword",
                            "documentation": "Service that has names which clashes with python keywords",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service that has names which clashes with python keywords"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "9efa67eeb57291e8132bf711b9047b1e59321357",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.python.keyword.struct",
                                    "documentation": "Structure that has names which clash with python keywords",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure that has names which clash with python keywords"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "aa3f7a2f8fff704228aeddd22572b4614ea5222d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "from",
                                            "documentation": "from",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "from"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.python.keyword.pass",
                                    "documentation": "Structure that has names which clash with python keywords",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure that has names which clash with python keywords"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f5362b2e05f53c6db80ae397b636e2b3633c46ef",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "struct",
                                            "documentation": "struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.python.keyword.struct"}
                                        }
                                        ,
                                        {
                                            "name": "struct1",
                                            "documentation": "struct1\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "struct1"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.python.keyword.struct"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "lambda",
                                    "documentation": "Method name and parameters clash with python keyword",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Method name and parameters clash with python keyword"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c0e2d358e5ddaf036854b8df6a008086e600a26a",
                                    "params": [
                                        {
                                            "name": "yield",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "from",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "struct",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.python.keyword.struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.python.keyword.pass"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo",
                                    "documentation": "test with self as the parameter",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test with self as the parameter"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "72530184c42e67352b96642507b309503873d510",
                                    "params": [
                                        {
                                            "name": "self",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.security",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "78c24e88fd93c97117b9a1efb506b6449d98066e",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.security.authentication",
                            "documentation": "Provides an authenticaion service for test purposes",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Provides an authenticaion service for test purposes"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "f64160b507fb4e1a3bd98b7b94c117f72b61b603",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "authenticate",
                                    "documentation": "Test operation for SAML authn.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation for SAML authn."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "402cb43298a720cd5f9bedaee0b85886aeb8e616",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if SAML security context is detected on the provider side",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if SAML security context is detected on the provider side"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "authenticate_oauth",
                                    "documentation": "Test operation for OAuth2 authn.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation for OAuth2 authn."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4a169378caf022837933c9790224b673c94cc808",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if OAuth2 context is detected on the provider side",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if OAuth2 context is detected on the provider side"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "authenticate_user_pass",
                                    "documentation": "Test operation for user\/pass authn.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation for user\/pass authn."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0e4feb0343163249c28362962c991b39aa8b4688",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if user\/pass security context is detected in the service implementation and there is an authentication result",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if user\/pass security context is detected in the service implementation and there is an authentication result"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "authenticate_user_pass_session_aware",
                                    "documentation": "Second test operation for user\/pass authn meant to be used with session aware authentication.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Second test operation for user\/pass authn meant to be used with session aware authentication."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "41844253a07e69fcde17552663991f80552dd628",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if user\/pass security context is detected in the service implementation and there is an authentication result",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if user\/pass security context is detected in the service implementation and there is an authentication result"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "authenticate_user_pass_and_no_auth",
                                    "documentation": "Test operation marked both for no authentication and user\/pass authentication.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation marked both for no authentication and user\/pass authentication."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0195eb4114a84a24ede83ac0930bfbeebf80b537",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if user\/pass security context is detected in the service implementation and there is an authentication result",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if user\/pass security context is detected in the service implementation and there is an authentication result"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.security.authorization",
                            "documentation": "Provides an authorization service for test purposes",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Provides an authorization service for test purposes"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "de3dfc6736d7c30b9433d77cf537f0773bddafdf",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.security.authorization.struct",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d83f79d86b4b7e1bd3b7a72d6c9e3535f1ef7cf7",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "structure_id",
                                            "documentation": "When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: com.vmware.vapi.authorization.structure. When operations return a value of this structure as a result, the field will be an identifier for the resource type: com.vmware.vapi.authorization.structure.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.authorization.structure"},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.authorization.structure"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.authorization.structure"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.security.authorization.structures",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "2610030dff50d6f7923a858f2169ac74bc8930d6",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "struct_map",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.security.authorization.struct"}}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "authorize",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "93a3ba67b3b984e7929f78c03717dfbb13fbd40f",
                                    "params": [
                                        {
                                            "name": "default_resource",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.authorization.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.authorization"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.authorization"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                        ,
                                        {
                                            "name": "named_id",
                                            "documentation": "The parameter must be an identifier for the resource type: com.vmware.vapi.named_resource.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must be an identifier for the resource type: "},
                                                        {"atCode": "com.vmware.vapi.named_resource"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Resource": {"value": "com.vmware.vapi.named_resource"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "ID"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "authorize_default",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a6d20a5e3c25b416608bf6e571c1fac6eb1085e9",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "authorize_nested",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e94433bc5679869214759931f32cecb7f0cd5d71",
                                    "params": [
                                        {
                                            "name": "structs",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.security.authorization.structures"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "authorize_map",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f508f3abbc7a76bac3100ad9af1c044d4c957648",
                                    "params": [
                                        {
                                            "name": "struct_map",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.security.authorization.struct"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.security.session_acceptor",
                            "documentation": "Provides an test service that echos back session ID from security context.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Provides an test service that echos back session ID from security context."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "317100794ed863e4dc71575a1bcc541b9a58c16c",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "echo_session_id",
                                    "documentation": "Returns sessionId as found in request's SecurityContext.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Returns sessionId as found in request's SecurityContext."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9f40f1c064cc0eaf1a3939a947afcbd5abb0f832",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "session ID from request's security context",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "session ID from request's security context"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "login",
                                    "documentation": "Login with SSO token; returns session identifier.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Login with SSO token; returns session identifier."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8bf86db5a543c1a5b92d36a921dfffd2be222744",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "new session ID",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "new session ID"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                                ,
                                {
                                    "name": "no_authn",
                                    "documentation": "Login with NoAuthentication security scheme.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Login with NoAuthentication security scheme."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e156f64e95c41f61b096b797887e76cd7255cbab",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "logout",
                                    "documentation": "Logout and clear session.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Logout and clear session."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "bf557f763aaaf6a02c072c918ebfb5ec9cea61f5",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "string"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.serialization",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "fc689b0f022622b1858ee26f8b258c6c424bd8da",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.serialization.complex_structure",
                            "documentation": "Test complex structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test complex structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "adbe0510fcbe66a236bb99c68c7106fd373192a5",
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.serialization.complex_structure.test_enum",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6cec8bc78ce4a8ec006456f5b4d8dad8ba151c6e",
                                    "values": [
                                        {
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "ONE"
                                        }
                                        ,
                                        {
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "TWO"
                                        }
                                    ]
                                }
                            ],
                            "constants": [
                                {
                                    "name": "constant_string",
                                    "documentation": "String constant",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String constant"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "Primitive", "type": "String"},
                                    "value": "val"
                                }
                                ,
                                {
                                    "name": "constant_strings",
                                    "documentation": "String array constants",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "String array constants"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "List", "type": "String"},
                                    "value": ["a", "b"]
                                }
                            ],
                            "fields": [
                                {
                                    "name": "opq",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "opaque"}
                                }
                                ,
                                {
                                    "name": "struct",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                }
                                ,
                                {
                                    "name": "lgn",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "long"}
                                }
                                ,
                                {
                                    "name": "dbl",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "bool",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "boolean"}
                                }
                                ,
                                {
                                    "name": "str",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "dt",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "date_time"}
                                }
                                ,
                                {
                                    "name": "uri",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "URI"}
                                }
                                ,
                                {
                                    "name": "bin",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "binary"}
                                }
                                ,
                                {
                                    "name": "sec",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "secret"}
                                }
                                ,
                                {
                                    "name": "enm",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.serialization.complex_structure.test_enum"}
                                }
                                ,
                                {
                                    "name": "id",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: foo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: foo.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "foo"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "foo"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "foo"}
                                    },
                                    "type": {"category": "primitive", "primitive_type": "ID"}
                                }
                                ,
                                {
                                    "name": "str_list",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "str_map",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "id_set",
                                    "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: foo. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: foo.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must contain identifiers for the resource type: "},
                                                {"atCode": "foo"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will contain identifiers for the resource type: "},
                                                {"atCode": "foo"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Resource": {"value": "foo"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                                ,
                                {
                                    "name": "opt_str",
                                    "documentation": "doc\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.serialization.simple_structure",
                            "documentation": "Test simple structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test simple structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "babad8ee90426ffa034d94cb970a7996f7536568",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "str",
                                    "documentation": "doc",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                    ],
                    "services": [
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.structures",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "67afb97798ad26e35162478f46eb574869927097",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.includable_top_level",
                            "documentation": "Top level includable structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top level includable structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Includable": {"value": "true"}
                            },
                            "fingerprint": "4e69969bc88ecec23ffd10c4d746d7c7cce5f61b",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "sample_field",
                                    "documentation": "sample field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "sample field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.includes_structure",
                            "documentation": "Top level structure without fields that includes another structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top level structure without fields that includes another structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Include": {"value": "com.vmware.vapi.test.structures.includable_top_level"}
                            },
                            "fingerprint": "b33c9d82c91b66de2e147e17f4bb24a8e9a3f7c8",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "sample_field",
                                    "documentation": "sample field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "sample field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.top_level_optional_field_struct",
                            "documentation": "Top-level structure with all optional fields",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level structure with all optional fields"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "8ac8b1565fb43e8849b47a4f39519045f1aa1f12",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "dbl1",
                                    "documentation": "doc dbl1",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl1"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                }
                                ,
                                {
                                    "name": "str1",
                                    "documentation": "doc dbl2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "struct1",
                                    "documentation": "refer a top-level struct (defined in its own file)\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "refer a top-level struct (defined in its own file)"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.top_level_struct",
                            "documentation": "Top-level structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "067496bf37a95ef7887a7faa4a5d9bdbd95efa33",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "dbl1",
                                    "documentation": "doc dbl1",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl1"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "str1",
                                    "documentation": "doc dbl2",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl2"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                                ,
                                {
                                    "name": "struct1",
                                    "documentation": "refer a top-level struct (defined in its own file)\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "refer a top-level struct (defined in its own file)"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.top_level_struct_in_file",
                            "documentation": "Top-level structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Model": {"value": "true"}
                            },
                            "fingerprint": "e2544ca27691519f64aae743e5519b366c4e52ba",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "dbl1",
                                    "documentation": "doc dbl1\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl1"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "double"}}
                                }
                                ,
                                {
                                    "name": "str1",
                                    "documentation": "doc str1\nreason",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str1"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "id",
                                    "documentation": "doc id\nreason\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: foo. When operations return a value of this structure as a result, the field will be an identifier for the resource type: foo.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc id"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "reason"}
                                            ]
                                        }
                                        ,
                                        "metadata": 
                                        {
                                            "docModel": [
                                                {"text": "When clients pass a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "parameter"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " must be an identifier for the resource type: "},
                                                {"atCode": "foo"},
                                                {"text": ". When "},
                                                {"atTerm": "operations"},
                                                {"text": " return a value of this "},
                                                {"atTerm": "structure"},
                                                {"text": " as a "},
                                                {"atTerm": "result"},
                                                {"text": ", the "},
                                                {"atTerm": "field"},
                                                {"text": " will be an identifier for the resource type: "},
                                                {"atCode": "foo"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "ModelKey": {"value": "true"},
                                        "Resource": {"value": "foo"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "ID"}}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.structures.dynamic_conversion",
                            "documentation": "Test service for conversion of dynamic data. This is used to test the \"permissive\" mode of the TypeConverter.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service for conversion of dynamic data. This is used to test the \"permissive\" mode of the TypeConverter."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "84437c9ddf02c72a1593903ca8f1ff62782d5367",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.input",
                                    "documentation": "Struct used for method parameter",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Struct used for method parameter"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d90d704ead8948c8197f4ebec5de3e50c9d959df",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string",
                                            "documentation": "String field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "String field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "struct",
                                            "documentation": "Dynamic data\/structure field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Dynamic data\/structure field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.other_struct",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b99c9148e1455a75f8e8935eb82f74386980dad2",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "a",
                                            "documentation": "optional string field\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional string field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_list",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8d424385cc8e02089b59b0cb90ceab5d79627a75",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "a",
                                            "documentation": "optional string field\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional string field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "b",
                                            "documentation": "list of long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_long",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f5e00978803afb5fe29cbfbed4110db69612cc3f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_double",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c2647bb601c48d76d68d73da818c349370088331",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "double field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "double field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "double"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_boolean",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ddd771c48a57758f972cbc2b56735692cf684631",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "boolean field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "boolean field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_secret",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "42dc7aa35ef9cd8614e75fdab13060c29202de86",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "Secret field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Secret field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "secret"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_optional",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "37e087fa6d3687765409eb5d73328af5d7852a98",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "optional long field\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional long field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_map",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cc052dcba99421c45eeb3279f3c9886ae7170d5c",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "Map field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Map field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Map", "map_key_type": {"category": "primitive", "primitive_type": "string"}, "map_value_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_set",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9db6de1273c0a381e8f1fae3a4d83dc77313122e",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "set field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "set field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Set", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.simple_binary",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5bc622ee9b4107951f55916c480c78299914117d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "b",
                                            "documentation": "Binary field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Binary field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "binary"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.model",
                                    "documentation": "Sample model class",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Sample model class"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Crud": {"value": "true"},
                                        "Create": {"value": "REQUIRED"},
                                        "Read": {"value": "REQUIRED"},
                                        "Update": {"value": "OPTIONAL"}
                                    },
                                    "fingerprint": "51d0f1308757d5eb9964416aa3ab08c941d5ea96",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "name",
                                            "documentation": "Name of the model, required\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Name of the model, required"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " must be provided for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "description",
                                            "documentation": "Description of the model\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Description of the model"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional for the "},
                                                        {"atCode": "create"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": ". It will always be present in the "},
                                                        {"atTerm": "result"},
                                                        {"text": " of the "},
                                                        {"atCode": "get"},
                                                        {"text": " or "},
                                                        {"atCode": "list"},
                                                        {"text": " "},
                                                        {"atTerm": "operations"},
                                                        {"text": ". It is optional for the "},
                                                        {"atCode": "update"},
                                                        {"text": " "},
                                                        {"atTerm": "operation"},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "Create": {"value": "OPTIONAL"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.dynamic_conversion.create_params",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ebadde6dec42d6d4736b8c9ac38fd93675cfc12b",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "model",
                                            "documentation": "The model to be created",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The model to be created"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.model"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "create",
                                    "documentation": "Test operation",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "fc51d8256250963483dd9b5f0118e379e72381d5",
                                    "params": [
                                        {
                                            "name": "create_params",
                                            "documentation": "create params\nThe parameter must contain all the attributes defined in DynamicConversion.CreateParams.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "create params"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.DynamicConversion.CreateParams", "isToType": true, "text": "com.vmware.vapi.test.structures.DynamicConversion.CreateParams"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.dynamic_conversion.create_params"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_struct",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b2e475be43a74ce554353d3e642211fb29769696",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_list",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "0c0387ba35d55f86143ab6152eea2aa63a49401d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_long",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a7c501a4aa9c5261c9a7995d141bcb10e83cb1ee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_double",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1b8814524a8a5630e95259709f12e2288ab47cbc",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_boolean",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "95843d9b15e736895cf1c021b1997ecb445c218e",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_secret",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "419e88a8884a88a60422863554c6665d67655ff3",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_optional",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d1604a2ab07791dd55937ef15491dceda55c0e02",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_map",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "cb9157eeb66af7bfdb98b7bf09e79381d75073e6",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_set",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "bf550061f21e0bbcf15fc3650b734246e81aaafb",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_simple_binary",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "81600e0a1f7517f138392cd9459a7a47edeada12",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.dynamic_conversion.input"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.structures.includable_structures",
                            "documentation": "Test service for includable structures",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Test service for includable structures"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "90b22ae999e0dc433c426ed22934a16d34b2b2f5",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.perimeter_before_shape",
                                    "documentation": "@HasFieldsOf refers Shape, before Shape declaration",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"atLiteral": "@HasFieldsOf"},
                                                    {"text": " refers Shape, before Shape declaration"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e316b5588e55ea9c2c32cd6398366d6540117947",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "shape",
                                            "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must contain all the attributes defined in IncludableStructures.Shape. When operations return a value of this structure as a result, the field will contain all the attributes defined in IncludableStructures.Shape.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.shape",
                                    "documentation": "Shape includable struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Shape includable struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Includable": {"value": "true"}
                                    },
                                    "fingerprint": "c932a8e2a05b435721fa25b29b3a4f7c12280d00",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "color",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.rectangle",
                                    "documentation": "Rectangle includes Shape",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Rectangle includes Shape"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Include": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                    },
                                    "fingerprint": "2b23d5a219d98c5b553e84337d30478257da56d1",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "width",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "height",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "color",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.includes_shape_inner_class",
                                    "documentation": "Nested structure without fields that includes another structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested structure without fields that includes another structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "Include": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                    },
                                    "fingerprint": "3f7b805927ed4b2c55eae3b73bc4b80d7fedb8d7",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "color",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.dog",
                                    "documentation": "Dog (doesn't includes Shape)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Dog (doesn't includes Shape)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eb8cff9014155ed5a229a5f237886434031756e7",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "name",
                                            "documentation": "doc",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.perimeter",
                                    "documentation": "Perimeter",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Perimeter"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "67a3eb854793c038825d444be13bf24b037832c1",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "shape",
                                            "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must contain all the attributes defined in IncludableStructures.Shape. When operations return a value of this structure as a result, the field will contain all the attributes defined in IncludableStructures.Shape.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.outer_perimeter",
                                    "documentation": "OuterPerimiter",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "OuterPerimiter"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "79f00bc30071d98cbd8d76ec21c7a858871b6c27",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "perimeter",
                                            "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must contain all the attributes defined in IncludableStructures.Perimeter. When operations return a value of this structure as a result, the field will contain all the attributes defined in IncludableStructures.Perimeter.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Perimeter", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Perimeter"}},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Perimeter", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Perimeter"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.perimeter"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.includable_structures.another_spec",
                                    "documentation": "Another spec",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Another spec"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b749ed5e98457c2daa0b866fdfcf27717f87b4c4",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "field",
                                            "documentation": "doc\nWhen clients pass a value of this structure as a parameter, the field must contain all the attributes defined in AnotherTopLevelStruct. When operations return a value of this structure as a result, the field will contain all the attributes defined in AnotherTopLevelStruct.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "When clients pass a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "parameter"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.diff.AnotherTopLevelStruct", "isToType": true, "text": "com.vmware.vapi.test.structures.diff.AnotherTopLevelStruct"}},
                                                        {"text": ". When "},
                                                        {"atTerm": "operations"},
                                                        {"text": " return a value of this "},
                                                        {"atTerm": "structure"},
                                                        {"text": " as a "},
                                                        {"atTerm": "result"},
                                                        {"text": ", the "},
                                                        {"atTerm": "field"},
                                                        {"text": " will contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.diff.AnotherTopLevelStruct", "isToType": true, "text": "com.vmware.vapi.test.structures.diff.AnotherTopLevelStruct"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.diff.another_top_level_struct"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "method",
                                    "documentation": "An operation that takes 2 dynamic structures as input one of which requires certain fields to be present",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "An operation that takes 2 dynamic structures as input one of which requires certain fields to be present"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "24c08606d9d19004552cf948f19a949c6a31f406",
                                    "params": [
                                        {
                                            "name": "any_value",
                                            "documentation": "unrestricted dynamic structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "unrestricted dynamic structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                        ,
                                        {
                                            "name": "shape_value",
                                            "documentation": "dynamic structure which has-fields-of Shape\nThe parameter must contain all the attributes defined in IncludableStructures.Shape.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "dynamic structure which has-fields-of Shape"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "nested",
                                    "documentation": "An operation that takes as input a structure with a nested field that contains fields of a certain type",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "An operation that takes as input a structure with a nested field that contains fields of a certain type"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "07d0d354e91d6475c55e04bfdc3dba4a1216fdc0",
                                    "params": [
                                        {
                                            "name": "outer_perimeter_value",
                                            "documentation": "outer perimeter\nThe parameter must contain all the attributes defined in IncludableStructures.OuterPerimeter.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "outer perimeter"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.OuterPerimeter", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.OuterPerimeter"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.outer_perimeter"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "list",
                                    "documentation": "This operation takes a list of dynamic structures that require certain fields to be present",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes a list of dynamic structures that require certain fields to be present"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c4b1927982f98fd9cca11e0119230ba405691172",
                                    "params": [
                                        {
                                            "name": "shape_list",
                                            "documentation": "dynamic list of structures which has-fields-of Shape\nThe parameter must contain all the attributes defined in IncludableStructures.Shape.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "dynamic list of structures which has-fields-of Shape"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "another",
                                    "documentation": "This operation takes as input a dynamic structure that requires fields of a type from another package to be present",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes as input a dynamic structure that requires fields of a type from another package to be present"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "92a1455f0d12db5bfb7facf899e88de15c458589",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "The parameter must contain all the attributes defined in AnotherTopLevelStruct.",
                                            "docModels": {
                                                "descriptions": [
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.diff.AnotherTopLevelStruct", "isToType": true, "text": "com.vmware.vapi.test.structures.diff.AnotherTopLevelStruct"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.diff.another_top_level_struct"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "another_nested",
                                    "documentation": "This operation takes as input a type that has a field of type dynamic structure that requires fields of a type from another package to be present",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes as input a type that has a field of type dynamic structure that requires fields of a type from another package to be present"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8000f857d086c0fb1cd04a37cb3c6e84bd211dba",
                                    "params": [
                                        {
                                            "name": "spec",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.another_spec"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "multiple_restrictions",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d36c213edd50bc541aee4d893f643249a378fa0c",
                                    "params": [
                                        {
                                            "name": "shape_list",
                                            "documentation": "dynamic list of structures which has-fields-of Shape\nThe parameter must contain all the attributes defined in IncludableStructures.Shape.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "dynamic list of structures which has-fields-of Shape"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                        }
                                        ,
                                        {
                                            "name": "shape_value",
                                            "documentation": "dynamic structure which has-fields-of Shape\nThe parameter must contain all the attributes defined in IncludableStructures.Shape.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "dynamic structure which has-fields-of Shape"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "metadata": 
                                                {
                                                    "docModel": [
                                                        {"text": "The "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " must contain all the "},
                                                        {"atTerm": "attributes"},
                                                        {"text": " defined in "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo",
                                    "documentation": "This operation takes echoes the input dynamic structure but needs the output structure to have certain fields",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes echoes the input dynamic structure but needs the output structure to have certain fields"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                    },
                                    "fingerprint": "5fde7c3aa9d83a3264820149e9aa221044da6f2b",
                                    "params": [
                                        {
                                            "name": "any_value",
                                            "documentation": "unrestricted dynamic structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "unrestricted dynamic structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "dynamic structure which has-fields-of Shape\nThe result will contain all the attributes defined in IncludableStructures.Shape.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "dynamic structure which has-fields-of Shape"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will contain all the "},
                                                    {"atTerm": "attributes"},
                                                    {"text": " defined in "},
                                                    {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_optional",
                                    "documentation": "This operation takes echoes the input dynamic structure but needs the optional output structure to have certain fields",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes echoes the input dynamic structure but needs the optional output structure to have certain fields"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "HasFieldsOf": {"value": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                    },
                                    "fingerprint": "b5a89bb1cde4c6998e3dbb730c4aaf9aef173d37",
                                    "params": [
                                        {
                                            "name": "any_value",
                                            "documentation": "unrestricted dynamic structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "unrestricted dynamic structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "dynamic_structure"}
                                        }
                                        ,
                                        {
                                            "name": "return_output",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "dynamic structure which has-fields-of Shape\nThe result will contain all the attributes defined in IncludableStructures.Shape.",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "dynamic structure which has-fields-of Shape"}
                                                    ]
                                                }
                                            ]
                                            ,
                                            "metadata": 
                                            {
                                                "docModel": [
                                                    {"text": "The "},
                                                    {"atTerm": "result"},
                                                    {"text": " will contain all the "},
                                                    {"atTerm": "attributes"},
                                                    {"text": " defined in "},
                                                    {"atLink": {"resolved": "com.vmware.vapi.test.structures.IncludableStructures.Shape", "isToType": true, "text": "com.vmware.vapi.test.structures.IncludableStructures.Shape"}},
                                                    {"text": "."}
                                                ]
                                            }
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "dynamic_structure"}}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_shape",
                                    "documentation": "This operation takes a shape and echoes the static structure to the output",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes a shape and echoes the static structure to the output"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3f4456b6fa7e4a3ac6a4f76ac64b2458d1207038",
                                    "params": [
                                        {
                                            "name": "shape",
                                            "documentation": "a static shape",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "a static shape"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "the shape",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "the shape"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                    }
                                }
                                ,
                                {
                                    "name": "input_ref_structure",
                                    "documentation": "This operation takes a reference to a structure that contains a dynamic structure as one of its fields",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation takes a reference to a structure that contains a dynamic structure as one of its fields"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "fa0b5812c4af7c6e58c7007585c1b9023f578ae3",
                                    "params": [
                                        {
                                            "name": "peri_value",
                                            "documentation": "Instance of Perimeter class",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Instance of Perimeter class"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.perimeter"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "get_ref_structure",
                                    "documentation": "This operation returns a reference to a structure that contains a dynamic structure as one of its fields",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation returns a reference to a structure that contains a dynamic structure as one of its fields"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5c2fb67e176daeb150c7d921064de9ab6c5840d2",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "Instance of Perimeter class",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "Instance of Perimeter class"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.perimeter"}
                                    }
                                }
                                ,
                                {
                                    "name": "get_ref_structure_buggy",
                                    "documentation": "This operation will fail and return an InternalServerError since it tries to return a structure without certain fields required to be present",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "This operation will fail and return an InternalServerError since it tries to return a structure without certain fields required to be present"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d1a644d5c2034c4b27bb8dd58383edf3fe0919ea",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "Instance of Perimeter class",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "Instance of Perimeter class"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.perimeter"}
                                    }
                                }
                                ,
                                {
                                    "name": "input_static_shape",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "25611321bcadbbefa6ac21c78903b745bab53c0d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "output_static_shape",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "fb21b1f717871d70ce76a225cceca1d29f2e0d47",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.includable_structures.shape"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.structures.service1",
                            "documentation": "Service1: \n   -  declares a nested structure \n   -  uses top-level from same package \n   -  uses nested (in itself) structure \n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service1: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " declares a nested structure "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level from same package "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses nested (in itself) structure "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "6b9269cc3e9718ff97483b3f74c308d8409ac2aa",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.service1.nested_struct",
                                    "documentation": "Nested structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a938e6727294b87c0119738b4207107326b836e4",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "str_field",
                                            "documentation": "doc strField",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "doc strField"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "field1",
                                            "documentation": "refer a top-level struct (defined in the same file)",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "refer a top-level struct (defined in the same file)"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                        ,
                                        {
                                            "name": "field2",
                                            "documentation": "refer a top-level struct (defined in its own file)\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "refer a top-level struct (defined in its own file)"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo_top_level_struct",
                                    "documentation": "FQ name used for structure in the same scope\/package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for structure in the same scope\/package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "adb43cd1156eb45159aaa7b7a05402d4b8ac276e",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_top_level_optional_field_struct",
                                    "documentation": "FQ name used for structure in the same scope\/package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for structure in the same scope\/package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9445302c9de8e7e18e1220458287359530a496b1",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_optional_field_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_optional_field_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_top_level_struct_in_file",
                                    "documentation": "Simple name used for top-level struct - OK, since it is in the same package.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for top-level struct - OK, since it is in the same package."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "86db07a5602b568f0ef3e7f0fee28e95f33e871e",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_top_level_struct_in_file_FQ",
                                    "documentation": "FQ name used for structure in the same scope\/package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for structure in the same scope\/package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9cfa212f771bf89d3fa6446611a69dfa4afbcfaa",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_nested_struct",
                                    "documentation": "Simple name used for structure nested in this same service - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for structure nested in this same service - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "af94aef2091587e7a34ca80188607dd490a7a445",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.service1.nested_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.service1.nested_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_nested_struct_FQ",
                                    "documentation": "FQ name used for structure nested in this same service - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for structure nested in this same service - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e8fc107123c205f1ef47563838104e75aa2a0604",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.service1.nested_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.service1.nested_struct"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.structures.service2",
                            "documentation": "Service2: \n   -  uses top-level structures from same package \n   -  uses structure nested in another service (Service1) from same package \n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service2: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level structures from same package "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses structure nested in another service (Service1) from same package "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "e048fc31a19ce84f1dd7ca6ead96059fb63e6dca",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "echo_top_level_struct_in_file",
                                    "documentation": "Simple name used for top-level struct - OK, since it is in the same package.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for top-level struct - OK, since it is in the same package."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "86db07a5602b568f0ef3e7f0fee28e95f33e871e",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_top_level_struct_in_file_FQ",
                                    "documentation": "FQ named used Echo top-level structure from the same package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ named used Echo top-level structure from the same package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9cfa212f771bf89d3fa6446611a69dfa4afbcfaa",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.structures.another",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "ee09db8c1068b582225f220bb3b8dea9799afa73",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.another.referring_top_level_struct",
                            "documentation": "Top-level structure which refers structures from another package.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level structure which refers structures from another package."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "ec3b9be22e3770247909a65d4851e482125863a2",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "field1",
                                    "documentation": "field refers other structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "field refers other structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.structures.another.service3",
                            "documentation": "Service3: \n   -  uses top-level structure from another package by importing it \n   -  uses nested structure which refers other structures \n   -  uses top-level structure which refers other structures \n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service3: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level structure from another package by importing it "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses nested structure which refers other structures "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level structure which refers other structures "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "957207e911d72d3b3079fca30948848602317a65",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.structures.another.service3.referring_nested_struct",
                                    "documentation": "Nested structure that refers other structure(s)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Nested structure that refers other structure(s)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4da6dc53d0d5af338c9c06728e0ff6a0da0cda48",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "field1",
                                            "documentation": "refer a top-level struct from another package",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "refer a top-level struct from another package"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo_top_level_struct_imported",
                                    "documentation": "Simple name used for top-level structure from another package - OK since it is imported.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple name used for top-level structure from another package - OK since it is imported."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6c7012cc646c4f1cd12eb75fcb1cea6a14fa89da",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_referring_nested_struct",
                                    "documentation": "Use nested structure which refers other structure(s).",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Use nested structure which refers other structure(s)."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5f5aec6235f319851bd77e4223735201599a4fd1",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.another.service3.referring_nested_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.another.service3.referring_nested_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_referring_top_level_struct",
                                    "documentation": "Use top-level structure which refers other structure(s).",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Use top-level structure which refers other structure(s)."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e9190029d62d41ce23023ca674ba0e7f5da35625",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.another.referring_top_level_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.another.referring_top_level_struct"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.structures.another.service4",
                            "documentation": "Service4: \n   -  uses top-level structure from another package by FQ name \n \n",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service4: "},
                                            {
                                                "ul": [
                                                    {"text": " "},
                                                    {
                                                        "li": [
                                                            {"text": " uses top-level structure from another package by FQ name "}
                                                        ]
                                                    }
,
                                                    {"text": " "},
                                                    {
                                                        "ul": [
                                                        ]
                                                    }

                                                ]
                                            }

                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "9c8cbd74cbf678759337bed746c91ab91e709fe6",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "echo_top_level_struct_FQ",
                                    "documentation": "FQ name used for top-level structure from another package - OK.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "FQ name used for top-level structure from another package - OK."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e4cefb1ef96cab6a613a0c8682ccf124e4e55bb2",
                                    "params": [
                                        {
                                            "name": "param",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as param",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "param"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.structures.top_level_struct_in_file"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.structures.diff",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "13c49d55f53e0acf751784b00f3da2f04a590fb9",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.structures.diff.another_top_level_struct",
                            "documentation": "Top-level structure",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top-level structure"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "895a40f385ad29b9949a769c37a771e95767cfa0",
                            "enumerations": [
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "dbl1",
                                    "documentation": "doc dbl1",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc dbl1"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                                ,
                                {
                                    "name": "str1",
                                    "documentation": "doc str1",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "doc str1"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "string"}
                                }
                            ]
                        }
                    ],
                    "services": [
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.unions",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "28188cd41607cbc0d34eef956ebaa82185023190",
                    "enumerations": [
                    ],
                    "structures": [
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.unions.test_struct",
                            "documentation": "Top level Structure.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Top level Structure."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "45f21b92a253ebc974db2961564bd4aba4884dec",
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.unions.test_struct.test_enum",
                                    "documentation": "Enum defined inside a top level structure; used for union tag type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Enum defined inside a top level structure; used for union tag type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d2d866d5344af6aac387a7ee028eb53a46633bc6",
                                    "values": [
                                        {
                                            "documentation": "enum constant - LONG",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - LONG"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "LONG"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - BOOLEAN",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - BOOLEAN"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "BOOLEAN"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - STRING",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - STRING"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "STRING"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - URI",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - URI"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "URI"
                                        }
                                        ,
                                        {
                                            "documentation": "enum constant - NONE",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum constant - NONE"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "NONE"
                                        }
                                    ]
                                }
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "test_enum",
                                    "documentation": "Field of enum type.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Field of enum type."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "UnionTag": {"value": "true"}
                                    },
                                    "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.test_struct.test_enum"}
                                }
                                ,
                                {
                                    "name": "long_val",
                                    "documentation": "long field, in the union\nThis field is optional and it is only relevant when the value of TestStruct.test-enum is LONG.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "long field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.TestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.TestStruct.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["LONG"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                }
                                ,
                                {
                                    "name": "boolean_val",
                                    "documentation": "boolean field, in the union\nThis field is optional and it is only relevant when the value of TestStruct.test-enum is BOOLEAN.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "boolean field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.TestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.TestStruct.TestEnum.BOOLEAN", "isToMember": true, "text": "TestEnum#BOOLEAN"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["BOOLEAN"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "string_val",
                                    "documentation": "string field, in the union\nThis field is optional and it is only relevant when the value of TestStruct.test-enum is STRING.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "string field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.TestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.TestStruct.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["STRING"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "num_URI_fields",
                                    "documentation": "uri field, in the union\nThis field is optional and it is only relevant when the value of TestStruct.test-enum is URI.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "uri field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.TestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.TestStruct.TestEnum.URI", "isToMember": true, "text": "TestEnum#URI"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "UnionCase": {"tag": "test_enum", "value": ["URI"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                }
                                ,
                                {
                                    "name": "URI_val",
                                    "documentation": "uri field, in the union\nThis field is optional and it is only relevant when the value of TestStruct.test-enum is URI.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "uri field, in the union"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.TestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.TestStruct.TestEnum.URI", "isToMember": true, "text": "TestEnum#URI"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "CanonicalName": {"value": "URI_val"},
                                        "UnionCase": {"tag": "test_enum", "value": ["URI"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "URI"}}
                                }
                                ,
                                {
                                    "name": "double_val",
                                    "documentation": "double field - out of the union",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "double field - out of the union"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "primitive", "primitive_type": "double"}
                                }
                            ]
                        }
                        ,
                        {
                            "type": "Structure",
                            "name": "com.vmware.vapi.test.unions.union_with_crud_struct",
                            "documentation": "Specification for VMDK disk. The resourceType is \"VMDK\" for this type of disk.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Specification for VMDK disk. The resourceType is \"VMDK\" for this type of disk."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                                "Crud": {"value": "true"},
                                "Read": {"value": "REQUIRED"},
                                "Create": {"value": "OPTIONAL"},
                                "Update": {"value": "OPTIONAL"}
                            },
                            "fingerprint": "f34251852dc63b6d3daa8229e240360f6e780fcd",
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.unions.union_with_crud_struct.disk_format",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "b6f7010223f8bb56c3c61f956a3ed809ef8bf5d6",
                                    "values": [
                                        {
                                            "documentation": "Flat file format. Disk space is allocated when created. Only the following virtual machine disk persistence modes are supported by this format: PERSISTENT NONPERSISTENT INDEPENDENT_PERSISTENT INDEPENDENT_NONPERSISTENT UNDOABLE APPEND",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Flat file format. Disk space is allocated when created. Only the following virtual machine disk persistence modes are supported by this format: PERSISTENT NONPERSISTENT INDEPENDENT_PERSISTENT INDEPENDENT_NONPERSISTENT UNDOABLE APPEND"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "FLAT"
                                        }
                                        ,
                                        {
                                            "documentation": "Space efficient sparse file format. Disk space is allocated as it grows. Only the following virtual machine disk persistence modes are supported by this format: PERSISTENT NONPERSISTENT INDEPENDENT_PERSISTENT INDEPENDENT_NONPERSISTENT UNDOABLE APPEND",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "Space efficient sparse file format. Disk space is allocated as it grows. Only the following virtual machine disk persistence modes are supported by this format: PERSISTENT NONPERSISTENT INDEPENDENT_PERSISTENT INDEPENDENT_NONPERSISTENT UNDOABLE APPEND"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "SE_SPARSE"
                                        }
                                    ]
                                }
                            ],
                            "constants": [
                            ],
                            "fields": [
                                {
                                    "name": "format",
                                    "documentation": "The format of disk. Cannot be changed in update once disk is created.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The format of disk. Cannot be changed in update once disk is created."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " must be provided for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is not used for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "REQUIRED"},
                                        "Update": {"value": "UNUSED"},
                                        "UnionTag": {"value": "true"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.union_with_crud_struct.disk_format"}}
                                }
                                ,
                                {
                                    "name": "uuid",
                                    "documentation": "General disk UUID.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "General disk UUID."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is not used for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is not used for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "UNUSED"},
                                        "Update": {"value": "UNUSED"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "change_id",
                                    "documentation": "The change ID of the virtual disk for the corresponding snapshot or virtual machine. This can be used to track incremental changes to a virtual disk.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The change ID of the virtual disk for the corresponding snapshot or virtual machine. This can be used to track incremental changes to a virtual disk."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is not used for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It is optional in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is not used for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Read": {"value": "OPTIONAL"},
                                        "Create": {"value": "UNUSED"},
                                        "Update": {"value": "UNUSED"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "content_id",
                                    "documentation": "Content ID of the virtual disk file, if available. A content ID indicates the logical contents of the disk backing and its parents. This property is only guaranteed to be up to date if this disk backing is not currently being written to by any virtual machine. The only supported operation is comparing if two content IDs are equal or not. The guarantee provided by the content ID is that if two disk backings have the same content ID and are not currently being written to, then reads issued from the guest operating system to those disk backings will return the same data.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Content ID of the virtual disk file, if available. A content ID indicates the logical contents of the disk backing and its parents. This property is only guaranteed to be up to date if this disk backing is not currently being written to by any virtual machine. The only supported operation is comparing if two content IDs are equal or not. The guarantee provided by the content ID is that if two disk backings have the same content ID and are not currently being written to, then reads issued from the guest operating system to those disk backings will return the same data."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is not used for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It is optional in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is not used for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Read": {"value": "OPTIONAL"},
                                        "Create": {"value": "UNUSED"},
                                        "Update": {"value": "UNUSED"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                }
                                ,
                                {
                                    "name": "digest_enabled",
                                    "documentation": "Indicates whether the disk backing has digest file enabled. If not specified, default is false.\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Indicates whether the disk backing has digest file enabled. If not specified, default is false."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "eagerly_scrub",
                                    "documentation": "Indicates to the underlying filesystem whether the virtual disk backing file should be scrubbed completely at this time. Virtual disks on some filesystems like VMFS3 are zeroed-out lazily so that disk creation time doesn't take too long. However, clustering applications and features like Fault Tolerance require that the virtual disk be completely scrubbed. This setting allows controlling the scrubbing policy on a per-disk basis. If this flag is unset or set to false when creating a new disk, the disk scrubbing policy will be decided by the filesystem. If this flag is unset or set to false when editing an existing disk, it is ignored. For Read, this property may be unset if its value is unknown. If not specified, default is false.\nThis field is optional and it is only relevant when the value of UnionWithCrudStruct.format is FLAT.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Indicates to the underlying filesystem whether the virtual disk backing file should be scrubbed completely at this time. Virtual disks on some filesystems like VMFS3 are zeroed-out lazily so that disk creation time doesn't take too long. However, clustering applications and features like Fault Tolerance require that the virtual disk be completely scrubbed. This setting allows controlling the scrubbing policy on a per-disk basis. If this flag is unset or set to false when creating a new disk, the disk scrubbing policy will be decided by the filesystem. If this flag is unset or set to false when editing an existing disk, it is ignored. For Read, this property may be unset if its value is unknown. If not specified, default is false."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.format", "isToMember": true, "text": "#format", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.DiskFormat.FLAT", "isToMember": true, "text": "DiskFormat#FLAT"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "OPTIONAL"},
                                        "Update": {"value": "UNUSED"},
                                        "UnionCase": {"tag": "format", "value": ["FLAT"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "grain_size",
                                    "documentation": "The grain size in kB. The default size is 1024 kB.\nThis field is optional and it is only relevant when the value of UnionWithCrudStruct.format is SE_SPARSE.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "The grain size in kB. The default size is 1024 kB."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.format", "isToMember": true, "text": "#format", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.DiskFormat.SE_SPARSE", "isToMember": true, "text": "DiskFormat#SE_SPARSE"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "OPTIONAL"},
                                        "Update": {"value": "UNUSED"},
                                        "UnionCase": {"tag": "format", "value": ["SE_SPARSE"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                }
                                ,
                                {
                                    "name": "required_for_all",
                                    "documentation": "UnionCase field which is required for all CRUD operation\nThis field is optional and it is only relevant when the value of UnionWithCrudStruct.format is SE_SPARSE.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "UnionCase field which is required for all CRUD operation"}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.format", "isToMember": true, "text": "#format", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.DiskFormat.SE_SPARSE", "isToMember": true, "text": "DiskFormat#SE_SPARSE"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "REQUIRED"},
                                        "Update": {"value": "REQUIRED"},
                                        "Read": {"value": "REQUIRED"},
                                        "UnionCase": {"tag": "format", "value": ["SE_SPARSE"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                }
                                ,
                                {
                                    "name": "split",
                                    "documentation": "Indicates the type of virtual disk file: split or monolithic. If true, the virtual disk is stored in multiple files, each 2GB. This property is always false for disks created on ESX. When an existing split disk such as those created by VMware Server is added to a virtual machine on ESX, the property will be set to true. If not specified, default is false.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Indicates the type of virtual disk file: split or monolithic. If true, the virtual disk is stored in multiple files, each 2GB. This property is always false for disks created on ESX. When an existing split disk such as those created by VMware Server is added to a virtual machine on ESX, the property will be set to true. If not specified, default is false."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is not used for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is not used for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "UNUSED"},
                                        "Update": {"value": "UNUSED"}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "thin_provisioned",
                                    "documentation": "Indicates to the underlying filesystem, whether the virtual disk backing file should be allocated lazily (using thin provisioning). This flag is only used for file systems that support configuring the provisioning policy on a per file basis, such as VMFS3. If not specified, default is false.\nThis field is optional and it is only relevant when the value of UnionWithCrudStruct.format is FLAT.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Indicates to the underlying filesystem, whether the virtual disk backing file should be allocated lazily (using thin provisioning). This flag is only used for file systems that support configuring the provisioning policy on a per file basis, such as VMFS3. If not specified, default is false."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional and it is only relevant when the value of "},
                                                {"atName": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.format", "isToMember": true, "text": "#format", "tag": "name"}},
                                                {"text": " is "},
                                                {"atLink": {"resolved": "com.vmware.vapi.test.unions.UnionWithCrudStruct.DiskFormat.FLAT", "isToMember": true, "text": "DiskFormat#FLAT"}},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                        "Create": {"value": "OPTIONAL"},
                                        "Update": {"value": "UNUSED"},
                                        "UnionCase": {"tag": "format", "value": ["FLAT"]}
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                                ,
                                {
                                    "name": "write_through",
                                    "documentation": "Indicates whether writes should go directly to the file system or should be buffered. If not specified, default is false.\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Indicates whether writes should go directly to the file system or should be buffered. If not specified, default is false."}
                                                ]
                                            }
                                        ]
                                        ,
                                        "optionalReason": 
                                        {
                                            "docModel": [
                                                {"text": "This "},
                                                {"atTerm": "field"},
                                                {"text": " is optional for the "},
                                                {"atCode": "create"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": ". It will always be present in the "},
                                                {"atTerm": "result"},
                                                {"text": " of the "},
                                                {"atCode": "get"},
                                                {"text": " or "},
                                                {"atCode": "list"},
                                                {"text": " "},
                                                {"atTerm": "operations"},
                                                {"text": ". It is optional for the "},
                                                {"atCode": "update"},
                                                {"text": " "},
                                                {"atTerm": "operation"},
                                                {"text": "."}
                                            ]
                                        }
                                    },
                                    "metadata": {
                                    },
                                    "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "boolean"}}
                                }
                            ]
                        }
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.unions.service1",
                            "documentation": "Service for testing discriminated unions support in language bindings.",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Service for testing discriminated unions support in language bindings."}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "58fb3f7639eb7d285174d064f76a79250e526511",
                            "constants": [
                            ],
                            "enumerations": [
                                {
                                    "name": "com.vmware.vapi.test.unions.service1.test_enum",
                                    "documentation": "Enum used for type of discriminated union tag",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Enum used for type of discriminated union tag"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "8cfed1bb73cee4a6adacb762e29900db56ff504c",
                                    "values": [
                                        {
                                            "documentation": "constant - LONG",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "constant - LONG"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "LONG"
                                        }
                                        ,
                                        {
                                            "documentation": "constant - STRING",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "constant - STRING"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "STRING"
                                        }
                                        ,
                                        {
                                            "documentation": "constant - NONE",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "constant - NONE"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "NONE"
                                        }
                                    ]
                                }
                                ,
                                {
                                    "name": "com.vmware.vapi.test.unions.service1.test_enum2",
                                    "documentation": "Enum used for type of discriminated union tag",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Enum used for type of discriminated union tag"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "496d1287b4aa448d9bbfecf93c0d629acfb4dc9e",
                                    "values": [
                                        {
                                            "documentation": "constant - LOCAL",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "constant - LOCAL"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "LOCAL"
                                        }
                                        ,
                                        {
                                            "documentation": "constant - REMOTE",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "constant - REMOTE"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "REMOTE"
                                        }
                                        ,
                                        {
                                            "documentation": "constant - NONE",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "constant - NONE"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "name": "NONE"
                                        }
                                    ]
                                }
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.simple_struct",
                                    "documentation": "Simple structure with no union tags",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Simple structure with no union tags"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "293d5f6cdc49b84e830d8083db15be92e007ff5f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "long_val",
                                            "documentation": "long field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "long"}
                                        }
                                        ,
                                        {
                                            "name": "string_val",
                                            "documentation": "string field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.local_test_struct",
                                    "documentation": "Test local structure with union",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test local structure with union"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d4b804da8a902548cc6d06fca464f96995373877",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "long_val",
                                            "documentation": "long field\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct.test-enum is LONG.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "string_val",
                                            "documentation": "string field\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct.test-enum is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.structure_with_two_union_tags",
                                    "documentation": "Structure with UnionTag and nested structure with UnionTag and fields with same name in different struct levels",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure with UnionTag and nested structure with UnionTag and fields with same name in different struct levels"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a9e409b8962d35a916ebf246f495dba7eeec7cea",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum1",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "test_enum2",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "long_val1",
                                            "documentation": "long field\nThis field is optional and it is only relevant when the value of Service1.StructureWithTwoUnionTags.test-enum1 is LONG.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.StructureWithTwoUnionTags.testEnum1", "isToMember": true, "text": "#testEnum1", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum1", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "string_val1",
                                            "documentation": "string field\nThis field is optional and it is only relevant when the value of Service1.StructureWithTwoUnionTags.test-enum1 is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.StructureWithTwoUnionTags.testEnum1", "isToMember": true, "text": "#testEnum1", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum1", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "long_val2",
                                            "documentation": "long field\nThis field is optional and it is only relevant when the value of Service1.StructureWithTwoUnionTags.test-enum2 is LONG.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.StructureWithTwoUnionTags.testEnum2", "isToMember": true, "text": "#testEnum2", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum2", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "string_val2",
                                            "documentation": "string field\nThis field is optional and it is only relevant when the value of Service1.StructureWithTwoUnionTags.test-enum2 is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.StructureWithTwoUnionTags.testEnum2", "isToMember": true, "text": "#testEnum2", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum2", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.struct_with_union_case_of_struct",
                                    "documentation": "Test local structure with union case of structure",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test local structure with union case of structure"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d45ba4e69de15d9b4b936801600fcaddaf6bcd89",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "long_val",
                                            "documentation": "long field\nThis field is optional and it is only relevant when the value of Service1.StructWithUnionCaseOfStruct.test-enum is LONG.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "long field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.StructWithUnionCaseOfStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "simple_struct",
                                            "documentation": "string field\nThis field is optional and it is only relevant when the value of Service1.StructWithUnionCaseOfStruct.test-enum is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "string field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.StructWithUnionCaseOfStruct.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.simple_struct"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.local_test_struct2",
                                    "documentation": "Test local struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test local struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "5a40cb78581430344d1bc0a1d524f891ca1cce63",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum2"}
                                        }
                                        ,
                                        {
                                            "name": "remote_host",
                                            "documentation": "remote host\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct2.test-enum is REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote host"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct2.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "port",
                                            "documentation": "remote port\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct2.test-enum is one of LOCAL or REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote port"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct2.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is one of "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.LOCAL", "isToMember": true, "text": "TestEnum2#LOCAL"}},
                                                        {"text": " or "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LOCAL", "REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.local_test_struct3",
                                    "documentation": "Structure with UnionTag and nested structure with another UnionTag",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure with UnionTag and nested structure with another UnionTag"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "457e7508033f0e20eab95714d9448c2c2623286c",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum2"}
                                        }
                                        ,
                                        {
                                            "name": "remote_host",
                                            "documentation": "remote host\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct3.test-enum is REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote host"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct3.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "port",
                                            "documentation": "remote port\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct3.test-enum is one of LOCAL or REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote port"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct3.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is one of "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.LOCAL", "isToMember": true, "text": "TestEnum2#LOCAL"}},
                                                        {"text": " or "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LOCAL", "REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "test_struct",
                                            "documentation": "nested structure with UnionTag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested structure with UnionTag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.test_struct"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.local_test_struct4",
                                    "documentation": "Structure with UnionTag and nested structure with UnionTag and fields with same name in different struct levels",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure with UnionTag and nested structure with UnionTag and fields with same name in different struct levels"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d7dad84858ccb70859885b9b3c71a2c718fc0b6f",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum2"}
                                        }
                                        ,
                                        {
                                            "name": "remote_host",
                                            "documentation": "remote host\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct4.test-enum is REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote host"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct4.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "port",
                                            "documentation": "remote port\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct4.test-enum is one of LOCAL or REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote port"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct4.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is one of "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.LOCAL", "isToMember": true, "text": "TestEnum2#LOCAL"}},
                                                        {"text": " or "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LOCAL", "REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "test_struct",
                                            "documentation": "nested structure with UnionTag and same field names as current structure",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested structure with UnionTag and same field names as current structure"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct2"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.local_test_struct5",
                                    "documentation": "Structure with UnionTag and nested structure with UnionTag which is a UnionCase",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure with UnionTag and nested structure with UnionTag which is a UnionCase"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ae067e1ff3beb7d933de5a204a06672b8f4c2c65",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum2"}
                                        }
                                        ,
                                        {
                                            "name": "remote_host",
                                            "documentation": "remote host\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct5.test-enum is REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote host"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct5.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "test_struct",
                                            "documentation": "nested structure with UnionTag and same field names as current structure\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct5.test-enum is LOCAL.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested structure with UnionTag and same field names as current structure"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct5.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.LOCAL", "isToMember": true, "text": "TestEnum2#LOCAL"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LOCAL"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct2"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.local_test_struct6",
                                    "documentation": "Structure with UnionTag and nested structure with UnionTag which is a UnionCase and of type list",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Structure with UnionTag and nested structure with UnionTag which is a UnionCase and of type list"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "54a4c3f7d745535eb85b03a699cfae151e4e619d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "enum field - union tag",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "enum field - union tag"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum2"}
                                        }
                                        ,
                                        {
                                            "name": "remote_host",
                                            "documentation": "remote host\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct6.test-enum is REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "remote host"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct6.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "test_struct",
                                            "documentation": "nested structure with UnionTag and same field names as current structure\nThis field is optional and it is only relevant when the value of Service1.LocalTestStruct6.test-enum is LOCAL.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested structure with UnionTag and same field names as current structure"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "field"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atName": {"resolved": "com.vmware.vapi.test.unions.Service1.LocalTestStruct6.testEnum", "isToMember": true, "text": "#testEnum", "tag": "name"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.LOCAL", "isToMember": true, "text": "TestEnum2#LOCAL"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LOCAL"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct2"}}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.optional_case_struct",
                                    "documentation": "optional union case struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "optional union case struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "fb280c0a1ad4a01332c9d55c51360427934fb76b",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "tag",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "long_case",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "required_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.optional_tag_struct",
                                    "documentation": "optional union tag struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "optional union tag struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9cd8afcd53cbb9f93a17967fda755bbc0f05a2cf",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "tag",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}}
                                        }
                                        ,
                                        {
                                            "name": "long_case",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "required_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.union_with_optional_by_default_struct",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                        "FieldsOptionalByDefault": {"value": "true"}
                                    },
                                    "fingerprint": "5f74ae365ccf43dbb48a49310269ead990723a99",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "tag",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}}
                                        }
                                        ,
                                        {
                                            "name": "long_case",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "required_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.unions.service1.optional_by_default_struct",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                        "FieldsOptionalByDefault": {"value": "true"}
                                    },
                                    "fingerprint": "4d1734e8a46c16d946f3422d1ecd29bff403efef",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "tag",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}}
                                        }
                                        ,
                                        {
                                            "name": "long_case",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "required_string",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                                "Required": {"value": "true"},
                                                "UnionCase": {"tag": "tag", "value": ["STRING"]}
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "echo_local_test_struct",
                                    "documentation": "Echoes a local\/nested structure value which contains a discriminated union.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a local\/nested structure value which contains a discriminated union."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "1f3209085f15caf86ea90885a5a0a50b395e38d5",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_local_test_struct2",
                                    "documentation": "Echoes a local\/nested structure value which contains a multi-value case discriminated union.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a local\/nested structure value which contains a multi-value case discriminated union."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "a017da25dd6fc712a9d603333e642641acfa84ab",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct2"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct2"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_test_struct",
                                    "documentation": "Echoes a top-level structure value which contains a discriminated union.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a top-level structure value which contains a discriminated union."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "eedbcf93312638e12b86e8a1e2936feaaf70db4c",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.test_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as inputTestStruct",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"},
                                                        {"text": "TestStruct"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.test_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_local_test_struct3",
                                    "documentation": "Echoes a top-level structure value which contains a union and another test structure with union.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a top-level structure value which contains a union and another test structure with union."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "733dee0a4dc9cf8c0990bde1d1eb74d2224bff80",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct3"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct3"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_local_test_struct4",
                                    "documentation": "Echoes a top-level structure value which contains a union and another test structure with union tag and repeated field names.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a top-level structure value which contains a union and another test structure with union tag and repeated field names."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "d40ec882d4030cb16fd934a84d6e61e109e0bd04",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct4"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct4"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_local_test_struct5",
                                    "documentation": "Echoes a top-level structure value which contains a union and another test structure with union tag which is a union case.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a top-level structure value which contains a union and another test structure with union tag which is a union case."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "71d3612f914fea872430e282ca8f08b8aa406839",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct5"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct5"}
                                    }
                                }
                                ,
                                {
                                    "name": "return_local_test_struct6",
                                    "documentation": "From given LocalTestStruct5 returns LocalTestStruct6 structure by making the testStruct property of LocalTestStruct5 to List",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "From given LocalTestStruct5 returns LocalTestStruct6 structure by making the testStruct property of LocalTestStruct5 to List"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "70ebd50baf5ecf570c42803ecc9a8078e992bc6a",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct5"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "LocalTestStruct6 object constructed from input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "LocalTestStruct6 object constructed from "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.local_test_struct6"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_struct_with_two_union_tags",
                                    "documentation": "Echoes a top-level structure value which contains two union tags",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a top-level structure value which contains two union tags"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "98658ae3fb713425e00bd9cd9cdf6e7543c395a7",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.structure_with_two_union_tags"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.structure_with_two_union_tags"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_struct_with_union_case_of_struct",
                                    "documentation": "Echoes a top-level structure value which contains two union tags",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a top-level structure value which contains two union tags"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6b47535b71cdfb1f2b19b047faee66fc87a4b6f8",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.struct_with_union_case_of_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.struct_with_union_case_of_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "validate_union_params",
                                    "documentation": "Test method for the validity of the union in method parameters.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test method for the validity of the union in method parameters."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "94d147753fb7d12a400123243fe59f906a252b6e",
                                    "params": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "test enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}
                                        }
                                        ,
                                        {
                                            "name": "long_val",
                                            "documentation": "union case long value\nThis parameter is optional and it is only relevant when the value of testEnum is LONG.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case long value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateUnionParams#testEnum"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "string_val",
                                            "documentation": "union case string value\nThis parameter is optional and it is only relevant when the value of testEnum is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case string value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateUnionParams#testEnum"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "boolean_val",
                                            "documentation": "boolean value (not in union)",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "boolean value (not in union)"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if input union was in valid state",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if input union was in valid state"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "validate_union_params2",
                                    "documentation": "Test method for the validity of a multi-value case union in method parameters.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test method for the validity of a multi-value case union in method parameters."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "281cdb7462f9b93ccb6c1c16f496d5a9e74a2760",
                                    "params": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "test enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum2"}
                                        }
                                        ,
                                        {
                                            "name": "remote_host",
                                            "documentation": "union case remote host address\nThis parameter is optional and it is only relevant when the value of testEnum is REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case remote host address"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateUnionParams2#testEnum"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "port",
                                            "documentation": "union case port\nThis parameter is optional and it is only relevant when the value of testEnum is one of LOCAL or REMOTE.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case port"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateUnionParams2#testEnum"}},
                                                        {"text": " is one of "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.LOCAL", "isToMember": true, "text": "TestEnum2#LOCAL"}},
                                                        {"text": " or "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum2.REMOTE", "isToMember": true, "text": "TestEnum2#REMOTE"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LOCAL", "REMOTE"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if input union was in valid state",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if input union was in valid state"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_optional_case_struct",
                                    "documentation": "Echoes a local structure value which contains a discriminated union.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a local structure value which contains a discriminated union."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "556d3b1d7548e53923db15ccac0baed5df00bbee",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_case_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_case_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "validate_optional_union_params",
                                    "documentation": "Test method for the validity of the union in method parameters.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test method for the validity of the union in method parameters."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "e2e1b0ba4ab0ac2fd9ed8e47a1a12cd5167a3ff5",
                                    "params": [
                                        {
                                            "name": "test_enum",
                                            "documentation": "test enum",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test enum"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                                "UnionTag": {"value": "true"}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Enumeration", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.test_enum"}}
                                        }
                                        ,
                                        {
                                            "name": "long_val",
                                            "documentation": "union case long value\nThis parameter is optional and it is only relevant when the value of testEnum is LONG.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case long value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateOptionalUnionParams#testEnum"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.LONG", "isToMember": true, "text": "TestEnum#LONG"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["LONG"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "long"}}
                                        }
                                        ,
                                        {
                                            "name": "string_val",
                                            "documentation": "union case string value\nThis parameter is optional and it is only relevant when the value of testEnum is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case string value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateOptionalUnionParams#testEnum"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "optional_string_val",
                                            "documentation": "union case string value\nThis parameter is optional and it is only relevant when the value of testEnum is STRING.",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "union case string value"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "This "},
                                                        {"atTerm": "parameter"},
                                                        {"text": " is optional and it is only relevant when the value of "},
                                                        {"atParamName": {"text": "testEnum", "resolved": "com.vmware.vapi.test.unions.Service1.validateOptionalUnionParams#testEnum"}},
                                                        {"text": " is "},
                                                        {"atLink": {"resolved": "com.vmware.vapi.test.unions.Service1.TestEnum.STRING", "isToMember": true, "text": "TestEnum#STRING"}},
                                                        {"text": "."}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                                "UnionCase": {"tag": "test_enum", "value": ["STRING"]}
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                        ,
                                        {
                                            "name": "boolean_val",
                                            "documentation": "boolean value (not in union)",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "boolean value (not in union)"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "boolean"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "true if input union was in valid state",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"atCode": "true"},
                                                        {"text": " if input union was in valid state"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_optional_tag_struct",
                                    "documentation": "Echoes a local structure value which contains a discriminated union.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a local structure value which contains a discriminated union."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "4d5c06c7992be3b9d9ee036f5035df189f00c8f1",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "test input",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "test input"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_tag_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "same as input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "same as "},
                                                        {"atCode": "input"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_tag_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_optional_by_default",
                                    "documentation": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a structure with Union and @FieldsOptionalByDefault."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "c349f5d1a9d1540503d925bdf144cb37e97e6832",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "the value to echo back",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "the value to echo back"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.union_with_optional_by_default_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {
                                                            "code": [
                                                                {"text": "input"}
                                                            ]
                                                        }

                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.union_with_optional_by_default_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_optional_by_default_struct",
                                    "documentation": "Echoes a structure with Union and @FieldsOptionalByDefault.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Echoes a structure with Union and @FieldsOptionalByDefault."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "088d08f54311d746dcadfcda45d54f2e3458537d",
                                    "params": [
                                        {
                                            "name": "input",
                                            "documentation": "the value to echo back",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "the value to echo back"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_by_default_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "input",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {
                                                            "code": [
                                                                {"text": "input"}
                                                            ]
                                                        }

                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_by_default_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_invalid_optional_by_default_struct",
                                    "documentation": "Returns an invalid structure with Union and @FieldsOptionalByDefault. This should result in an error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Returns an invalid structure with Union and @FieldsOptionalByDefault. This should result in an error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "42214b8beef80c58bada8e318c3cf1f777b19728",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "OptionalByDefaultStruct",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "OptionalByDefaultStruct"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.service1.optional_by_default_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "create",
                                    "documentation": "",
                                    "docModels": {
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "ca35e83514d6b18fefd151e5aec09236c2097c17",
                                    "params": [
                                        {
                                            "name": "create_spec",
                                            "documentation": "the create specification",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "the create specification"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.union_with_crud_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "echo_invalid_union_with_crud_struct",
                                    "documentation": "Returns an invalid structure with Union and @Crud. This should result in an error",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Returns an invalid structure with Union and @Crud. This should result in an error"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "37a3eb150e7ed2db1d89cf8d5236f081fa882a9c",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "UnionWithCrudStruct",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "UnionWithCrudStruct"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.unions.union_with_crud_struct"}
                                    }
                                }
                            ]
                        }
                    ]
                }
                ,
                {
                    "name": "com.vmware.vapi.test.versioning",
                    "documentation": "",
                    "docModels": {
                    },
                    "metadata": {
                    },
                    "fingerprint": "8d944b36b60f26f69188f5451274b08ae096ede9",
                    "enumerations": [
                    ],
                    "structures": [
                    ],
                    "services": [
                        {
                            "name": "com.vmware.vapi.test.versioning.new_server",
                            "documentation": "Represents newer version of API (OldServer - previous version)",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Represents newer version of API (OldServer - previous version)"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "caa5a930a913af817ff250ca69dd53e06bdc444b",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.versioning.new_server.struct",
                                    "documentation": "test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f084d048ee2f0f833671d6977d73e48cf881c702",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "mandatory",
                                            "documentation": "required field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "required field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "optional",
                                            "documentation": "optional field\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional field"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.versioning.new_server.old_struct",
                                    "documentation": "older version of the test struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "older version of the test struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "3118f8045bddef3d20209bcefa7436456324dcd3",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "mandatory",
                                            "documentation": "required field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "required field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.versioning.new_server.struct_with_optional_struct",
                                    "documentation": "test struct with optional struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct with optional struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "394adef21ea4e2c186549c5a8364cc9e39cb2352",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "mandatory",
                                            "documentation": "required field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "required field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "optional_struct",
                                            "documentation": "optional struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.nested_struct"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.versioning.new_server.struct_with_list_struct",
                                    "documentation": "test struct with list of structs",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct with list of structs"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "86b24850e424af6722baaae94dbbfc2fb04a5093",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "mandatory",
                                            "documentation": "required field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "required field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "list_struct",
                                            "documentation": "list of structs",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of structs"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.nested_struct"}}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.versioning.new_server.struct_with_nested_structs",
                                    "documentation": "test struct with nested struct types",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test struct with nested struct types"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "81582a3cb39888062e98d698b66582ffa737c02a",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "mandatory",
                                            "documentation": "required field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "required field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "optional_struct",
                                            "documentation": "optional struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "optional struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.nested_struct"}}
                                        }
                                        ,
                                        {
                                            "name": "list_struct",
                                            "documentation": "list of structs",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "list of structs"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "List", "element_type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.nested_struct"}}
                                        }
                                        ,
                                        {
                                            "name": "nested_struct",
                                            "documentation": "nested struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "nested struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.nested_struct"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Structure",
                                    "name": "com.vmware.vapi.test.versioning.new_server.nested_struct",
                                    "documentation": "test nested struct",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test nested struct"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "12af0c3f6bbf0697f3a0c63ce0eedf98ded48440",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "string_field",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.versioning.new_server.old_custom_error",
                                    "documentation": "test error - v1, old",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test error - v1, old"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "ErrorType": {"value": "Exception"}
                                    },
                                    "fingerprint": "9e51a7eb6203db127d5d7fc5a63fb6154daafda4",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "required",
                                            "documentation": "v1 field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "v1 field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ]
                                }
                                ,
                                {
                                    "type": "Error",
                                    "name": "com.vmware.vapi.test.versioning.new_server.custom_error",
                                    "documentation": "test error - v2, with added field",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "test error - v2, with added field"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                        "ErrorType": {"value": "Exception"}
                                    },
                                    "fingerprint": "8e392fa5354096ffb7ba6e21d73da8b2f8e5ee1d",
                                    "enumerations": [
                                    ],
                                    "constants": [
                                    ],
                                    "fields": [
                                        {
                                            "name": "mandatory",
                                            "documentation": "v1 field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "v1 field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "new_field",
                                            "documentation": "new v2 field",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "new v2 field"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ]
                                }
                            ],
                            "operations": [
                                {
                                    "name": "method",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "795e7b603d5094341860e456e6618ed2fa38e33e",
                                    "params": [
                                        {
                                            "name": "param1",
                                            "documentation": "param 1",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "param 1"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                        ,
                                        {
                                            "name": "param2",
                                            "documentation": "param 2 (not there in old version - OldServer)\nreason",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "param 2 (not there in old version - OldServer)"}
                                                        ]
                                                    }
                                                ]
                                                ,
                                                "optionalReason": 
                                                {
                                                    "docModel": [
                                                        {"text": "reason"}
                                                    ]
                                                }
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "generic", "generic_type": "Optional", "element_type": {"category": "primitive", "primitive_type": "string"}}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_struct",
                                    "documentation": "New operation - not there in OldServer",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "New operation - not there in OldServer"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6a4cf3a91f74f2075f1a194395a6cee60d78fcd8",
                                    "params": [
                                        {
                                            "name": "struct",
                                            "documentation": "input param",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "input param"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "return_struct",
                                    "documentation": "New operation - not there in OldServer",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "New operation - not there in OldServer"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "f965c558288c9165c31e95a149a9f6ee508f370a",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "struct return value",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "struct return value"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "return_old_struct",
                                    "documentation": "Returns old struct (with less fields set)",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Returns old struct (with less fields set)"}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "802b2d72dd6e83d6c864932f3fed3731e90e623a",
                                    "params": [
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "old struct return value",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "old struct return value"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.old_struct"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_error",
                                    "documentation": "Accepts and error as parameter.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Accepts and error as parameter."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "dbb8babd582089d0a113f7ba42e3698e4dc15ede",
                                    "params": [
                                        {
                                            "name": "param1",
                                            "documentation": "",
                                            "docModels": {
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.custom_error"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "always true",
                                        "docModels": {
                                            "descriptions": [
                                                {
                                                    "docModel": [
                                                        {"text": "always "},
                                                        {"atCode": "true"}
                                                    ]
                                                }
                                            ]
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "boolean"}
                                    }
                                }
                            ]
                        }
                        ,
                        {
                            "name": "com.vmware.vapi.test.versioning.old_server",
                            "documentation": "Represents older version of API (NewServer is the newer one)",
                            "docModels": {
                                "descriptions": [
                                    {
                                        "docModel": [
                                            {"text": "Represents older version of API (NewServer is the newer one)"}
                                        ]
                                    }
                                ]
                            },
                            "metadata": {
                            },
                            "fingerprint": "380cef24fc8b31e056c2c992b143573adf41c069",
                            "constants": [
                            ],
                            "enumerations": [
                            ],
                            "structures": [
                            ],
                            "operations": [
                                {
                                    "name": "method",
                                    "documentation": "Test operation.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "9bf6f3abe532918572b8be77b3b88ad4b9b18560",
                                    "params": [
                                        {
                                            "name": "param1",
                                            "documentation": "param 1",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "param 1"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "primitive", "primitive_type": "string"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_struct_with_optional_struct",
                                    "documentation": "Test operation with struct with an optional struct.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation with struct with an optional struct."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "6c71b2661efa1bd6e9e67a1cb47472a33eb410c5",
                                    "params": [
                                        {
                                            "name": "struct",
                                            "documentation": "The input struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The input struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.struct_with_optional_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_struct_with_list_struct",
                                    "documentation": "Test operation with struct with a list of structs.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation with struct with a list of structs."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "01e25277832aec17d7a6bc95e636bffe605f119e",
                                    "params": [
                                        {
                                            "name": "struct",
                                            "documentation": "The input struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The input struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.struct_with_list_struct"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                                ,
                                {
                                    "name": "accept_struct_with_nested_structs",
                                    "documentation": "Test operation with struct with nested struct types.",
                                    "docModels": {
                                        "descriptions": [
                                            {
                                                "docModel": [
                                                    {"text": "Test operation with struct with nested struct types."}
                                                ]
                                            }
                                        ]
                                    },
                                    "metadata": {
                                    },
                                    "fingerprint": "90fce988918f7ab18b2fa2adf9503b70dfb95379",
                                    "params": [
                                        {
                                            "name": "struct",
                                            "documentation": "The input struct",
                                            "docModels": {
                                                "descriptions": [
                                                    {
                                                        "docModel": [
                                                            {"text": "The input struct"}
                                                        ]
                                                    }
                                                ]
                                            },
                                            "metadata": {
                                            },
                                            "type": {"category": "user_defined", "user_defined_type": "Structure", "user_defined_type_name": "com.vmware.vapi.test.versioning.new_server.struct_with_nested_structs"}
                                        }
                                    ],
                                    "errors": [
                                    ],
                                    "result": {
                                        "documentation": "",
                                        "docModels": {
                                        },
                                        "metadata": {
                                        },
                                        "type": {"category": "primitive", "primitive_type": "void"}
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }
}
