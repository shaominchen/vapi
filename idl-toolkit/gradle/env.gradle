/* Copyright 2012-2014 VMware, Inc.  All rights reserved. */

//See: http://vapi-jenkins.eng.vmware.com/env-vars.html (where host:port is any Jenkins deployment)
rootProject.ext.jenkins = [
    built:(System.env['JENKINS_URL']) ? true : false,
    build: [
        label:"ci${System.env['BUILD_NUMBER']}",
        number:System.env['BUILD_NUMBER'],
        id:System.env['BUILD_ID'],
        tag:System.env['BUILD_TAG'],
        url:System.env['BUILD_URL'],
    ],
    job: [
        name:System.env['JOB_NAME'],
        url:System.env['JOB_URL'],
    ],
    node: [
        name:System.env['NODE_NAME'],
        labels:System.env['NODE_LABELS'],
    ],
    workspace:System.env['WORKSPACE'],
    svnRevision:System.env['SVN_REVISION'],
    url:System.env['JENKINS_URL'],
]

rootProject.ext.gobuild = [
    built:(System.env['CHANGE_NUMBER']) ? true : false,
    build: [
        type:System.env['BUILDTYPE'],
        number:System.env['BUILD_NUMBER'],
        productNumber:System.env['PRODUCT_BUILD_NUMBER'],
        //TODO: I can't track down the "build kind" (ob | sb), which may be nice to squeeze in the label one day
        // label:"${System.env['BUILDKIND']}${System.env['BUILD_NUMBER']}",
        label:System.env['BUILD_NUMBER'],
    ],
    branch:System.env['BRANCH_NAME'],
    change: [
        number:System.env['CHANGE_NUMBER'],
    ],
    release: [
        type:System.env['RELEASETYPE'],
    ],
]

// Configure the build directory for the project and all subprojects
def buildRoot = System.getProperty('build.root')
if (buildRoot) {
    def topBuildDir = new File(buildRoot)
    project.setProperty('buildDir', topBuildDir)
    subprojects.collect { subproject ->
        def subBuildDir = new File(topBuildDir, subproject.name)
        subproject.setProperty('buildDir', subBuildDir)
    }
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'groovy'
    apply plugin: 'maven'

    def versionPropertiesFile = System.getProperty('vapi.core.version.properties')
    if (versionPropertiesFile != null) {
        def props = new Properties()
        props.load(new FileInputStream(versionPropertiesFile))
        for (prop in props) {
            project.ext.setProperty(prop.key, prop.value)
        }
    }

    def major = project.versionMajor ?: "1"
    def minor = project.versionMinor ?: "0"
    def patch = project.versionPatch ?: "0"
    def label = rootProject.ext.jenkins.built ? rootProject.ext.jenkins.build.label :
                rootProject.ext.gobuild.built ? rootProject.ext.gobuild.build.label :
                System.properties['user.name']
    version = [major, minor, patch, label].join('.')
    group = 'com.vmware.vapi'

    repositories {
        maven {
            // fyi - internal repos only, please!
            url 'http://build-squid.eng.vmware.com/nexus/content/groups/repo'
        }
    }

    processResources {
        from("..") {
            include 'application.properties'
            filter(org.apache.tools.ant.filters.ReplaceTokens, tokens:[version:project.version])
        }
    }

    // this idl-toolkit version produces the following Groovy transitive dependencies
    dependencies {
        compile module('org.codehaus.groovy:groovy-all:2.1.9') {
            dependency('commons-cli:commons-cli:1.2')
            dependency('org.fusesource.jansi:jansi:1.7')
            module('org.apache.ant:ant:1.8.4') {
                dependency('org.apache.ant:ant-launcher:1.8.4')
            }
        }

        testCompile group: 'junit', name: 'junit', version: '4.11'
    }
}

subprojects {
    test {
        if (rootProject.buildDir) {
            systemProperty 'build.root', rootProject.buildDir
            systemProperty 'build.project', project.buildDir
            testLogging.showStandardStreams = true
        }
    }
}
